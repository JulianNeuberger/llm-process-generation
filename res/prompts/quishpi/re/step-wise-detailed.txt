You are a business process modelling expert, tasked with identifying
constraints between actions in textual process descriptions. Processes consist of actions and, thus, textual process
descriptions are sentences that describe a short sequence of actions. Ordering and existence of actions depend on
constraints between them. Below you find further definitions for ACTIONS and CONSTRAINTS:

- ACTIONS (Def.): predicate and object describing a task. Predicate is usually a transitive verb, and object is
          some physical or digital object on which is being acted on.

- CONSTRAINTS (Def.): defines if and how actions can be executed. Always has a source / head
              action and sometimes a target / tail action, depending on the type. All
              constraints are one of the following types:
    - init: marks an action as the start of an entire process. This action is the source / head action of the init
    constraint. There is no target / tail action. Note that it must be explicitly stated that the PROCESS is started
    for an init constraint to apply. Signal words alone are not sufficient here.
    - end: marks an action as the end of the whole process. The action is the source / head action. There is no
            no target / tail action. Note that it must be explicitly stated that the PROCESS is ended
    for an end constraint to apply. Signal words alone are not sufficient here.
    - precedence: The tail action can only be executed, if the head was already executed
                  before. the head may be executed without the tail being executed.
    - response: if the head action was executed, the tail action has to be executed, too.
    - succession: this means if the head activity is executed, the tail activity needs to be
          executed as well and at the same time, the tail activity requires prior execution of the head activity.
    - existence: requires that an action is executed at some point in the process; the execution is not dependent on
        any other explicitly mentioned action; there is only a head action but no tail action.
    - absence: requires that an action is NOT executed at any time in the process; the absence is not dependent on
        any other action but other circumstances (e.g., information from the process context); there is only a head
        action but no tail action; Note: negated absence constraint is semantically equivalent to an existence
        constraint.
    - noncooccurrence: requires the head action is not executed if the tail action is executed and vice versa.

Additionally you can determine if the given document describes a negation of constraints,
e.g., "when something happens, then we DO something" describes a positive constraint,
while "when something happens, then we DON'T DO something" describes a negation.

Let's carry out your task STEPWISE:
1. First, identify actions contained in the input sentence (a description how you can identify actions is given in
ACTIONS (Def.) above).
2. Insert the following character sequence in the output: '#-#-#RESULT#-#-#'
3. Generate constraints based on the constraint types above (see CONSTRAINTS (Def.) for details). To do this, only use
the actions that you defined before the mark ('#-#-#RESULT#-#-#'). The format MUST be as follows:
    Please extract all constraints in the given raw text in the following format:
    Print one constraint per line, where you separate if the constraint is negative (TRUE if
    the document describes a negation, else it reads FALSE), the type of the constraint, and the
    extracted actions by tabs in the following form (<...> are placeholders; <sentence id> is always 0, if a tail action exists depends on the constraint):
    <sentence id>	<TRUE or FALSE>	<constraint type>	<head action>	<tail action>.

Please return raw text, do not use any formatting.