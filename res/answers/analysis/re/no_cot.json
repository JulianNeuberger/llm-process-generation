[{"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nYou are an expert in business process modelling, specialized on BPMN and its elements.\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nI am the Head of the functional department . When <actor id=0> I </actor> have <activity id=5> detected </activity> <activity_data id=6> a number of personnel requirements </activity_data> , <actor id=4> I </actor> <activity id=7> report </activity> <activity_data id=8> the vacancy </activity_data> to <actor id=9> the Personnel Department </actor> . Then <actor id=3> I </actor> wait to <activity id=10> get </activity> <activity_data id=12> the job description for review </activity_data> before <activity_data id=11> it </activity_data> is <activity id=14> advertized </activity> . <xor_gateway id=15> Under certain circumstances </xor_gateway> , <actor id=2> I </actor> must <activity id=16> ask </activity> for <activity_data id=17> corrections </activity_data> again , <xor_gateway id=18> otherwise </xor_gateway> <actor id=1> I </actor> <activity id=19> approve </activity> <activity_data id=13> the job description </activity_data> . Sometimes it also happens that the colleague from the HR department still has questions about the tasks and requirements before he can describe the job . Then I am available for clarifications , of course .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_cot.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1327, "output_tokens": 327, "total_costs": 0.02308, "answers": ["actor performer\t5\t0\tthe activity detected is performed by I (Head of the functional department)\nuses\t5\t6\tthis activity_data mention is produced by the activity detected\nactor performer\t7\t4\tthe activity report is performed by I (Head of the functional department)\nuses\t7\t8\tthis activity_data mention is produced by the activity report\nactor recipient\t7\t9\tthe activity report is received by the Personnel Department\nactor performer\t10\t3\tthe activity get is performed by I (Head of the functional department)\nuses\t10\t12\tthis activity_data mention is produced by the activity get\nuses\t14\t11\tthis activity_data mention is produced by the activity advertized\nactor performer\t16\t2\tthe activity ask is performed by I (Head of the functional department)\nuses\t16\t17\tthis activity_data mention is produced by the activity ask\nactor performer\t19\t1\tthe activity approve is performed by I (Head of the functional department)\nuses\t19\t13\tthis activity_data mention is produced by the activity approve\nflow\t5\t7\tthe activity detected is followed by the activity report\nflow\t7\t10\tthe activity report is followed by the activity get\nflow\t10\t14\tthe activity get is followed by the activity advertized\nflow\t14\t15\tthe activity advertized is followed by the xor_gateway Under certain circumstances\nflow\t15\t16\tthe xor_gateway Under certain circumstances is followed by the activity ask\nflow\t16\t18\tthe activity ask is followed by the xor_gateway otherwise\nflow\t18\t19\tthe xor_gateway otherwise is followed by the activity approve"], "original_id": "doc-8.3"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nYou are an expert in business process modelling, specialized on BPMN and its elements.\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<activity_data id=0> The Police Report </activity_data> related to the car accident is <activity id=1> searched </activity> <further_specification id=2> within the Police Report database </further_specification> and <activity id=3> put </activity> <further_specification id=4> in a file together with the Claim Documentation </further_specification> . This file serves as input to a claims handler <actor id=5> who </actor> <activity id=7> calculates </activity> <activity_data id=8> an initial claim estimate </activity_data> . Then , <actor id=6> the claims handler </actor> <activity id=9> creates </activity> <activity_data id=10> an Action Plan </activity_data> based on an Action Plan Checklist available in the Document Management system . Based on the Action Plan , <actor id=11> a claims manager </actor> tries to <activity id=12> negotiate </activity> <activity_data id=13> a settlement </activity_data> on the claim estimate . <actor id=14> The claimant </actor> is <activity id=15> informed </activity> of <activity_data id=16> the outcome </activity_data> , which ends the process .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_cot.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1304, "output_tokens": 263, "total_costs": 0.02093, "answers": ["uses\t1\t0\tthis activity_data mention is produced by the activity searched\nfurther_specification\t1\t2\tthis further_specification describes how the activity searched is executed\nflow\t1\t3\tthe activity put follows the activity searched in the process\nfurther_specification\t3\t4\tthis further_specification describes how the activity put is executed\nactor performer\t7\t5\tthe activity calculates is performed by the claims handler\nuses\t7\t8\tthis activity_data mention is produced by the activity calculates\nflow\t3\t7\tthe activity calculates follows the activity put in the process\nactor performer\t9\t6\tthe activity creates is performed by the claims handler\nuses\t9\t10\tthis activity_data mention is produced by the activity creates\nflow\t7\t9\tthe activity creates follows the activity calculates in the process\nactor performer\t12\t11\tthe activity negotiate is performed by the claims manager\nuses\t12\t13\tthis activity_data mention is produced by the activity negotiate\nflow\t9\t12\tthe activity negotiate follows the activity creates in the process\nactor recipient\t15\t14\tthe activity informed affects the claimant passively\nuses\t15\t16\tthis activity_data mention is produced by the activity informed\nflow\t12\t15\tthe activity informed follows the activity negotiate in the process"], "original_id": "doc-3.7"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nYou are an expert in business process modelling, specialized on BPMN and its elements.\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nEvery time we <activity id=0> get </activity> <activity_data id=1> a new order </activity_data> from <actor id=3> the sales department </actor> , first , <actor id=4> one of my masters </actor> <activity id=5> determines </activity> <activity_data id=6> the necessary parts and quantities as well as the delivery date </activity_data> . Once that information is present , <activity_data id=7> it </activity_data> has to be <activity id=8> entered </activity> into our production planning system ( PPS ) . It optimizes our production processes and creates possibly uniform work packages so that the setup times are minimized . Besides , <actor id=9> it </actor> <activity id=10> creates </activity> <activity_data id=11> a list of parts </activity_data> to be procured . Unfortunately it is not coupled correctly to our Enterprise Resource Planning system ( ERP ) , so <activity_data id=12> the data </activity_data> must be <activity id=13> transferred </activity> <further_specification id=14> manually </further_specification> . By the way , that is the second step . Once all the data is present , we need to decide whether <condition_specification id=15> any parts are missing </condition_specification> and must be <activity id=16> procured </activity> <xor_gateway id=17> or </xor_gateway> if this is not necessary . Once production is scheduled to start , <actor id=18> we </actor> <activity id=19> receive </activity> <activity_data id=20> a notice </activity_data> from the system and <actor id=21> an employee </actor> <activity id=22> takes care </activity> of <activity_data id=23> the implementation </activity_data> . Finally , <activity_data id=2> the order </activity_data> will be <activity id=24> checked </activity> again <further_specification id=25> for its quality </further_specification> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_cot.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1482, "output_tokens": 558, "total_costs": 0.031560000000000005, "answers": ["uses\t0\t1\tthis activity_data mention is produced by the activity get\nactor performer\t5\t4\tthe activity determines is performed by one of my masters\nuses\t5\t6\tthis activity_data mention is produced by the activity determines\nuses\t8\t7\tthis activity_data mention is used by the activity entered\nactor performer\t8\t4\tthe activity entered is performed by one of my masters, as implied by the organizational process\nuses\t10\t11\tthis activity_data mention is produced by the activity creates\nactor performer\t10\t9\tthe activity creates is performed by the system, as implied by the context\nuses\t13\t12\tthis activity_data mention is used by the activity transferred\nfurther specification\t13\t14\tthe activity transferred is further specified to be done manually\nflow\t0\t5\tthe activity get is followed by the activity determines, indicating a sequence in the process\nflow\t5\t8\tthe activity determines is followed by the activity entered, indicating a sequence in the process\nflow\t8\t10\tthe activity entered is followed by the activity creates, indicating a sequence in the process\nflow\t10\t13\tthe activity creates is followed by the activity transferred, indicating a sequence in the process\nflow\t13\t16\tthe activity transferred is followed by the activity procured, indicating a sequence in the process due to the decision-making process described\nflow\t16\t19\tthe activity procured is followed by the activity receive, indicating a sequence in the process as production scheduling is a subsequent step\nflow\t19\t22\tthe activity receive is followed by the activity takes care, indicating a sequence in the process as receiving a notice precedes taking care of implementation\nflow\t22\t24\tthe activity takes care is followed by the activity checked, indicating a sequence in the process as the final step involves checking the order\nactor performer\t13\t4\tthe activity transferred is performed by one of my masters, as implied by the organizational process and manual intervention\nactor performer\t19\t18\tthe activity receive is performed by us, indicating the receiving party of the notice\nactor performer\t22\t21\tthe activity takes care is performed by an employee, indicating the responsible party for implementation\nuses\t22\t23\tthis activity_data mention is used by the activity takes care\nfurther specification\t24\t25\tthe activity checked is further specified to be for its quality\nactor performer\t24\t4\tthe activity checked is performed by one of my masters, as implied by the responsibility for quality control in the organizational context\nflow\t16\t17\tthe activity procured is followed by the xor_gateway, indicating a decision point in the process\nflow\t17\t19\tthe xor_gateway precedes the activity receive, indicating a decision outcome leading to the next process step"], "original_id": "doc-6.3"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nYou are an expert in business process modelling, specialized on BPMN and its elements.\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nThe process starts periodically on the first of each month , when Assembler AG <activity id=0> places </activity> <activity_data id=1> an order </activity_data> with <actor id=4> the supplier </actor> <further_specification id=8> in order to request more product parts </further_specification> . a ) <actor id=9> Assembler AG </actor> <activity id=12> sends </activity> <activity_data id=2> the order </activity_data> to <actor id=5> the supplier </actor> . b ) <actor id=7> The supplier </actor> <activity id=13> processes </activity> <activity_data id=3> the order </activity_data> . c ) <actor id=6> The supplier </actor> <activity id=14> sends </activity> <activity_data id=15> an invoice </activity_data> to <actor id=11> Assembler AG </actor> . d ) <actor id=10> Assembler AG </actor> <activity id=17> receives </activity> <activity_data id=16> the invoice </activity_data> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_cot.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1280, "output_tokens": 318, "total_costs": 0.02234, "answers": ["actor performer\t0\t9\tThe activity places is performed by Assembler AG\nuses\t0\t1\tThe activity_data an order is produced by the activity places\nfurther specification\t0\t8\tThe activity places is further described by the specification in order to request more product parts\nactor recipient\t0\t4\tThe activity places affects the supplier as the recipient of the order\nflow\t0\t12\tThe activity places is performed before the activity sends by Assembler AG\nactor performer\t12\t9\tThe activity sends is performed by Assembler AG\nuses\t12\t2\tThe activity_data the order is produced by the activity sends\nactor recipient\t12\t5\tThe activity sends affects the supplier as the recipient of the order\nflow\t12\t13\tThe activity sends is performed before the activity processes by the supplier\nactor performer\t13\t7\tThe activity processes is performed by The supplier\nuses\t13\t3\tThe activity_data the order is produced by the activity processes\nflow\t13\t14\tThe activity processes is performed before the activity sends by the supplier\nactor performer\t14\t6\tThe activity sends is performed by The supplier\nuses\t14\t15\tThe activity_data an invoice is produced by the activity sends\nactor recipient\t14\t11\tThe activity sends affects Assembler AG as the recipient of the invoice\nflow\t14\t17\tThe activity sends is performed before the activity receives by Assembler AG\nactor performer\t17\t10\tThe activity receives is performed by Assembler AG\nuses\t17\t16\tThe activity_data the invoice is produced by the activity receives"], "original_id": "doc-6.2"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nYou are an expert in business process modelling, specialized on BPMN and its elements.\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nAfter <activity_data id=0> a claim </activity_data> is <activity id=4> registered </activity> , <activity_data id=2> it </activity_data> is <activity id=5> examined </activity> by <actor id=6> a claims officer </actor> . <actor id=7> The claims officer </actor> then <activity id=9> writes </activity> <activity_data id=10> a settlement recommendation </activity_data> . <activity_data id=11> This recommendation </activity_data> is then <activity id=12> checked </activity> by <actor id=13> a senior claims officer </actor> who may <activity id=14> mark </activity> <activity_data id=3> the claim </activity_data> <further_specification id=15> as OK or Not OK </further_specification> . <xor_gateway id=16> If </xor_gateway> <condition_specification id=17> the claim is marked as Not OK </condition_specification> , <activity_data id=1> it </activity_data> is <activity id=18> sent back </activity> to <actor id=8> the claims officer </actor> and the recommendation is repeated . <xor_gateway id=19> If </xor_gateway> <condition_specification id=20> the claim is OK </condition_specification> , <activity_data id=21> the claim handling process </activity_data> <activity id=22> proceeds </activity> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_cot.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1350, "output_tokens": 254, "total_costs": 0.02112, "answers": ["uses\t4\t0\tthis activity_data mention is produced by the activity registered\nactor performer\t5\t6\tthe activity examined is performed by a claims officer\nuses\t9\t10\tthis activity_data mention is produced by the activity writes\nactor performer\t12\t13\tthe activity checked is performed by a senior claims officer\nuses\t14\t3\tthis activity_data mention is produced by the activity mark\nfurther specification\t14\t15\tthis further_specification mention describes how the activity mark has to be executed\nflow\t4\t5\tthe activity registered is performed before the activity examined\nflow\t5\t9\tthe activity examined is performed before the activity writes\nflow\t9\t12\tthe activity writes is performed before the activity checked\nflow\t12\t14\tthe activity checked is performed before the activity mark\nflow\t14\t18\tthe activity mark is performed before the activity sent back\nflow\t18\t22\tthe activity sent back is performed before the activity proceeds\nflow\t16\t17\tthe XOR_Gateway leads to the condition_specification the claim is marked as Not OK\nflow\t19\t20\tthe XOR_Gateway leads to the condition_specification the claim is OK\nactor recipient\t18\t8\tthe activity sent back passively affects the claims officer"], "original_id": "doc-3.3"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nYou are an expert in business process modelling, specialized on BPMN and its elements.\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nWhenever <actor id=0> a company </actor> <activity id=1> makes </activity> <activity_data id=2> the decision to go public </activity_data> , its first task is to <activity id=3> select </activity> <activity_data id=4> the underwriters </activity_data> . Underwriters act as financial midwives to a new issue . Usually they play a triple role : First they provide the company with procedural and financial advice , then they buy the issue , and finally they resell it to the public . Established underwriters are careful of their reputation and will not handle a new issue unless they believe the facts have been presented fairly . Thus , in addition to handling the sale of a company \u2019 s issue , the underwriters in effect give their seal of approval to it . <actor id=6> They </actor> <activity id=11> prepare </activity> <activity_data id=12> a registration statement for the approval of the Securities and Exchange Commission ( SEC ) </activity_data> . In addition to registering the issue with the SEC , <actor id=8> they </actor> need to <activity id=13> check </activity> <further_specification id=14> that the issue complies with the so-called blue-sky laws of each state that regulate sales of securities within the state </further_specification> . <and_gateway id=15> While </and_gateway> the registration statement is <activity id=16> awaiting </activity> <activity_data id=17> approval </activity_data> , <actor id=10> underwriters </actor> begin to <activity id=18> firm up </activity> <activity_data id=19> the issue price </activity_data> . <actor id=5> They </actor> <activity id=21> arrange </activity> <activity_data id=22> a road show </activity_data> <further_specification id=23> to talk to potential investors </further_specification> . Immediately after they <activity id=24> receive </activity> <activity_data id=25> clearance </activity_data> from the SEC , <actor id=9> underwriters </actor> <activity id=26> fix </activity> <activity_data id=20> the issue price </activity_data> . After that <actor id=7> they </actor> <activity id=27> enter </activity> <activity_data id=28> into a firm commitment to buy the stock </activity_data> and then <activity id=29> offer </activity> <activity_data id=30> it </activity_data> to <actor id=31> the public </actor> , when they haven \u2019 t still found any reason not to do it .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_cot.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1609, "output_tokens": 531, "total_costs": 0.03202, "answers": ["actor performer\t1\t0\tthe activity makes is performed by a company\nuses\t1\t2\tthis activity_data mention is produced by the activity makes\nactor performer\t3\t0\tthe activity select is performed by a company\nuses\t3\t4\tthis activity_data mention is produced by the activity select\nactor performer\t11\t6\tthe activity prepare is performed by They\nuses\t11\t12\tthis activity_data mention is produced by the activity prepare\nactor performer\t13\t8\tthe activity check is performed by they\nfurther specification\t13\t14\tthis further_specification mention describes how the activity check has to be executed\nactor performer\t16\t10\tthe activity awaiting is performed by underwriters\nuses\t16\t17\tthis activity_data mention is produced by the activity awaiting\nactor performer\t18\t10\tthe activity firm up is performed by underwriters\nuses\t18\t19\tthis activity_data mention is produced by the activity firm up\nactor performer\t21\t5\tthe activity arrange is performed by They\nuses\t21\t22\tthis activity_data mention is produced by the activity arrange\nfurther specification\t21\t23\tthis further_specification mention describes how the activity arrange has to be executed\nactor performer\t24\t5\tthe activity receive is performed by They\nuses\t24\t25\tthis activity_data mention is produced by the activity receive\nactor performer\t26\t9\tthe activity fix is performed by underwriters\nuses\t26\t20\tthis activity_data mention is produced by the activity fix\nactor performer\t27\t7\tthe activity enter is performed by they\nuses\t27\t28\tthis activity_data mention is produced by the activity enter\nactor performer\t29\t7\tthe activity offer is performed by they\nuses\t29\t30\tthis activity_data mention is produced by the activity offer\nactor recipient\t29\t31\tthe activity offer passively affects the public\nflow\t1\t3\tthe activity makes is performed before the activity select\nflow\t3\t11\tthe activity select is performed before the activity prepare\nflow\t11\t13\tthe activity prepare is performed before the activity check\nflow\t13\t16\tthe activity check is performed before the activity awaiting\nflow\t16\t18\tthe activity awaiting is performed before the activity firm up\nflow\t18\t21\tthe activity firm up is performed before the activity arrange\nflow\t21\t24\tthe activity arrange is performed before the activity receive\nflow\t24\t26\tthe activity receive is performed before the activity fix\nflow\t26\t27\tthe activity fix is performed before the activity enter\nflow\t27\t29\tthe activity enter is performed before the activity offer"], "original_id": "doc-1.4"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nYou are an expert in business process modelling, specialized on BPMN and its elements.\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The MSPO </actor> <activity id=2> deregisters </activity> at <actor id=4> the GO </actor> . <actor id=10> The GO </actor> <activity id=12> verifies </activity> <activity_data id=13> the deregistration </activity_data> . <actor id=9> The GO </actor> <activity id=16> rejects </activity> <activity_data id=15> the deregistration of the MSPO </activity_data> <xor_gateway id=17> or </xor_gateway> <actor id=11> the GO </actor> <further_specification id=18> preliminarily </further_specification> <activity id=19> confirms </activity> <activity_data id=14> the deregistration of the MSPO </activity_data> . <actor id=8> The GO </actor> <activity id=20> assigns </activity> <activity_data id=3> himself </activity_data> <further_specification id=21> as MSP </further_specification> . <actor id=7> The GO </actor> <activity id=22> informs </activity> <actor id=1> the MSPO </actor> <activity_data id=23> about the end of the assignment and the beginning of the assignment of the GO </activity_data> . <actor id=6> The GO </actor> <activity id=24> informs </activity> <actor id=25> the MPO </actor> <activity_data id=26> about the assignment of the GO </activity_data> . <actor id=5> The GO </actor> <activity id=27> informs </activity> <actor id=28> the SP </actor> <activity_data id=29> about the assignment of the GO </activity_data> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_cot.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1425, "output_tokens": 434, "total_costs": 0.02727, "answers": ["actor performer\t2\t0\tthe activity deregisters is performed by The MSPO\nactor recipient\t2\t4\tthe activity deregisters affects the GO\nactor performer\t12\t10\tthe activity verifies is performed by The GO\nuses\t12\t13\tthis activity_data mention is produced by the activity verifies\nactor performer\t16\t9\tthe activity rejects is performed by The GO\nuses\t16\t15\tthis activity_data mention is produced by the activity rejects\nactor performer\t19\t11\tthe activity confirms is performed by The GO\nuses\t19\t14\tthis activity_data mention is produced by the activity confirms\nactor performer\t20\t8\tthe activity assigns is performed by The GO\nuses\t20\t3\tthis activity_data mention is produced by the activity assigns\nfurther specification\t20\t21\tthe activity assigns is further specified by as MSP\nactor performer\t22\t7\tthe activity informs is performed by The GO\nactor recipient\t22\t1\tthe activity informs affects the MSPO\nuses\t22\t23\tthis activity_data mention is produced by the activity informs\nactor performer\t24\t6\tthe activity informs is performed by The GO\nactor recipient\t24\t25\tthe activity informs affects the MPO\nuses\t24\t26\tthis activity_data mention is produced by the activity informs\nactor performer\t27\t5\tthe activity informs is performed by The GO\nactor recipient\t27\t28\tthe activity informs affects the SP\nuses\t27\t29\tthis activity_data mention is produced by the activity informs\nflow\t2\t12\tthe activity deregisters is followed by the activity verifies\nflow\t12\t16\tthe activity verifies is followed by the activity rejects\nflow\t16\t19\tthe activity rejects is followed by the activity confirms through an XOR gateway\nflow\t19\t20\tthe activity confirms is followed by the activity assigns\nflow\t20\t22\tthe activity assigns is followed by the activity informs targeting the MSPO\nflow\t22\t24\tthe activity informs targeting the MSPO is followed by the activity informs targeting the MPO\nflow\t24\t27\tthe activity informs targeting the MPO is followed by the activity informs targeting the SP"], "original_id": "doc-10.8"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nYou are an expert in business process modelling, specialized on BPMN and its elements.\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nIn November of each year , <actor id=0> the Coordination Unit at the Town Planning Authority </actor> <activity id=3> drafts </activity> a schedule of meetings for the next calendar year and <activity id=4> adds </activity> <activity_data id=5> draft dates </activity_data> to all calendars . <actor id=6> The Support Officer </actor> then <activity id=7> checks </activity> <activity_data id=8> the dates </activity_data> and <activity id=10> suggests </activity> <activity_data id=11> modifications </activity_data> . <actor id=1> The Coordination Unit </actor> then <activity id=12> rechecks </activity> <activity_data id=9> all dates </activity_data> and <activity id=13> looks for </activity> <activity_data id=14> potential conflicts </activity_data> . <activity_data id=15> The final schedule of meeting dates </activity_data> is <activity id=16> sent </activity> to <actor id=17> all the independent Committee Members </actor> <further_specification id=19> by email </further_specification> , <actor id=18> who </actor> then <activity id=20> check </activity> <activity_data id=21> their diaries </activity_data> and <activity id=22> advise </activity> <actor id=2> the Coordination Unit </actor> of any conflicts .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_cot.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1351, "output_tokens": 453, "total_costs": 0.0271, "answers": ["actor performer\t3\t0\tthe activity drafts is performed by the Coordination Unit at the Town Planning Authority\nuses\t3\t5\tthis activity_data mention is produced by the activity drafts\nactor performer\t4\t0\tthe activity adds is performed by the Coordination Unit at the Town Planning Authority\nuses\t4\t5\tthis activity_data mention is produced by the activity adds\nactor performer\t7\t6\tthe activity checks is performed by The Support Officer\nuses\t7\t8\tthis activity_data mention is produced by the activity checks\nactor performer\t10\t6\tthe activity suggests is performed by The Support Officer\nuses\t10\t11\tthis activity_data mention is produced by the activity suggests\nflow\t12\t1\tthe activity rechecks is performed by The Coordination Unit\nuses\t12\t9\tthis activity_data mention is produced by the activity rechecks\nactor performer\t13\t1\tthe activity looks for is performed by The Coordination Unit\nuses\t13\t14\tthis activity_data mention is produced by the activity looks for\nactor performer\t16\t1\tthe activity sent is performed by The Coordination Unit\nuses\t16\t15\tthis activity_data mention is produced by the activity sent\nactor recipient\t16\t17\tthe result of the activity sent is received by all the independent Committee Members\nfurther specification\t16\t19\tthe activity sent is further specified by the method by email\nactor performer\t20\t18\tthe activity check is performed by who\nactor performer\t20\t21\tthis activity_data mention is produced by the activity check\nactor performer\t22\t2\tthe activity advise is performed by the Coordination Unit\nflow\t3\t4\tthe activity drafts is followed by the activity adds\nflow\t4\t7\tthe activity adds is followed by the activity checks\nflow\t7\t10\tthe activity checks is followed by the activity suggests\nflow\t10\t12\tthe activity suggests is followed by the activity rechecks\nflow\t12\t13\tthe activity rechecks is followed by the activity looks for\nflow\t13\t16\tthe activity looks for is followed by the activity sent\nflow\t16\t20\tthe activity sent is followed by the activity check\nflow\t20\t22\tthe activity check is followed by the activity advise"], "original_id": "doc-9.3"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nYou are an expert in business process modelling, specialized on BPMN and its elements.\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nAfter <activity_data id=0> the Expense Report </activity_data> is <activity id=3> received </activity> , <activity_data id=4> a new account </activity_data> must be <activity id=5> created </activity> <xor_gateway id=6> if </xor_gateway> <condition_specification id=7> the employee does not already have one </condition_specification> . <activity_data id=2> The report </activity_data> is then <activity id=8> reviewed </activity> <further_specification id=9> for automatic approval </further_specification> . <condition_specification id=10> Amounts under $200 </condition_specification> are <further_specification id=11> automatically </further_specification> <activity id=12> approved </activity> , <xor_gateway id=13> whereas </xor_gateway> <condition_specification id=14> amounts equal to or over $200 </condition_specification> <activity id=15> require </activity> <activity_data id=16> approval </activity_data> of <actor id=17> the supervisor </actor> . <xor_gateway id=18> In case of </xor_gateway> <condition_specification id=19> rejection </condition_specification> , <actor id=20> the employee </actor> must <activity id=23> receive </activity> <activity_data id=24> a rejection notice </activity_data> <further_specification id=25> by email </further_specification> . <xor_gateway id=26> Otherwise </xor_gateway> , <activity_data id=27> the reimbursement </activity_data> <activity id=28> goes </activity> <further_specification id=29> to the employees direct deposit bank account </further_specification> . <xor_gateway id=30> If </xor_gateway> <condition_specification id=31> the request is not completed in 7 days </condition_specification> , then <actor id=22> the employee </actor> must <activity id=32> receive </activity> <activity_data id=33> an approval in progress email </activity_data> . <xor_gateway id=34> If </xor_gateway> <condition_specification id=35> the request is not finished within 30 days </condition_specification> , then the process is stopped and <actor id=21> the employee </actor> <activity id=36> receives </activity> <activity_data id=37> an email cancellation notice </activity_data> and must <activity id=38> re-submit </activity> <activity_data id=1> the expense report </activity_data> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_cot.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1597, "output_tokens": 714, "total_costs": 0.03739, "answers": ["uses\t3\t0\tthis activity_data mention is produced by the activity received\nuses\t5\t4\tthis activity_data mention is produced by the activity created\nflow\t3\t5\tthe activity received is performed before the activity created\nflow\t5\t8\tthe activity created is performed before the activity reviewed\nuses\t8\t2\tthis activity_data mention is produced by the activity reviewed\nfurther specification\t8\t9\tthis further_specification mention describes how the activity reviewed has to be executed\nflow\t8\t12\tthe activity reviewed is performed before the activity approved\nuses\t12\t2\tthis activity_data mention is produced by the activity approved\nfurther specification\t12\t11\tthis further_specification mention describes how the activity approved has to be executed\nflow\t12\t15\tthe activity approved is performed before the activity require\nuses\t15\t16\tthis activity_data mention is produced by the activity require\nactor performer\t15\t17\tthe activity require is performed by the supervisor\nflow\t15\t23\tthe activity require is performed before the activity receive\nuses\t23\t24\tthis activity_data mention is produced by the activity receive\nactor recipient\t23\t20\tthe activity receive passively affects the employee\nfurther specification\t23\t25\tthis further_specification mention describes how the activity receive has to be executed\nflow\t23\t28\tthe activity receive is performed before the activity goes\nuses\t28\t27\tthis activity_data mention is produced by the activity goes\nfurther specification\t28\t29\tthis further_specification mention describes how the activity goes has to be executed\nflow\t28\t32\tthe activity goes is performed before the activity receive\nuses\t32\t33\tthis activity_data mention is produced by the activity receive\nactor recipient\t32\t22\tthe activity receive passively affects the employee\nflow\t32\t36\tthe activity receive is performed before the activity receives\nuses\t36\t37\tthis activity_data mention is produced by the activity receives\nactor recipient\t36\t21\tthe activity receives passively affects the employee\nflow\t36\t38\tthe activity receives is performed before the activity re-submit\nuses\t38\t1\tthis activity_data mention is produced by the activity re-submit\nflow\t5\t6\tthe activity created is followed by an XOR gateway decision\nflow\t6\t7\tthe XOR gateway leads to the condition specification about the employee not already having an account\nflow\t12\t13\tthe activity approved is followed by an XOR gateway decision\nflow\t13\t14\tthe XOR gateway leads to the condition specification about amounts equal to or over $200\nflow\t23\t26\tthe activity receive is followed by an XOR gateway decision\nflow\t28\t30\tthe activity goes is followed by an XOR gateway decision\nflow\t30\t31\tthe XOR gateway leads to the condition specification about the request not completed in 7 days\nflow\t32\t34\tthe activity receive is followed by an XOR gateway decision\nflow\t34\t35\tthe XOR gateway leads to the condition specification about the request not finished within 30 days\nsame gateway\t6\t13\tthe XOR gateways describe the same decision point in the process execution\nsame gateway\t13\t18\tthe XOR gateways describe the same decision point in the process execution\nsame gateway\t18\t26\tthe XOR gateways describe the same decision point in the process execution\nsame gateway\t26\t30\tthe XOR gateways describe the same decision point in the process execution\nsame gateway\t30\t34\tthe XOR gateways describe the same decision point in the process execution"], "original_id": "doc-9.5"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nYou are an expert in business process modelling, specialized on BPMN and its elements.\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The MPON </actor> <activity id=9> reports </activity> <activity_data id=10> the meter operation </activity_data> to <actor id=19> the GO </actor> . <actor id=11> The GO </actor> <activity id=28> examines </activity> <activity_data id=31> the application </activity_data> of <actor id=8> the MPON </actor> . <actor id=27> The GO </actor> <activity id=29> rejects </activity> <activity_data id=30> the application of the MPON </activity_data> <xor_gateway id=33> or </xor_gateway> <actor id=18> the GO </actor> <activity id=34> confirmes </activity> <activity_data id=32> the application of the MPON </activity_data> . <actor id=26> The GO </actor> <activity id=35> informs </activity> <actor id=36> the MPOO </actor> <activity_data id=40> about the registration confirmation of the MPON </activity_data> . <actor id=25> The GO </actor> <activity id=42> informs </activity> <actor id=43> the MSPO </actor> <activity_data id=41> about the registration confirmation of the MPON </activity_data> . <actor id=2> The MPON </actor> and <actor id=39> the MPOO </actor> <activity id=46> perform </activity> <activity_data id=47> the equipment acquisition and / or equipment changes </activity_data> . <actor id=1> The MPON </actor> <activity id=48> informs </activity> <actor id=17> the GO </actor> <activity_data id=49> about the failure of the entire process </activity_data> <xor_gateway id=50> or </xor_gateway> <actor id=7> the MPON </actor> <activity id=51> informs </activity> <actor id=16> the GO </actor> <activity_data id=52> about the successful completion of the entire process </activity_data> . <actor id=24> The GO </actor> <activity id=53> informs </activity> <actor id=6> the MPON </actor> <activity_data id=54> about the failure of the overall transaction by deadline </activity_data> <xor_gateway id=55> if </xor_gateway> <condition_specification id=56> after a maximum time limit no message of the MPON is present at the GO </condition_specification> . <xor_gateway id=57> If </xor_gateway> <condition_specification id=58> the MPON informs the GO about the failure of the entire process </condition_specification> , <actor id=15> the GO </actor> <activity id=59> confirms </activity> <activity_data id=60> the failure of the assignment </activity_data> to <actor id=5> the MPON </actor> . <xor_gateway id=61> If </xor_gateway> <condition_specification id=62> the MPON informs the GO about the successful completion of the overall process </condition_specification> , <actor id=14> the GO </actor> <activity id=63> assigns </activity> <actor id=4> the MPON </actor> . <actor id=23> The GO </actor> <activity id=64> confirms </activity> <activity_data id=65> the assignment </activity_data> to <actor id=3> the MPON </actor> . <actor id=22> The GO </actor> <activity id=66> informs </activity> <actor id=38> the MPOO </actor> <activity_data id=67> about the failure of the assignment of the MPON </activity_data> or <actor id=13> the GO </actor> <activity id=68> informs </activity> <actor id=37> the MPOO </actor> <activity_data id=69> about the assignment of the MPON </activity_data> . <actor id=21> The GO </actor> <activity id=70> informs </activity> <actor id=45> the MSPO </actor> <activity_data id=71> about the failure of the assignment of the MPON </activity_data> or <actor id=12> the GO </actor> <activity id=72> informs </activity> <actor id=44> the MSPO </actor> <activity_data id=73> about the assignment of the MPON </activity_data> . <actor id=20> The GO </actor> <activity id=74> informs </activity> <actor id=75> the SP </actor> <activity_data id=76> about the assignment of the MPON </activity_data> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_cot.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 2072, "output_tokens": 881, "total_costs": 0.04715, "answers": ["actor performer\t9\t0\tthe activity reports is performed by The MPON\nuses\t9\t10\tthis activity_data mention is produced by the activity reports\nactor recipient\t9\t19\tthe result of the activity reports is received by the GO\nactor performer\t28\t11\tthe activity examines is performed by The GO\nuses\t28\t31\tthis activity_data mention is produced by the activity examines\nactor recipient\t28\t8\tthe result of the activity examines is received by the MPON\nactor performer\t29\t27\tthe activity rejects is performed by The GO\nuses\t29\t30\tthis activity_data mention is produced by the activity rejects\nactor performer\t34\t18\tthe activity confirmes is performed by The GO\nuses\t34\t32\tthis activity_data mention is produced by the activity confirmes\nactor performer\t35\t26\tthe activity informs is performed by The GO\nuses\t35\t40\tthis activity_data mention is produced by the activity informs\nactor recipient\t35\t36\tthe result of the activity informs is received by the MPOO\nactor performer\t42\t25\tthe activity informs is performed by The GO\nuses\t42\t41\tthis activity_data mention is produced by the activity informs\nactor recipient\t42\t43\tthe result of the activity informs is received by the MSPO\nactor performer\t46\t2\tthe activity perform is performed by The MPON and the MPOO\nuses\t46\t47\tthis activity_data mention is produced by the activity perform\nactor performer\t48\t1\tthe activity informs is performed by The MPON\nuses\t48\t49\tthis activity_data mention is produced by the activity informs\nactor recipient\t48\t17\tthe result of the activity informs is received by the GO\nactor performer\t51\t7\tthe activity informs is performed by The MPON\nuses\t51\t52\tthis activity_data mention is produced by the activity informs\nactor recipient\t51\t16\tthe result of the activity informs is received by the GO\nactor performer\t53\t24\tthe activity informs is performed by The GO\nuses\t53\t54\tthis activity_data mention is produced by the activity informs\nactor recipient\t53\t6\tthe result of the activity informs is received by the MPON\nflow\t9\t28\tthe activity reports is followed by the activity examines\nflow\t28\t29\tthe activity examines is followed by the activity rejects\nflow\t29\t34\tthe activity rejects is followed by the activity confirmes through an XOR gateway\nflow\t34\t35\tthe activity confirmes is followed by the activity informs\nflow\t35\t42\tthe activity informs is followed by the activity informs\nflow\t42\t46\tthe activity informs is followed by the activity perform\nflow\t46\t48\tthe activity perform is followed by the activity informs\nflow\t48\t51\tthe activity informs is followed by the activity informs through an XOR gateway\nflow\t51\t53\tthe activity informs is followed by the activity informs\nflow\t53\t59\tthe activity informs is followed by the activity confirms through an XOR gateway\nflow\t59\t63\tthe activity confirms is followed by the activity assigns through an XOR gateway\nflow\t63\t64\tthe activity assigns is followed by the activity confirms\nflow\t64\t66\tthe activity confirms is followed by the activity informs\nflow\t66\t68\tthe activity informs is followed by the activity informs\nflow\t68\t70\tthe activity informs is followed by the activity informs\nflow\t70\t72\tthe activity informs is followed by the activity informs\nflow\t72\t74\tthe activity informs is followed by the activity informs\nsame gateway\t33\t50\tboth mentions describe the same decision point in the process execution\nsame gateway\t55\t57\tboth mentions describe the same decision point in the process execution\nsame gateway\t57\t61\tboth mentions describe the same decision point in the process execution\nflow\t55\t59\tthe XOR gateway is followed by the activity confirms based on the condition after a maximum time limit no message of the MPON is present at the GO\nflow\t57\t59\tthe XOR gateway is followed by the activity confirms based on the condition the MPON informs the GO about the failure of the entire process\nflow\t61\t63\tthe XOR gateway is followed by the activity assigns based on the condition the MPON informs the GO about the successful completion of the overall process"], "original_id": "doc-10.2"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nYou are an expert in business process modelling, specialized on BPMN and its elements.\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nThe Evanstonian is an upscale independent hotel . When <actor id=0> a guest </actor> <activity id=1> calls </activity> <actor id=2> room service </actor> at The Evanstonian , <actor id=3> the room-service manager </actor> <activity id=7> takes down </activity> <activity_data id=8> the order </activity_data> . <actor id=5> She </actor> then <activity id=10> submits </activity> <activity_data id=11> an order ticket </activity_data> to <actor id=12> the kitchen </actor> <further_specification id=14> to begin preparing the food </further_specification> . <actor id=4> She </actor> also <activity id=15> gives </activity> <activity_data id=16> an order </activity_data> to <actor id=17> the sommelier </actor> ( i.e . , the wine waiter ) <further_specification id=19> to fetch wine from the cellar and to prepare any other alcoholic beverages </further_specification> . Eighty percent of room-service orders include wine or some other alcoholic beverage . Finally , <actor id=6> she </actor> <activity id=20> assigns </activity> <activity_data id=9> the order </activity_data> to <actor id=21> the waiter </actor> . <and_gateway id=26> While </and_gateway> <actor id=13> the kitchen </actor> and <actor id=18> the sommelier </actor> are <activity id=27> doing </activity> <activity_data id=28> their tasks </activity_data> , <actor id=24> the waiter </actor> <activity id=29> readies </activity> <activity_data id=30> a cart </activity_data> ( i.e . , puts a tablecloth on the cart and gathers silverware ) . The waiter is also responsible for nonalcoholic drinks . Once the food , wine , and cart are ready , <actor id=23> the waiter </actor> <activity id=32> delivers </activity> <activity_data id=31> it </activity_data> to <actor id=33> the guest \u2019 s room </actor> . After <activity id=34> returning </activity> <further_specification id=35> to the room-service station </further_specification> , <actor id=22> the waiter </actor> <activity id=36> debits </activity> <activity_data id=37> the guest \u2019 s account </activity_data> . <actor id=25> The waiter </actor> may <activity id=38> wait </activity> <activity_data id=39> to do the billing </activity_data> <xor_gateway id=40> if </xor_gateway> <condition_specification id=41> he has another order to prepare or deliver </condition_specification> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_cot.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1664, "output_tokens": 630, "total_costs": 0.03554, "answers": ["actor performer\t1\t0\tthe activity calls is performed by a guest\nactor recipient\t1\t2\tthe activity calls is received by room service\nactor performer\t7\t3\tthe activity takes down is performed by the room-service manager\nuses\t7\t8\tthis activity_data mention is produced by the activity takes down\nactor performer\t10\t5\tthe activity submits is performed by She\nuses\t10\t11\tthis activity_data mention is produced by the activity submits\nactor recipient\t10\t12\tthe activity submits is received by the kitchen\nfurther specification\t10\t14\tthis further_specification mention describes how the activity submits has to be executed\nactor performer\t15\t4\tthe activity gives is performed by She\nuses\t15\t16\tthis activity_data mention is produced by the activity gives\nactor recipient\t15\t17\tthe activity gives is received by the sommelier\nfurther specification\t15\t19\tthis further_specification mention describes how the activity gives has to be executed\nactor performer\t20\t6\tthe activity assigns is performed by she\nuses\t20\t9\tthis activity_data mention is produced by the activity assigns\nactor recipient\t20\t21\tthe activity assigns is received by the waiter\nactor performer\t27\t13\tthe activity doing is performed by the kitchen\nuses\t27\t28\tthis activity_data mention is produced by the activity doing\nactor performer\t29\t24\tthe activity readies is performed by the waiter\nuses\t29\t30\tthis activity_data mention is produced by the activity readies\nactor performer\t32\t23\tthe activity delivers is performed by the waiter\nuses\t32\t31\tthis activity_data mention is produced by the activity delivers\nactor recipient\t32\t33\tthe activity delivers is received by the guest \u2019 s room\nactor performer\t34\t22\tthe activity returning is performed by the waiter\nfurther specification\t34\t35\tthis further_specification mention describes how the activity returning has to be executed\nactor performer\t36\t22\tthe activity debits is performed by the waiter\nuses\t36\t37\tthis activity_data mention is produced by the activity debits\nactor performer\t38\t25\tthe activity wait is performed by The waiter\nuses\t38\t39\tthis activity_data mention is produced by the activity wait\nflow\t1\t7\tthe activity calls is followed by the activity takes down\nflow\t7\t10\tthe activity takes down is followed by the activity submits\nflow\t10\t15\tthe activity submits is followed by the activity gives\nflow\t15\t20\tthe activity gives is followed by the activity assigns\nflow\t20\t27\tthe activity assigns is followed by the activity doing\nflow\t27\t29\tthe activity doing is followed by the activity readies\nflow\t29\t32\tthe activity readies is followed by the activity delivers\nflow\t32\t34\tthe activity delivers is followed by the activity returning\nflow\t34\t36\tthe activity returning is followed by the activity debits\nflow\t36\t38\tthe activity debits is followed by the activity wait\nflow\t40\t41\tthe condition_specification follows the XOR_Gateway"], "original_id": "doc-1.3"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nYou are an expert in business process modelling, specialized on BPMN and its elements.\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<activity_data id=0> Mail from the party </activity_data> is <activity id=5> collected </activity> on a daily basis by <actor id=6> the Mail Processing Unit </actor> . Within this unit , <actor id=7> the Mail Clerk </actor> <activity id=8> sorts </activity> <activity_data id=1> the unopened mail </activity_data> <further_specification id=9> into the various business areas </further_specification> . <activity_data id=2> The mail </activity_data> is then <activity id=10> distributed </activity> . When <activity_data id=3> the mail </activity_data> is <activity id=11> received </activity> by <actor id=12> the Registry </actor> , <activity_data id=4> it </activity_data> is <activity id=13> opened </activity> and <activity id=14> sorted </activity> into groups for distribution , and thus <activity id=15> registered </activity> <further_specification id=16> in a manual incoming Mail Register </further_specification> . Afterwards , <actor id=17> the Assistant Registry Manager </actor> within the Registry <activity id=19> performs a quality check </activity> . <xor_gateway id=20> If </xor_gateway> <condition_specification id=21> the mail is not compliant </condition_specification> , <activity_data id=22> a list of requisition </activity_data> explaining the reason for rejection is <activity id=23> compiled </activity> and <activity id=24> sent back </activity> to <actor id=25> the party </actor> . <xor_gateway id=27> Otherwise </xor_gateway> , <activity_data id=28> the matter details </activity_data> ( types of action ) are <activity id=29> captured </activity> and <activity id=30> provided </activity> to <actor id=31> the Cashier </actor> , <actor id=32> who </actor> <activity id=34> takes </activity> the applicable fees attached to the mail . At this point , <actor id=18> the Assistant Registry Manager </actor> <activity id=35> puts </activity> <activity_data id=36> the receipt and copied documents </activity_data> <further_specification id=38> into an envelope </further_specification> and <activity id=39> posts </activity> <activity_data id=37> it </activity_data> to <actor id=26> the party </actor> . <and_gateway id=40> Meantime </and_gateway> , <actor id=33> the Cashier </actor> <activity id=41> captures </activity> <activity_data id=42> the Party Details </activity_data> and <activity id=43> prints </activity> <activity_data id=44> the Physical Court File </activity_data> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_cot.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1667, "output_tokens": 778, "total_costs": 0.040010000000000004, "answers": ["actor performer\t5\t6\tthe activity collected is performed by the Mail Processing Unit\nuses\t8\t7\tthe activity sorts is performed by the Mail Clerk\nactor performer\t10\t6\tthe activity distributed is performed by the Mail Processing Unit\nactor performer\t11\t12\tthe activity received is performed by the Registry\nactor performer\t13\t12\tthe activity opened is performed by the Registry\nactor performer\t14\t12\tthe activity sorted is performed by the Registry\nactor performer\t15\t12\tthe activity registered is performed by the Registry\nactor performer\t19\t17\tthe activity performs a quality check is performed by the Assistant Registry Manager\nactor performer\t23\t12\tthe activity compiled is performed by the Registry\nactor performer\t24\t12\tthe activity sent back is performed by the Registry\nactor performer\t29\t12\tthe activity captured is performed by the Registry\nactor performer\t30\t12\tthe activity provided is performed by the Registry\nactor performer\t34\t32\tthe activity takes is performed by who\nactor performer\t35\t18\tthe activity puts is performed by the Assistant Registry Manager\nactor performer\t39\t18\tthe activity posts is performed by the Assistant Registry Manager\nactor performer\t41\t33\tthe activity captures is performed by the Cashier\nactor performer\t43\t33\tthe activity prints is performed by the Cashier\nuses\t5\t0\tthis activity_data mention is produced by the activity collected\nuses\t8\t1\tthis activity_data mention is produced by the activity sorts\nuses\t10\t2\tthis activity_data mention is produced by the activity distributed\nuses\t11\t3\tthis activity_data mention is produced by the activity received\nuses\t13\t4\tthis activity_data mention is produced by the activity opened\nuses\t23\t22\tthis activity_data mention is produced by the activity compiled\nuses\t29\t28\tthis activity_data mention is produced by the activity captured\nuses\t35\t36\tthis activity_data mention is produced by the activity puts\nuses\t39\t37\tthis activity_data mention is produced by the activity posts\nuses\t41\t42\tthis activity_data mention is produced by the activity captures\nuses\t43\t44\tthis activity_data mention is produced by the activity prints\nflow\t5\t8\tthe activity collected is performed before the activity sorts\nflow\t8\t10\tthe activity sorts is performed before the activity distributed\nflow\t10\t11\tthe activity distributed is performed before the activity received\nflow\t11\t13\tthe activity received is performed before the activity opened\nflow\t13\t14\tthe activity opened is performed before the activity sorted\nflow\t14\t15\tthe activity sorted is performed before the activity registered\nflow\t15\t19\tthe activity registered is performed before the activity performs a quality check\nflow\t20\t21\tthe XOR_Gateway If leads to the condition the mail is not compliant\nflow\t19\t20\tthe activity performs a quality check is performed before the XOR_Gateway If\nflow\t23\t24\tthe activity compiled is performed before the activity sent back\nflow\t27\t29\tthe XOR_Gateway Otherwise leads to the activity captured\nflow\t29\t30\tthe activity captured is performed before the activity provided\nflow\t30\t34\tthe activity provided is performed before the activity takes\nflow\t34\t35\tthe activity takes is performed before the activity puts\nflow\t35\t39\tthe activity puts is performed before the activity posts\nflow\t39\t41\tthe activity posts is performed before the activity captures\nflow\t41\t43\tthe activity captures is performed before the activity prints\nfurther_specification\t8\t9\tthe activity sorts is further specified by into the various business areas\nfurther_specification\t15\t16\tthe activity registered is further specified by in a manual incoming Mail Register\nfurther_specification\t35\t38\tthe activity puts is further specified by into an envelope"], "original_id": "doc-3.5"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nYou are an expert in business process modelling, specialized on BPMN and its elements.\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nEvery weekday morning , <activity_data id=0> the database </activity_data> is <activity id=2> backed up </activity> and then <activity_data id=1> it </activity_data> is <activity id=3> checked </activity> <further_specification id=4> to see whether the Account Defaulter table has new records </further_specification> . <xor_gateway id=5> If </xor_gateway> <condition_specification id=6> no new records are found </condition_specification> , then the process should <activity id=7> check </activity> <activity_data id=8> the CRM system </activity_data> <further_specification id=10> to see whether new returns have been filed </further_specification> . <xor_gateway id=11> If </xor_gateway> <condition_specification id=12> new returns exist </condition_specification> , then <activity id=13> register </activity> <activity_data id=14> all defaulting accounts and customers </activity_data> . <xor_gateway id=15> If </xor_gateway> <condition_specification id=16> the defaulting client codes have not been previously advised </condition_specification> , <activity id=17> produce </activity> <activity_data id=18> another table of defaulting accounts </activity_data> and <activity id=19> send </activity> to <actor id=20> account management </actor> . All of this must be <condition_specification id=21> completed by 2 : 30 pm </condition_specification> , <xor_gateway id=22> if </xor_gateway> <condition_specification id=23> it is not </condition_specification> , then <activity_data id=24> an alert </activity_data> should be <activity id=25> sent </activity> to <actor id=26> the supervisor </actor> . Once the new defaulting account report has been completed , <activity id=28> check </activity> <activity_data id=9> the CRM system </activity_data> <further_specification id=29> to see whether new returns have been filed </further_specification> . <xor_gateway id=30> If </xor_gateway> <condition_specification id=31> new returns have been filed </condition_specification> , <activity id=32> reconcile with </activity> <activity_data id=33> the existing account defaulters table </activity_data> . This must be <condition_specification id=34> completed by 4 : 0 pm </condition_specification> <xor_gateway id=35> otherwise </xor_gateway> <actor id=27> a supervisor </actor> should be <activity id=36> sent </activity> <activity_data id=37> a message </activity_data> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_cot.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1629, "output_tokens": 636, "total_costs": 0.03537, "answers": ["uses\t2\t0\tthis activity_data mention is produced by the activity backed up\nuses\t3\t1\tthis activity_data mention is produced by the activity checked\nfurther specification\t3\t4\tthis further_specification mention describes how the activity checked has to be executed\nflow\t2\t3\tthe activity backed up is performed before the activity checked\nflow\t3\t5\tthe activity checked is performed before the XOR gateway\nflow\t5\t6\tthe XOR gateway is connected to the condition_specification no new records are found\nflow\t6\t7\tthe condition_specification no new records are found leads to the activity check\nuses\t7\t8\tthis activity_data mention is produced by the activity check\nfurther specification\t7\t10\tthis further_specification mention describes how the activity check has to be executed\nflow\t7\t11\tthe activity check is performed before the XOR gateway\nflow\t11\t12\tthe XOR gateway is connected to the condition_specification new returns exist\nflow\t12\t13\tthe condition_specification new returns exist leads to the activity register\nuses\t13\t14\tthis activity_data mention is produced by the activity register\nflow\t13\t15\tthe activity register is performed before the XOR gateway\nflow\t15\t16\tthe XOR gateway is connected to the condition_specification the defaulting client codes have not been previously advised\nflow\t16\t17\tthe condition_specification the defaulting client codes have not been previously advised leads to the activity produce\nuses\t17\t18\tthis activity_data mention is produced by the activity produce\nflow\t17\t19\tthe activity produce is performed before the activity send\nuses\t19\t18\tthis activity_data mention is produced by the activity send\nactor recipient\t19\t20\tthe activity send is passively affecting the account management\nflow\t19\t22\tthe activity send is performed before the XOR gateway\nflow\t22\t23\tthe XOR gateway is connected to the condition_specification it is not\nflow\t23\t25\tthe condition_specification it is not leads to the activity sent\nuses\t25\t24\tthis activity_data mention is produced by the activity sent\nactor recipient\t25\t26\tthe activity sent is passively affecting the supervisor\nflow\t25\t28\tthe activity sent is performed before the activity check\nuses\t28\t9\tthis activity_data mention is produced by the activity check\nfurther specification\t28\t29\tthis further_specification mention describes how the activity check has to be executed\nflow\t28\t30\tthe activity check is performed before the XOR gateway\nflow\t30\t31\tthe XOR gateway is connected to the condition_specification new returns have been filed\nflow\t31\t32\tthe condition_specification new returns have been filed leads to the activity reconcile with\nuses\t32\t33\tthis activity_data mention is produced by the activity reconcile with\nflow\t32\t35\tthe activity reconcile with is performed before the XOR gateway\nflow\t35\t36\tthe XOR gateway otherwise leads to the activity sent\nuses\t36\t37\tthis activity_data mention is produced by the activity sent\nactor recipient\t36\t27\tthe activity sent is passively affecting a supervisor"], "original_id": "doc-9.1"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nYou are an expert in business process modelling, specialized on BPMN and its elements.\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nThe process of an Office Supply Request starts when <actor id=0> any employee </actor> of the organization <activity id=3> submits </activity> <activity_data id=4> an office supply request </activity_data> . Once <activity_data id=9> the requirement </activity_data> is <activity id=10> registered </activity> , <activity_data id=5> the request </activity_data> is <activity id=11> received </activity> by <actor id=12> the immediate supervisor of the employee </actor> requesting the office supplies . <actor id=13> The supervisor </actor> must <activity id=14> approve or ask for a change , or reject </activity> <activity_data id=6> the request </activity_data> . <xor_gateway id=15> If </xor_gateway> <condition_specification id=16> the request is rejected </condition_specification> the process will end . <xor_gateway id=17> If </xor_gateway> <condition_specification id=18> the request is asked to make a change </condition_specification> then <activity_data id=8> it </activity_data> is <activity id=19> returned </activity> to <actor id=1> the petitioner / employee </actor> who can <activity id=20> review </activity> <activity_data id=21> the comments for the change request </activity_data> . <xor_gateway id=22> If </xor_gateway> <condition_specification id=23> the request is approved </condition_specification> <activity_data id=7> it </activity_data> will <activity id=24> go </activity> to <actor id=25> the purchase department </actor> that will be in charge of <activity id=27> making </activity> <activity_data id=28> quotations </activity_data> ( using a subprocess ) and <activity id=29> select </activity> <activity_data id=30> a vendor </activity_data> . <xor_gateway id=31> If </xor_gateway> <condition_specification id=32> the vendor is not valid in the system </condition_specification> <actor id=26> the purchase department </actor> will have to <activity id=33> choose </activity> <activity_data id=34> a different vendor </activity_data> . After <activity_data id=35> a vendor </activity_data> is <activity id=36> selected </activity> and <activity id=37> confirmed </activity> , <actor id=38> the system </actor> will <activity id=39> generate </activity> and <activity id=40> send </activity> <activity_data id=41> a purchase order </activity_data> and <activity id=42> wait for </activity> <activity_data id=43> the product to be delivered </activity_data> and <activity_data id=44> the invoice received </activity_data> . In any case the system will send a notification to let the user know what the result was . In any of the cases , approval , rejection or change required <actor id=45> the system </actor> will <activity id=46> send </activity> <actor id=2> the user </actor> <activity_data id=47> a notification </activity_data> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_cot.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1733, "output_tokens": 761, "total_costs": 0.04016, "answers": ["actor performer\t3\t0\tthe activity submits is performed by any employee\nuses\t3\t4\tthis activity_data mention is produced by the activity submits\nflow\t3\t10\tthe activity submits is performed before the activity registered\nactor performer\t10\t0\tthe activity registered is performed by any employee\nuses\t10\t9\tthis activity_data mention is produced by the activity registered\nflow\t10\t11\tthe activity registered is performed before the activity received\nuses\t11\t5\tthis activity_data mention is produced by the activity received\nactor recipient\t11\t12\tthe activity received is passively affecting the immediate supervisor of the employee\nflow\t11\t14\tthe activity received is performed before the activity approve or ask for a change, or reject\nactor performer\t14\t13\tthe activity approve or ask for a change, or reject is performed by The supervisor\nuses\t14\t6\tthis activity_data mention is produced by the activity approve or ask for a change, or reject\nflow\t14\t15\tthe activity approve or ask for a change, or reject is performed before the XOR gateway\nflow\t15\t16\tthe XOR gateway precedes the condition specification the request is rejected\nfurther specification\t17\t18\tthe XOR gateway precedes the condition specification the request is asked to make a change\nuses\t19\t8\tthis activity_data mention is produced by the activity returned\nactor recipient\t19\t1\tthe activity returned is passively affecting the petitioner / employee\nflow\t19\t20\tthe activity returned is performed before the activity review\nactor performer\t20\t1\tthe activity review is performed by the petitioner / employee\nuses\t20\t21\tthis activity_data mention is produced by the activity review\nflow\t22\t23\tthe XOR gateway precedes the condition specification the request is approved\nuses\t24\t7\tthis activity_data mention is produced by the activity go\nactor recipient\t24\t25\tthe activity go is passively affecting the purchase department\nflow\t24\t27\tthe activity go is performed before the activity making\nactor performer\t27\t25\tthe activity making is performed by the purchase department\nuses\t27\t28\tthis activity_data mention is produced by the activity making\nflow\t27\t29\tthe activity making is performed before the activity select\nactor performer\t29\t25\tthe activity select is performed by the purchase department\nuses\t29\t30\tthis activity_data mention is produced by the activity select\nflow\t31\t32\tthe XOR gateway precedes the condition specification the vendor is not valid in the system\nactor performer\t33\t26\tthe activity choose is performed by the purchase department\nuses\t33\t34\tthis activity_data mention is produced by the activity choose\nflow\t33\t36\tthe activity choose is performed before the activity selected\nuses\t36\t35\tthis activity_data mention is produced by the activity selected\nflow\t36\t37\tthe activity selected is performed before the activity confirmed\nactor performer\t39\t38\tthe activity generate is performed by the system\nuses\t39\t41\tthis activity_data mention is produced by the activity generate\nflow\t39\t40\tthe activity generate is performed before the activity send\nactor performer\t40\t38\tthe activity send is performed by the system\nuses\t40\t41\tthis activity_data mention is produced by the activity send\nflow\t40\t42\tthe activity send is performed before the activity wait for\nuses\t42\t43\tthis activity_data mention is produced by the activity wait for\nuses\t42\t44\tthis activity_data mention is produced by the activity wait for\nactor performer\t46\t45\tthe activity send is performed by the system\nuses\t46\t47\tthis activity_data mention is produced by the activity send\nactor recipient\t46\t2\tthe activity send is passively affecting the user"], "original_id": "doc-5.3"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nYou are an expert in business process modelling, specialized on BPMN and its elements.\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The MPON </actor> <activity id=1> sents </activity> <activity_data id=2> the dismissal </activity_data> to <actor id=6> the MPOO </actor> . <actor id=8> The MPOO </actor> <activity id=10> reviews </activity> <activity_data id=5> the dismissal </activity_data> . <actor id=7> The MPOO </actor> <activity id=11> opposes </activity> <activity_data id=4> the dismissal </activity_data> of MPON <xor_gateway id=12> or </xor_gateway> <actor id=9> the MPOO </actor> <activity id=13> confirmes </activity> <activity_data id=3> the dismissal </activity_data> of the MPON .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_cot.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1213, "output_tokens": 216, "total_costs": 0.01861, "answers": ["actor performer\t1\t0\tthe activity sents is performed by The MPON\nuses\t1\t2\tthis activity_data mention is produced by the activity sents\nactor recipient\t1\t6\tthe result of the activity sents is received by the MPOO\nactor recipient\t10\t8\tthe activity reviews is performed by The MPOO\nuses\t10\t5\tthis activity_data mention is produced by the activity reviews\nactor performer\t11\t7\tthe activity opposes is performed by The MPOO\nuses\t11\t4\tthis activity_data mention is produced by the activity opposes\nactor performer\t13\t9\tthe activity confirmes is performed by the MPOO\nuses\t13\t3\tthis activity_data mention is produced by the activity confirmes\nflow\t1\t10\tthe activity sents is performed before the activity reviews\nactor performer\t10\t11\tthe activity reviews is performed before the activity opposes\nflow\t11\t12\tthe activity opposes is followed by a decision point\nflow\t12\t13\tthe decision point leads to the activity confirmes"], "original_id": "doc-10.1"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nYou are an expert in business process modelling, specialized on BPMN and its elements.\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nThe first step is to <activity id=0> determine </activity> <activity_data id=1> contact details </activity_data> of potential customers . This can be achieved in several ways . <xor_gateway id=2> Sometimes </xor_gateway> , <actor id=3> we </actor> <activity id=6> buy </activity> <activity_data id=7> details for cold calls </activity_data> , <xor_gateway id=8> sometimes </xor_gateway> , <actor id=9> our marketing staff </actor> <activity id=10> participates </activity> in exhibitions and <xor_gateway id=11> sometimes </xor_gateway> , <actor id=5> you </actor> just happen to <activity id=12> know </activity> <activity_data id=13> somebody , who is interested in the product </activity_data> . Then <actor id=4> we </actor> start <activity id=14> calling </activity> <actor id=17> the customer </actor> . That is done by the call center staff . <actor id=20> They </actor> are <activity id=21> determining </activity> <activity_data id=22> the contact person </activity_data> and <activity_data id=23> the budget </activity_data> which would be available for the project . Of course , <activity id=24> asking </activity> <actor id=19> the customer </actor> whether he is generally interested is also important . <xor_gateway id=25> If </xor_gateway> <condition_specification id=26> this is not the case </condition_specification> , we <activity id=27> leave </activity> <activity_data id=15> him </activity_data> alone , except <xor_gateway id=28> if </xor_gateway> <condition_specification id=29> the potential project budget is huge </condition_specification> . Then <actor id=30> the head of development </actor> personally tries to <activity id=31> acquire </activity> <activity_data id=16> the customer </activity_data> . <xor_gateway id=32> If </xor_gateway> <condition_specification id=33> the customer is interested in the end </condition_specification> , the next step is <activity_data id=34> a detailed online presentation </activity_data> . It is <activity id=35> given </activity> either by a sales representative or by a pre-sales employee in case of a more technical presentation . Afterwards we are <activity id=36> waiting for </activity> <activity_data id=37> the customer to come back to us </activity_data> . <xor_gateway id=38> If </xor_gateway> <condition_specification id=39> we are not contacted within 2 weeks </condition_specification> , <actor id=40> a sales representative </actor> is <activity id=41> calling </activity> <actor id=18> the customer </actor> . The last phase is the <activity id=42> creation </activity> of <activity_data id=43> a quotation </activity_data> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_cot.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1694, "output_tokens": 1105, "total_costs": 0.050089999999999996, "answers": ["uses\t0\t1\tthis activity_data mention is produced by the activity determine\nuses\t6\t7\tthis activity_data mention is produced by the activity buy\nuses\t12\t13\tthis activity_data mention is produced by the activity know\nuses\t21\t22\tthis activity_data mention is produced by the activity determining\nuses\t21\t23\tthis activity_data mention is produced by the activity determining\nuses\t31\t16\tthis activity_data mention is produced by the activity acquire\nuses\t42\t43\tthis activity_data mention is produced by the activity creation\nactor performer\t6\t3\tthe activity buy is performed by we\nactor performer\t10\t9\tthe activity participates is performed by our marketing staff\nactor performer\t14\t4\tthe activity calling is performed by we\nactor performer\t21\t20\tthe activity determining is performed by They\nactor performer\t24\t19\tthe activity asking is performed by the customer\nactor performer\t31\t30\tthe activity acquire is performed by the head of development\nactor recipient\t35\t0\tthe activity given is performed by a sales representative or a pre-sales employee, but the specific actor is not mentioned in the text\nactor performer\t41\t40\tthe activity calling is performed by a sales representative\nactor recipient\t14\t17\tthe result of the activity calling is received by the customer\nactor recipient\t24\t19\tthe result of the activity asking is received by the customer\nactor recipient\t41\t18\tthe result of the activity calling is received by the customer\nactor performer\t0\t6\tdetermine is the first activity and buy is the next activity in the process\nflow\t6\t10\tbuy is followed by participates in the process\nflow\t10\t12\tparticipates is followed by know in the process\nflow\t12\t14\tknow is followed by calling in the process\nflow\t14\t21\tcalling is followed by determining in the process\nflow\t21\t24\tdetermining is followed by asking in the process\nflow\t24\t27\tasking is followed by leave in the process\nflow\t27\t31\tleave is followed by acquire in the process\nflow\t31\t35\tacquire is followed by given in the process\nflow\t35\t36\tgiven is followed by waiting for in the process\nflow\t36\t41\twaiting for is followed by calling in the process\nflow\t41\t42\tcalling is followed by creation in the process\nflow\t2\t6\tSometimes (xor_gateway) is followed by buy in the process\nflow\t8\t10\tsometimes (xor_gateway) is followed by participates in the process\nflow\t11\t12\tsometimes (xor_gateway) is followed by know in the process\nflow\t25\t27\tIf (xor_gateway) is followed by leave in the process\nflow\t28\t31\tif (xor_gateway) is followed by acquire in the process\nflow\t32\t35\tIf (xor_gateway) is followed by given in the process\nflow\t38\t41\tIf (xor_gateway) is followed by calling in the process\nflow\t2\t8\tSometimes (xor_gateway) is followed by sometimes (xor_gateway) in the process\nflow\t8\t11\tsometimes (xor_gateway) is followed by sometimes (xor_gateway) in the process\nflow\t25\t28\tIf (xor_gateway) is followed by if (xor_gateway) in the process\nflow\t28\t32\tif (xor_gateway) is followed by If (xor_gateway) in the process\nflow\t32\t38\tIf (xor_gateway) is followed by If (xor_gateway) in the process\nflow\t2\t11\tSometimes (xor_gateway) is followed by sometimes (xor_gateway) in the process, connecting disjointed descriptions of the same decision point\nflow\t8\t11\tsometimes (xor_gateway) is followed by sometimes (xor_gateway) in the process, connecting disjointed descriptions of the same decision point\nflow\t25\t28\tIf (xor_gateway) is followed by if (xor_gateway) in the process, connecting disjointed descriptions of the same decision point\nflow\t28\t32\tif (xor_gateway) is followed by If (xor_gateway) in the process, connecting disjointed descriptions of the same decision point\nflow\t32\t38\tIf (xor_gateway) is followed by If (xor_gateway) in the process, connecting disjointed descriptions of the same decision point\nsame gateway\t2\t8\tThese mentions describe the same decision point in the process execution\nsame gateway\t8\t11\tThese mentions describe the same decision point in the process execution\nsame gateway\t25\t28\tThese mentions describe the same decision point in the process execution\nsame gateway\t28\t32\tThese mentions describe the same decision point in the process execution\nsame gateway\t32\t38\tThese mentions describe the same decision point in the process execution\nflow\t25\t26\tIf (xor_gateway) is followed by this is not the case (condition_specification) in the process\nflow\t28\t29\tif (xor_gateway) is followed by the potential project budget is huge (condition_specification) in the process\nflow\t32\t33\tIf (xor_gateway) is followed by the customer is interested in the end (condition_specification) in the process\nflow\t38\t39\tIf (xor_gateway) is followed by we are not contacted within 2 weeks (condition_specification) in the process"], "original_id": "doc-6.4"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nYou are an expert in business process modelling, specialized on BPMN and its elements.\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nA small company manufactures customized bicycles . Whenever <actor id=0> the sales department </actor> <activity id=2> receives </activity> <activity_data id=3> an order </activity_data> , a new process instance is created . A member of the sales department can then <activity id=5> reject </activity> <xor_gateway id=6> or </xor_gateway> <activity id=7> accept </activity> <activity_data id=4> the order </activity_data> for a customized bike . In the former case , the process instance is finished . In the latter case , <actor id=8> the storehouse </actor> and <actor id=10> the engineering department </actor> are <activity id=13> informed </activity> . <actor id=9> The storehouse </actor> immediately <activity id=14> processes </activity> <activity_data id=15> the part list of the order </activity_data> and <activity id=16> checks </activity> <activity_data id=17> the required quantity of each part </activity_data> . <xor_gateway id=18> If </xor_gateway> <condition_specification id=19> the part is available in-house </condition_specification> , <activity_data id=20> it </activity_data> is <activity id=22> reserved </activity> . <xor_gateway id=23> If </xor_gateway> <condition_specification id=24> it is not available </condition_specification> , <activity_data id=21> it </activity_data> is <activity id=25> back-ordered </activity> . This procedure is repeated for each item on the part list . <and_gateway id=26> In the meantime </and_gateway> , <actor id=12> the engineering department </actor> <activity id=27> prepares </activity> <activity_data id=28> everything </activity_data> for the assembling of the ordered bicycle . <xor_gateway id=29> If </xor_gateway> <condition_specification id=30> the storehouse has successfully reserved or back-ordered every item of the part list </condition_specification> and the preparation activity has finished , <actor id=11> the engineering department </actor> <activity id=31> assembles </activity> <activity_data id=32> the bicycle </activity_data> . Afterwards , <actor id=1> the sales department </actor> <activity id=34> ships </activity> <activity_data id=33> the bicycle </activity_data> to <actor id=35> the customer </actor> and finishes the process instance .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_cot.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1584, "output_tokens": 652, "total_costs": 0.0354, "answers": ["actor performer\t2\t0\tthe activity receives is performed by the sales department\nuses\t2\t3\tthis activity_data mention is produced by the activity receives\nactor performer\t5\t0\tthe activity reject is performed by the sales department\nactor performer\t7\t0\tthe activity accept is performed by the sales department\nuses\t7\t4\tthis activity_data mention is produced by the activity accept\nflow\t2\t5\tthe activity receives is followed by the activity reject\nflow\t2\t7\tthe activity receives is followed by the activity accept\nflow\t5\t6\tthe activity reject is followed by the xor_gateway or\nflow\t7\t6\tthe activity accept is followed by the xor_gateway or\nactor performer\t13\t8\tthe activity informed is performed by the storehouse\nactor performer\t13\t10\tthe activity informed is performed by the engineering department\nactor performer\t14\t9\tthe activity processes is performed by the storehouse\nuses\t14\t15\tthis activity_data mention is produced by the activity processes\nactor performer\t16\t9\tthe activity checks is performed by the storehouse\nuses\t16\t17\tthis activity_data mention is produced by the activity checks\nflow\t13\t14\tthe activity informed is followed by the activity processes\nflow\t14\t16\tthe activity processes is followed by the activity checks\nflow\t16\t18\tthe activity checks is followed by the xor_gateway If\nflow\t18\t19\tthe xor_gateway If is followed by the condition_specification the part is available in-house\nflow\t19\t22\tthe condition_specification the part is available in-house is followed by the activity reserved\nuses\t22\t20\tthis activity_data mention is produced by the activity reserved\nflow\t18\t23\tthe xor_gateway If is followed by the xor_gateway If\nflow\t23\t24\tthe xor_gateway If is followed by the condition_specification it is not available\nflow\t24\t25\tthe condition_specification it is not available is followed by the activity back-ordered\nuses\t25\t21\tthis activity_data mention is produced by the activity back-ordered\nactor performer\t27\t12\tthe activity prepares is performed by the engineering department\nuses\t27\t28\tthis activity_data mention is produced by the activity prepares\nflow\t26\t27\tthe and_gateway In the meantime is followed by the activity prepares\nflow\t27\t29\tthe activity prepares is followed by the xor_gateway If\nflow\t29\t30\tthe xor_gateway If is followed by the condition_specification the storehouse has successfully reserved or back-ordered every item of the part list\nactor performer\t31\t11\tthe activity assembles is performed by the engineering department\nuses\t31\t32\tthis activity_data mention is produced by the activity assembles\nflow\t30\t31\tthe condition_specification the storehouse has successfully reserved or back-ordered every item of the part list is followed by the activity assembles\nactor performer\t34\t1\tthe activity ships is performed by the sales department\nuses\t34\t33\tthis activity_data mention is produced by the activity ships\nactor recipient\t34\t35\tthe activity ships is passively affecting the customer\nflow\t31\t34\tthe activity assembles is followed by the activity ships"], "original_id": "doc-1.1"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nYou are an expert in business process modelling, specialized on BPMN and its elements.\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The INQ </actor> <activity id=1> transmits </activity> <activity_data id=7> the transaction data request </activity_data> to <actor id=2> the IP </actor> . <actor id=4> The IP </actor> <activity id=5> checks </activity> <activity_data id=6> the request of the INQ </activity_data> . <actor id=3> The IP </actor> <activity id=8> answers </activity> <activity_data id=9> the question of the INQ </activity_data> <further_specification id=10> depending on the outcome of the examination </further_specification> , i.e . Transmission of data or rejection .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_cot.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1192, "output_tokens": 167, "total_costs": 0.01693, "answers": ["actor performer\t1\t0\tthe activity transmits is performed by The INQ\nuses\t1\t7\tthis activity_data mention is produced by the activity transmits\nactor recipient\t1\t2\tthe result of the activity transmits is received by the IP\nflow\t1\t5\tthe activity transmits is performed before the activity checks\nactor performer\t5\t4\tthe activity checks is performed by The IP\nuses\t5\t6\tthis activity_data mention is produced by the activity checks\nactor performer\t8\t3\tthe activity answers is performed by The IP\nuses\t8\t9\tthis activity_data mention is produced by the activity answers\nfurther specification\t8\t10\tthis further_specification mention describes how the activity answers has to be executed\nflow\t5\t8\tthe activity checks is performed before the activity answers"], "original_id": "doc-10.13"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nYou are an expert in business process modelling, specialized on BPMN and its elements.\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The MSPN </actor> <activity id=1> sents </activity> <activity_data id=2> a dismissal </activity_data> to <actor id=6> the MSPO </actor> . <actor id=9> The MSPO </actor> <activity id=10> reviews </activity> <activity_data id=3> the dismissal </activity_data> . <actor id=8> The MSPO </actor> <activity id=11> rejects </activity> <activity_data id=5> the dismissal of the MSPN </activity_data> <xor_gateway id=12> or </xor_gateway> <actor id=7> The MSPO </actor> <activity id=13> confirms </activity> <activity_data id=4> the dismissal of the MSPN </activity_data> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_cot.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1209, "output_tokens": 222, "total_costs": 0.018750000000000003, "answers": ["actor performer\t1\t0\tthe activity sents is performed by The MSPN\nuses\t1\t2\tthis activity_data mention is produced by the activity sents\nactor recipient\t1\t6\tthe activity sents has its result received by the MSPO\nactor performer\t10\t9\tthe activity reviews is performed by The MSPO\nuses\t10\t3\tthis activity_data mention is produced by the activity reviews\nactor performer\t11\t8\tthe activity rejects is performed by The MSPO\nflow\t11\t5\tthis activity_data mention is produced by the activity rejects\nactor performer\t13\t7\tthe activity confirms is performed by The MSPO\nuses\t13\t4\tthis activity_data mention is produced by the activity confirms\nflow\t1\t10\tthe activity sents is followed by the activity reviews indicating a sequence\nflow\t10\t11\tthe activity reviews is followed by the activity rejects indicating a sequence\nflow\t11\t12\tthe activity rejects is followed by the xor_gateway indicating a sequence\nflow\t12\t13\tthe xor_gateway is followed by the activity confirms indicating a decision path"], "original_id": "doc-10.6"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nYou are an expert in business process modelling, specialized on BPMN and its elements.\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nOnce <activity_data id=0> the dates </activity_data> are <activity id=1> finalized </activity> ( by <actor id=2> the Coordination Unit </actor> ) , <actor id=3> the Support Officer </actor> <activity id=6> updates </activity> <activity_data id=7> all group calendars </activity_data> and <activity id=8> creates </activity> <activity_data id=9> meeting folders for each meeting </activity_data> and <activity id=10> ensures </activity> <activity_data id=11> all appropriate documents are uploaded to system </activity_data> . <actor id=12> Committee Members </actor> are <activity id=15> advised </activity> a week before each meeting to read all related documents . <actor id=13> The Committee Members </actor> <activity id=16> hold </activity> <activity_data id=17> their meeting </activity_data> , and <actor id=5> the Support Office </actor> then <activity id=18> produces </activity> <activity_data id=19> minutes </activity_data> including any Action Points for each Committee Member . Within 5 working days , <actor id=21> the Coordination Unit </actor> must <activity id=22> conduct </activity> <activity_data id=23> a QA check on the minutes </activity_data> , <activity_data id=20> which </activity_data> are then <activity id=24> sent </activity> to <actor id=14> all Committee Members </actor> . <actor id=4> The Support Officer </actor> then <activity id=25> updates </activity> <activity_data id=26> all departmental records </activity_data> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_cot.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1406, "output_tokens": 456, "total_costs": 0.02774, "answers": ["actor performer\t1\t2\tthe activity finalized is performed by the Coordination Unit\nuses\t1\t0\tthis activity_data mention is produced by the activity finalized\nactor performer\t6\t3\tthe activity updates is performed by the Support Officer\nuses\t6\t7\tthis activity_data mention is produced by the activity updates\nflow\t1\t6\tthe activity finalized is followed by the activity updates\nactor performer\t8\t3\tthe activity creates is performed by the Support Officer\nuses\t8\t9\tthis activity_data mention is produced by the activity creates\nflow\t6\t8\tthe activity updates is followed by the activity creates\nactor performer\t10\t3\tthe activity ensures is performed by the Support Officer\nuses\t10\t11\tthis activity_data mention is produced by the activity ensures\nflow\t8\t10\tthe activity creates is followed by the activity ensures\nactor performer\t15\t12\tthe activity advised is performed by Committee Members\nflow\t10\t15\tthe activity ensures is followed by the activity advised\nactor performer\t16\t13\tthe activity hold is performed by The Committee Members\nuses\t16\t17\tthis activity_data mention is produced by the activity hold\nflow\t15\t16\tthe activity advised is followed by the activity hold\nactor performer\t18\t5\tthe activity produces is performed by the Support Office\nuses\t18\t19\tthis activity_data mention is produced by the activity produces\nflow\t16\t18\tthe activity hold is followed by the activity produces\nactor performer\t22\t21\tthe activity conduct is performed by the Coordination Unit\nuses\t22\t23\tthis activity_data mention is produced by the activity conduct\nflow\t18\t22\tthe activity produces is followed by the activity conduct\nactor performer\t24\t21\tthe activity sent is performed by the Coordination Unit\nuses\t24\t20\tthis activity_data mention is produced by the activity sent\nactor recipient\t24\t14\tthe activity sent passively affects all Committee Members\nflow\t22\t24\tthe activity conduct is followed by the activity sent\nactor performer\t25\t4\tthe activity updates is performed by The Support Officer\nuses\t25\t26\tthis activity_data mention is produced by the activity updates\nflow\t24\t25\tthe activity sent is followed by the activity updates"], "original_id": "doc-9.4"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nYou are an expert in business process modelling, specialized on BPMN and its elements.\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nWhen <activity_data id=0> a claim </activity_data> is <activity id=3> received </activity> , <activity_data id=2> it </activity_data> is first <activity id=4> checked </activity> whether the claimant is insured by the organization . <xor_gateway id=5> If </xor_gateway> <condition_specification id=6> not </condition_specification> , <actor id=7> the claimant </actor> is <activity id=10> informed </activity> that <activity_data id=11> the claim must be rejected </activity_data> . <xor_gateway id=12> Otherwise </xor_gateway> , <activity_data id=13> the severity of the claim </activity_data> is <activity id=14> evaluated </activity> . Based on the outcome ( simple or complex claims ) , <activity_data id=15> relevant forms </activity_data> are <activity id=18> sent </activity> to <actor id=9> the claimant </actor> . Once <activity_data id=16> the forms </activity_data> are <activity id=19> returned </activity> , <activity_data id=17> they </activity_data> are <activity id=20> checked </activity> <further_specification id=21> for completeness </further_specification> . <xor_gateway id=22> If </xor_gateway> <condition_specification id=23> the forms provide all relevant details </condition_specification> , <activity_data id=1> the claim </activity_data> is <activity id=24> registered </activity> <further_specification id=25> in the Claims Management system </further_specification> , which ends the Claims Notification process . <xor_gateway id=26> Otherwise </xor_gateway> , <actor id=8> the claimant </actor> is <activity id=27> informed </activity> <further_specification id=28> to update the forms </further_specification> . Upon reception of the updated forms , they are checked again .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_cot.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1469, "output_tokens": 556, "total_costs": 0.03137, "answers": ["uses\t3\t0\tthis activity_data mention is produced by the activity received\nuses\t4\t2\tthis activity_data mention is produced by the activity checked\nuses\t10\t11\tthis activity_data mention is produced by the activity informed\nuses\t14\t13\tthis activity_data mention is produced by the activity evaluated\nuses\t18\t15\tthis activity_data mention is produced by the activity sent\nuses\t19\t16\tthis activity_data mention is produced by the activity returned\nuses\t20\t17\tthis activity_data mention is produced by the activity checked\nuses\t24\t1\tthis activity_data mention is produced by the activity registered\nfurther specification\t10\t7\tthe activity informed passively affects the claimant\nactor recipient\t18\t9\tthe activity sent passively affects the claimant\nactor recipient\t27\t8\tthe activity informed passively affects the claimant\nflow\t3\t4\tthe activity received is performed before the activity checked\nflow\t4\t5\tthe activity checked is performed before the xor_gateway If\nuses\t5\t6\tthe xor_gateway If is connected to the condition_specification not because the condition follows the gateway\nflow\t6\t10\tthe condition_specification not leads to the activity informed\nflow\t5\t12\tthe xor_gateway If is connected to the xor_gateway Otherwise because it represents the alternative path in the process\nflow\t12\t14\tthe xor_gateway Otherwise is connected to the activity evaluated because the activity follows the gateway\nflow\t14\t18\tthe activity evaluated is performed before the activity sent\nflow\t18\t19\tthe activity sent is performed before the activity returned\nflow\t19\t20\tthe activity returned is performed before the activity checked\nflow\t20\t22\tthe activity checked is performed before the xor_gateway If\nflow\t22\t23\tthe xor_gateway If is connected to the condition_specification the forms provide all relevant details because the condition follows the gateway\nflow\t23\t24\tthe condition_specification the forms provide all relevant details leads to the activity registered\nflow\t22\t26\tthe xor_gateway If is connected to the xor_gateway Otherwise because it represents the alternative path in the process\nflow\t26\t27\tthe xor_gateway Otherwise is connected to the activity informed because the activity follows the gateway\nfurther_specification\t20\t21\tthe activity checked is further described by for completeness\nfurther_specification\t24\t25\tthe activity registered is further described by in the Claims Management system\nfurther_specification\t27\t28\tthe activity informed is further described by to update the forms\nsame gateway\t5\t12\tthe xor_gateway If and Otherwise describe the same decision point in the process execution\nsame gateway\t22\t26\tthe xor_gateway If and Otherwise describe the same decision point in the process execution"], "original_id": "doc-3.6"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nYou are an expert in business process modelling, specialized on BPMN and its elements.\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The Customer Service Representative </actor> <activity id=1> sends </activity> <activity_data id=2> a Mortgage offer </activity_data> to <actor id=3> the customer </actor> and <activity id=5> waits for </activity> <activity_data id=6> a reply </activity_data> . <xor_gateway id=7> If </xor_gateway> <condition_specification id=8> the customer calls or writes back declining the mortgage </condition_specification> , <activity_data id=9> the case details </activity_data> are <activity id=11> updated </activity> and <activity_data id=12> the work </activity_data> is then <activity id=13> archived </activity> prior to <activity id=14> cancellation </activity> . <xor_gateway id=15> If </xor_gateway> <condition_specification id=16> the customer sends back the completed offer documents and attaches all prerequisite documents </condition_specification> then <activity_data id=17> the case </activity_data> is <activity id=18> moved </activity> to <actor id=19> administration </actor> for completion . <xor_gateway id=20> If </xor_gateway> <condition_specification id=21> all pre-requisite documents are not provided </condition_specification> <activity_data id=22> a message </activity_data> is <activity id=23> generated </activity> to <actor id=4> the customer </actor> <further_specification id=24> requesting outstanding documents </further_specification> . <xor_gateway id=25> If </xor_gateway> <condition_specification id=26> no answer is received after 2 weeks </condition_specification> , <activity_data id=10> the case details </activity_data> are <activity id=27> updated </activity> prior to <activity id=28> archive </activity> and <activity id=29> cancellation </activity> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_cot.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1454, "output_tokens": 517, "total_costs": 0.03005, "answers": ["actor performer\t1\t0\tthe activity sends is performed by The Customer Service Representative\nuses\t1\t2\tthis activity_data mention is produced by the activity sends\nactor recipient\t1\t3\tthe activity sends passively affects the customer\nactor performer\t5\t0\tthe activity waits for is performed by The Customer Service Representative\nuses\t5\t6\tthis activity_data mention is produced by the activity waits for\nflow\t1\t5\tthe activity sends is performed before the activity waits for\nflow\t5\t11\tthe activity waits for is performed before the activity updated\nflow\t11\t13\tthe activity updated is performed before the activity archived\nflow\t13\t14\tthe activity archived is performed before the activity cancellation\nactor performer\t11\t0\tthe activity updated is performed by The Customer Service Representative\nuses\t11\t9\tthis activity_data mention is produced by the activity updated\nuses\t11\t12\tthis activity_data mention is produced by the activity updated\nactor performer\t13\t0\tthe activity archived is performed by The Customer Service Representative\nactor performer\t14\t0\tthe activity cancellation is performed by The Customer Service Representative\nflow\t7\t8\tthe XOR_Gateway If directs the flow to the condition_specification the customer calls or writes back declining the mortgage\nflow\t15\t16\tthe XOR_Gateway If directs the flow to the condition_specification the customer sends back the completed offer documents and attaches all prerequisite documents\nflow\t20\t21\tthe XOR_Gateway If directs the flow to the condition_specification all pre-requisite documents are not provided\nflow\t25\t26\tthe XOR_Gateway If directs the flow to the condition_specification no answer is received after 2 weeks\nactor performer\t18\t0\tthe activity moved is performed by The Customer Service Representative\nuses\t18\t17\tthis activity_data mention is produced by the activity moved\nactor recipient\t18\t19\tthe activity moved passively affects administration\nactor performer\t23\t0\tthe activity generated is performed by The Customer Service Representative\nuses\t23\t22\tthis activity_data mention is produced by the activity generated\nactor recipient\t23\t4\tthe activity generated passively affects the customer\nactor recipient\t23\t24\tthe activity generated is further described by requesting outstanding documents\nactor performer\t27\t0\tthe activity updated is performed by The Customer Service Representative\nuses\t27\t10\tthis activity_data mention is produced by the activity updated\nflow\t27\t28\tthe activity updated is performed before the activity archive\nflow\t28\t29\tthe activity archive is performed before the activity cancellation"], "original_id": "doc-9.2"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nYou are an expert in business process modelling, specialized on BPMN and its elements.\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The MPON </actor> <activity id=3> requests </activity> <activity_data id=4> a device takeover bid </activity_data> of <actor id=5> the MPOO </actor> . <actor id=7> The MPOO </actor> <activity id=9> sends </activity> <activity_data id=10> a tender for the equipment takeover </activity_data> to <actor id=1> the MPON </actor> . <actor id=2> The MPON </actor> <activity id=11> places </activity> <activity_data id=12> an order </activity_data> at <actor id=8> the MPOO </actor> . <actor id=6> The MPOO </actor> <activity id=14> confirms </activity> <activity_data id=13> the order of the MPON </activity_data> and <activity id=15> sends </activity> <activity_data id=16> the master data </activity_data> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_cot.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1254, "output_tokens": 281, "total_costs": 0.020970000000000003, "answers": ["actor performer\t3\t0\tthe activity requests is performed by the MPON\nuses\t3\t4\tthis activity_data mention is produced by the activity requests\nactor recipient\t3\t5\tthe result of the activity requests is received by the MPOO\nactor performer\t9\t7\tthe activity sends is performed by the MPOO\nuses\t9\t10\tthis activity_data mention is produced by the activity sends\nactor recipient\t9\t1\tthe result of the activity sends is received by the MPON\nactor performer\t11\t2\tthe activity places is performed by the MPON\nuses\t11\t12\tthis activity_data mention is produced by the activity places\nactor recipient\t11\t8\tthe result of the activity places is received by the MPOO\nactor performer\t14\t6\tthe activity confirms is performed by the MPOO\nuses\t14\t13\tthis activity_data mention is produced by the activity confirms\nactor performer\t15\t6\tthe activity sends is performed by the MPOO\nuses\t15\t16\tthis activity_data mention is produced by the activity sends\nflow\t3\t9\tthe activity requests is performed before the activity sends\nflow\t9\t11\tthe activity sends is performed before the activity places\nflow\t11\t14\tthe activity places is performed before the activity confirms\nflow\t14\t15\tthe activity confirms is performed before the activity sends"], "original_id": "doc-10.5"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nYou are an expert in business process modelling, specialized on BPMN and its elements.\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The party </actor> <activity id=1> sends </activity> <activity_data id=2> a warrant possession request </activity_data> asking a warrant to be released . <actor id=3> The Client Service Back Office </actor> as part of the Small Claims Registry Operations <activity id=6> receives </activity> <activity_data id=7> the request </activity_data> and <activity id=8> retrieves </activity> <activity_data id=9> the SCT file </activity_data> . Then , <activity_data id=14> the SCT Warrant Possession </activity_data> is <activity id=15> forwarded </activity> to <actor id=16> Queensland Police </actor> . <activity_data id=11> The SCT physical file </activity_data> is <activity id=17> stored </activity> by <actor id=4> the Back Office </actor> <activity id=18> awaiting </activity> <activity_data id=19> a report </activity_data> <further_specification id=21> to be sent by the Police </further_specification> . When <activity_data id=20> the report </activity_data> is <activity id=22> received </activity> , <activity_data id=12> the respective SCT file </activity_data> is <activity id=23> retrieved </activity> . Then , <actor id=5> Back Office </actor> <activity id=24> attaches </activity> <activity_data id=25> the new SCT document </activity_data> , and <activity id=26> stores </activity> <activity_data id=13> the expanded SCT physical file </activity_data> . After that , <actor id=27> some other MC internal staff </actor> <activity id=28> receives </activity> <activity_data id=10> the physical SCT file </activity_data> ( out of scope ) .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_cot.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1441, "output_tokens": 395, "total_costs": 0.02626, "answers": ["actor performer\t1\t0\tthe activity sends is performed by The party\nuses\t1\t2\tthe activity_data a warrant possession request is produced by the activity sends\nactor performer\t6\t3\tthe activity receives is performed by The Client Service Back Office\nuses\t6\t7\tthis activity_data mention the request is produced by the activity receives\nactor performer\t8\t3\tthe activity retrieves is performed by The Client Service Back Office\nuses\t8\t9\tthis activity_data mention the SCT file is produced by the activity retrieves\nactor recipient\t15\t16\tthe activity forwarded is received by Queensland Police\nuses\t15\t14\tthis activity_data mention the SCT Warrant Possession is produced by the activity forwarded\nactor performer\t17\t4\tthe activity stored is performed by the Back Office\nuses\t17\t11\tthis activity_data mention the SCT physical file is produced by the activity stored\nfurther specification\t18\t21\tthe activity awaiting is further specified by to be sent by the Police\nuses\t18\t19\tthis activity_data mention a report is produced by the activity awaiting\nactor performer\t22\t0\tthe activity received is performed by The party\nuses\t22\t20\tthis activity_data mention the report is produced by the activity received\nactor performer\t23\t0\tthe activity retrieved is performed by The party\nuses\t23\t12\tthis activity_data mention the respective SCT file is produced by the activity retrieved\nactor performer\t24\t5\tthe activity attaches is performed by Back Office\nuses\t24\t25\tthis activity_data mention the new SCT document is produced by the activity attaches\nactor performer\t26\t5\tthe activity stores is performed by Back Office\nuses\t26\t13\tthis activity_data mention the expanded SCT physical file is produced by the activity stores\nactor performer\t28\t27\tthe activity receives is performed by some other MC internal staff\nuses\t28\t10\tthis activity_data mention the physical SCT file is produced by the activity receives"], "original_id": "doc-3.1"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nYou are an expert in business process modelling, specialized on BPMN and its elements.\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nThe process is triggered by the <activity id=0> demand </activity> of <actor id=1> a functional department </actor> <activity_data id=2> to fill a post </activity_data> . <activity_data id=3> The post </activity_data> is <activity id=5> advertised </activity> , <actor id=6> applicants </actor> <activity id=7> apply </activity> , <activity_data id=8> the applications </activity_data> are <activity id=9> checked </activity> and <activity_data id=4> the post </activity_data> is <activity id=10> filled </activity> . The process finishes when the post was filled , precisely through the conclusion of a contract of employment .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_cot.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1192, "output_tokens": 136, "total_costs": 0.016, "answers": ["actor performer\t0\t1\tthe activity demand is performed by a functional department\nuses\t0\t2\tthe activity demand uses the activity_data to fill a post\nflow\t0\t5\tthe activity demand is followed by the activity advertised\nactor performer\t5\t6\tthe activity advertised is performed by applicants\nflow\t5\t7\tthe activity advertised is followed by the activity apply\nuses\t7\t8\tthe activity apply uses the activity_data the applications\nflow\t7\t9\tthe activity apply is followed by the activity checked\nuses\t9\t4\tthe activity checked uses the activity_data the post\nflow\t9\t10\tthe activity checked is followed by the activity filled"], "original_id": "doc-8.1"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nYou are an expert in business process modelling, specialized on BPMN and its elements.\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The SP / PU / GO </actor> <activity id=3> request </activity> <activity_data id=4> changes </activity_data> to <actor id=5> the MPO </actor> <xor_gateway id=12> or </xor_gateway> <actor id=7> the MPO </actor> himself <activity id=13> causes </activity> <activity_data id=14> a change </activity_data> . <actor id=11> The MPO </actor> <activity id=15> reviews </activity> <activity_data id=16> the change request </activity_data> . <actor id=10> The MPO </actor> <activity id=19> rejects </activity> <activity_data id=17> the change of the measuring point by the SP / PU / GO </activity_data> <xor_gateway id=20> or </xor_gateway> <actor id=6> the MPO </actor> <activity id=21> confirmes </activity> <activity_data id=18> the request of the SP / PU / GO </activity_data> . <actor id=9> The MPO </actor> <activity id=22> performs </activity> <activity_data id=23> the measuring point change </activity_data> . <actor id=8> The MPO </actor> <activity id=24> reports </activity> <activity_data id=25> the implementation </activity_data> to <actor id=2> the SP / PU / GO </actor> <xor_gateway id=26> or </xor_gateway> <activity id=27> notifies </activity> <actor id=1> the SP / PU / GO </actor> <activity_data id=28> about the failure of the changes </activity_data> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_cot.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1414, "output_tokens": 444, "total_costs": 0.02746, "answers": ["actor performer\t3\t0\tthe activity request is performed by The SP / PU / GO\nuses\t3\t4\tthe activity_data changes is produced by the activity request\nactor recipient\t3\t5\tthe result of the activity request is received by the MPO\nactor performer\t13\t7\tthe activity causes is performed by the MPO himself\nuses\t13\t14\tthe activity_data a change is produced by the activity causes\nflow\t3\t13\tthe activity request is followed by the activity causes\nactor performer\t15\t11\tthe activity reviews is performed by The MPO\nuses\t15\t16\tthe activity_data the change request is produced by the activity reviews\nflow\t13\t15\tthe activity causes is followed by the activity reviews\nactor performer\t19\t10\tthe activity rejects is performed by The MPO\nuses\t19\t17\tthe activity_data the change of the measuring point by the SP / PU / GO is produced by the activity rejects\nflow\t15\t19\tthe activity reviews is followed by the activity rejects\nactor performer\t21\t6\tthe activity confirmes is performed by The MPO\nuses\t21\t18\tthe activity_data the request of the SP / PU / GO is produced by the activity confirmes\nflow\t19\t21\tthe activity rejects is followed by the activity confirmes\nactor performer\t22\t9\tthe activity performs is performed by The MPO\nuses\t22\t23\tthe activity_data the measuring point change is produced by the activity performs\nflow\t21\t22\tthe activity confirmes is followed by the activity performs\nactor performer\t24\t8\tthe activity reports is performed by The MPO\nuses\t24\t25\tthe activity_data the implementation is produced by the activity reports\nactor recipient\t24\t2\tthe result of the activity reports is received by the SP / PU / GO\nflow\t22\t24\tthe activity performs is followed by the activity reports\nactor performer\t27\t1\tthe activity notifies is performed by The SP / PU / GO\nuses\t27\t28\tthe activity_data about the failure of the changes is produced by the activity notifies\nfurther specification\t24\t27\tthe activity reports is followed by the activity notifies"], "original_id": "doc-10.9"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nYou are an expert in business process modelling, specialized on BPMN and its elements.\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<activity_data id=0> At </activity_data> the beginning <actor id=133> the customer </actor> <activity id=1> perceives </activity> that <activity_data id=2> her subscribed service </activity_data> <further_specification id=3> has degraded </further_specification> . <activity_data id=4> A list with all the problem parameters </activity_data> is then <activity id=5> sent </activity> to <actor id=6> the Customer Service department of TELECO </actor> . At the customer service <actor id=11> an employee </actor> <activity id=12> enters </activity> ( based on the received data ) <activity_data id=13> a problem report </activity_data> into system T . . Then <activity_data id=14> the problem report </activity_data> is <activity id=15> compared </activity> <further_specification id=16> to the customer SLA </further_specification> to <activity id=17> identify </activity> what the extent and <activity_data id=18> the details of the service degradation </activity_data> are . Based on this , <activity_data id=19> the necessary counter measures </activity_data> are <activity id=20> determined </activity> including their respective priorities . <actor id=21> An electronic service </actor> then <activity id=22> determines </activity> <activity_data id=23> the significance of the customer </activity_data> based on information that has been collected during the history of the contractual relationship . <xor_gateway id=24> In case </xor_gateway> <condition_specification id=25> the customer is premium </condition_specification> , the process will link to an extra <activity_data id=51> problem </activity_data> <activity id=26> fix </activity> process ( this process will not be detailed here ) . <xor_gateway id=27> In case </xor_gateway> <condition_specification id=28> the customer is of certain significance </condition_specification> which would affect the counter measures previously decided upon , the process goes back to re-prioritize these measures <xor_gateway id=29> otherwise </xor_gateway> the process continues . Taking together the information ( i.e . contract commitment data + prioritized actions ) <activity_data id=30> a detailed problem report </activity_data> is <activity id=34> created </activity> . <activity_data id=31> The detailed problem report </activity_data> is then <activity id=35> sent </activity> to <actor id=36> Service Management </actor> . <actor id=43> Service Management </actor> <activity id=47> deals </activity> on a first level with <activity_data id=48> violations of quality in services </activity_data> that are provided to customers . After receiving the detailed problem report , <actor id=44> Service management </actor> <activity id=49> investigates </activity> whether <activity_data id=50> the problem </activity_data> is analyzable at the level of their department or whether the problem may be located at Resource Provisioning . <xor_gateway id=52> In case </xor_gateway> <condition_specification id=53> Service Management assesses the problem to be not analyzable by themselves </condition_specification> , <activity_data id=33> the detailed problem report </activity_data> is <activity id=54> sent out </activity> to <actor id=55> Resource Provisioning </actor> . <xor_gateway id=60> If </xor_gateway> <condition_specification id=61> Service Management is sure they can analyze it </condition_specification> , <actor id=46> they </actor> <activity id=62> perform </activity> <activity_data id=63> the analysis </activity_data> and based on the outcome <actor id=45> they </actor> <activity id=64> create </activity> <activity_data id=65> a trouble report </activity_data> that indicates the type of problem . After <actor id=59> Resource Provisioning </actor> <activity id=68> receives </activity> <activity_data id=32> the detailed problem report </activity_data> , <activity_data id=69> it </activity_data> is <activity id=70> checked </activity> whether there are any possible problems . <xor_gateway id=71> If </xor_gateway> <condition_specification id=72> no problems are detected </condition_specification> , <activity_data id=73> a notification </activity_data> about the normal service execution is <activity id=74> created </activity> . <xor_gateway id=75> If </xor_gateway> <condition_specification id=76> a problem is detected </condition_specification> <activity_data id=77> this </activity_data> will be <activity id=78> analyzed </activity> by <actor id=58> Resource Provisioning </actor> and <activity_data id=66> a trouble report </activity_data> is <activity id=79> created </activity> . Either <activity_data id=67> trouble report </activity_data> or <activity_data id=80> the normal execution notification </activity_data> will be <activity id=81> included </activity> in a status report and <activity id=82> sent back </activity> to <actor id=42> Service Management </actor> . <actor id=41> Service Management </actor> then <activity id=83> prepares </activity> <activity_data id=84> the final status report </activity_data> based on the received information . Subsequently it has to be determined what counter measures should be taken depending on the information in the final status report . Three alternative process paths may be taken . <xor_gateway id=85> For the case </xor_gateway> that <condition_specification id=86> no problem was detected at all </condition_specification> , <activity_data id=87> the actual service performance </activity_data> is <activity id=88> sent back </activity> to <actor id=7> the Customer Service </actor> . <xor_gateway id=89> For the case </xor_gateway> that <condition_specification id=90> minor corrective actions are required </condition_specification> , <actor id=40> Service Management </actor> will <activity id=91> undertake </activity> <activity_data id=92> corrective actions </activity_data> by themselves . Subsequently , <activity_data id=93> the problem resolution report </activity_data> is <activity id=96> created </activity> and then <activity id=97> sent out </activity> to <actor id=10> Customer Service </actor> . After sending , this process path of Service Management ends . <xor_gateway id=98> For the case </xor_gateway> that <condition_specification id=99> automatic resource restoration from Resource Provisioning is required </condition_specification> , <actor id=39> Service Management </actor> must <activity id=100> create </activity> <activity_data id=101> a request </activity_data> for automatic resource restoration . <activity_data id=103> This message </activity_data> is then <activity id=104> sent </activity> to <actor id=57> Resource Provisioning </actor> . Resource Provisioning has been on-hold and waiting for a restoration request but this must happen within 2 days after the status report was sent out , otherwise Resource Provisioning terminates the process . After <activity_data id=102> the restoration request </activity_data> is <activity id=105> received </activity> , <activity_data id=106> all possible errors </activity_data> are <activity id=107> tracked </activity> . Based on the tracked errors , all necessary <activity_data id=108> corrective actions </activity_data> are <activity id=109> undertaken </activity> by <actor id=56> Resource Provisioning </actor> . Then <activity_data id=110> a trouble-shooting report </activity_data> is <activity id=113> created </activity> . <activity_data id=111> This report </activity_data> is <activity id=114> sent out </activity> to <actor id=38> Service Management </actor> ; then the process ends . <activity_data id=112> The trouble-shooting report </activity_data> is <activity id=115> received </activity> by <actor id=37> Service Management </actor> and this information goes then into the <activity id=116> creation </activity> of <activity_data id=95> the problem resolution report </activity_data> just as described for ii ) . <actor id=9> Customer Service </actor> either <activity id=117> receives </activity> <activity_data id=118> the actual service performance </activity_data> ( if there was no problem ) or <activity_data id=94> the problem resolution report </activity_data> . Then , <and_gateway id=119> two concurrent activities are triggered </and_gateway> , i.e . i ) <activity_data id=128> a report </activity_data> is <activity id=120> created </activity> for the customer which details the current service performance and the resolution of the problem , and ii ) <activity_data id=121> an SLA violation rebate </activity_data> is <activity id=122> reported </activity> to <actor id=123> Billing & Collections </actor> <actor id=124> who </actor> will <activity id=125> adjust </activity> <activity_data id=126> the billing </activity_data> . <activity_data id=127> The report </activity_data> for the customer is <activity id=130> sent out </activity> to <actor id=132> her </actor> . After all three activities are completed the process ends within Customer Service . After <actor id=131> the customer </actor> then <activity id=134> receives </activity> <activity_data id=129> the report </activity_data> about service performance and problem resolution from <actor id=8> Customer Service </actor> , the process flow at the customer also ends .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_cot.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 3205, "output_tokens": 945, "total_costs": 0.060399999999999995, "answers": ["actor performer\t1\t133\tthe activity perceives is performed by the customer\nactor recipient\t5\t6\tthe activity sent is received by the Customer Service department of TELECO\nactor performer\t12\t11\tthe activity enters is performed by an employee\nuses\t12\t13\tthis activity_data mention is produced by the activity enters\nuses\t15\t14\tthis activity_data mention is produced by the activity compared\nfurther_specification\t15\t16\tthis further_specification mention describes how the activity compared has to be executed\nuses\t17\t18\tthis activity_data mention is produced by the activity identify\nuses\t20\t19\tthis activity_data mention is produced by the activity determined\nactor performer\t22\t21\tthe activity determines is performed by An electronic service\nuses\t22\t23\tthis activity_data mention is produced by the activity determines\nflow\t24\t25\tIn case leads to the condition the customer is premium\nflow\t27\t28\tIn case leads to the condition the customer is of certain significance\nflow\t27\t29\tIn case leads to otherwise\nuses\t34\t30\tthis activity_data mention is produced by the activity created\nactor recipient\t35\t36\tthe activity sent is received by Service Management\nactor performer\t47\t43\tthe activity deals is performed by Service Management\nuses\t47\t48\tthis activity_data mention is produced by the activity deals\nactor performer\t49\t44\tthe activity investigates is performed by Service management\nuses\t49\t50\tthis activity_data mention is produced by the activity investigates\nflow\t52\t53\tIn case leads to the condition Service Management assesses the problem to be not analyzable by themselves\nactor performer\t54\t55\tthe activity sent out is received by Resource Provisioning\nactor performer\t62\t46\tthe activity perform is performed by they\nuses\t62\t63\tthis activity_data mention is produced by the activity perform\nactor performer\t64\t45\tthe activity create is performed by they\nuses\t64\t65\tthis activity_data mention is produced by the activity create\nactor performer\t68\t59\tthe activity receives is performed by Resource Provisioning\nuses\t70\t69\tthis activity_data mention is produced by the activity checked\nflow\t71\t72\tIf leads to the condition no problems are detected\nuses\t74\t73\tthis activity_data mention is produced by the activity created\nactor performer\t78\t58\tthe activity analyzed is performed by Resource Provisioning\nuses\t78\t77\tthis activity_data mention is produced by the activity analyzed\nuses\t79\t66\tthis activity_data mention is produced by the activity created\nactor recipient\t82\t42\tthe activity sent back is received by Service Management\nactor performer\t83\t41\tthe activity prepares is performed by Service Management\nuses\t83\t84\tthis activity_data mention is produced by the activity prepares\nactor recipient\t88\t7\tthe activity sent back is received by the Customer Service\nactor performer\t91\t40\tthe activity undertake is performed by Service Management\nuses\t91\t92\tthis activity_data mention is produced by the activity undertake\nuses\t96\t93\tthis activity_data mention is produced by the activity created\nactor recipient\t97\t10\tthe activity sent out is received by Customer Service\nactor performer\t100\t39\tthe activity create is performed by Service Management\nuses\t100\t101\tthis activity_data mention is produced by the activity create\nactor recipient\t104\t57\tthe activity sent is received by Resource Provisioning\nactor performer\t105\t56\tthe activity received is performed by Resource Provisioning\nuses\t105\t102\tthis activity_data mention is produced by the activity received\nuses\t107\t106\tthis activity_data mention is produced by the activity tracked\nactor performer\t109\t56\tthe activity undertaken is performed by Resource Provisioning\nuses\t109\t108\tthis activity_data mention is produced by the activity undertaken\nuses\t113\t110\tthis activity_data mention is produced by the activity created\nactor recipient\t114\t38\tthe activity sent out is received by Service Management\nactor recipient\t115\t37\tthe activity received is received by Service Management\nuses\t116\t95\tthis activity_data mention is produced by the activity creation\nactor recipient\t117\t9\tthe activity receives is received by Customer Service\nuses\t120\t128\tthis activity_data mention is produced by the activity created\nuses\t122\t121\tthis activity_data mention is produced by the activity reported\nactor performer\t125\t124\tthe activity adjust is performed by who\nuses\t125\t126\tthis activity_data mention is produced by the activity adjust\nactor recipient\t130\t132\tthe activity sent out is received by her\nactor recipient\t134\t131\tthe activity receives is received by the customer"], "original_id": "doc-2.1"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nYou are an expert in business process modelling, specialized on BPMN and its elements.\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nThe process of Vacations Request starts when <actor id=0> any employee </actor> of the organization <activity id=2> submits </activity> <activity_data id=3> a vacation request </activity_data> . Once <activity_data id=4> the requirement </activity_data> is <activity id=5> registered </activity> , <activity_data id=6> the request </activity_data> is <activity id=9> received </activity> by <actor id=10> the immediate supervisor </actor> of the employee requesting the vacation . <actor id=11> The supervisor </actor> must <activity id=12> approve or reject </activity> <activity_data id=7> the request </activity_data> . <xor_gateway id=13> If </xor_gateway> <condition_specification id=14> the request is rejected </condition_specification> , <activity_data id=8> the application </activity_data> is <activity id=15> returned </activity> to <actor id=1> the applicant / employee </actor> who can review the rejection reasons . <xor_gateway id=16> If </xor_gateway> <condition_specification id=17> the request is approved </condition_specification> <activity_data id=18> a notification </activity_data> is <activity id=19> generated </activity> to <actor id=20> the Human Resources Representative </actor> , <actor id=21> who </actor> must <activity id=22> complete </activity> <activity_data id=23> the respective management procedures </activity_data> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_cot.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1367, "output_tokens": 359, "total_costs": 0.024439999999999996, "answers": ["actor performer\t2\t0\tthe activity submits is performed by any employee\nuses\t2\t3\tthis activity_data mention is produced by the activity submits\nflow\t2\t5\tthe activity submits is performed before the activity registered\nactor performer\t5\t10\tthe activity registered is performed by the immediate supervisor\nuses\t5\t4\tthis activity_data mention is produced by the activity registered\nflow\t5\t9\tthe activity registered is performed before the activity received\nactor performer\t9\t10\tthe activity received is performed by the immediate supervisor\nuses\t9\t6\tthis activity_data mention is produced by the activity received\nactor performer\t12\t11\tthe activity approve or reject is performed by The supervisor\nuses\t12\t7\tthis activity_data mention is produced by the activity approve or reject\nflow\t9\t12\tthe activity received is performed before the activity approve or reject\nflow\t12\t15\tthe activity approve or reject is performed before the activity returned\nflow\t12\t19\tthe activity approve or reject is performed before the activity generated\nflow\t13\t14\tthe XOR_Gateway If leads to the condition the request is rejected\nflow\t16\t17\tthe XOR_Gateway If leads to the condition the request is approved\nactor performer\t15\t1\tthe activity returned is performed by the applicant / employee\nuses\t15\t8\tthis activity_data mention is produced by the activity returned\nactor performer\t19\t20\tthe activity generated is performed by the Human Resources Representative\nuses\t19\t18\tthis activity_data mention is produced by the activity generated\nactor performer\t22\t21\tthe activity complete is performed by who\nuses\t22\t23\tthis activity_data mention is produced by the activity complete\nflow\t19\t22\tthe activity generated is performed before the activity complete"], "original_id": "doc-5.2"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nYou are an expert in business process modelling, specialized on BPMN and its elements.\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nThe process starts when <actor id=0> a customer </actor> <activity id=2> submits </activity> <activity_data id=3> a claim </activity_data> <further_specification id=7> by sending in relevant documentation </further_specification> . <actor id=8> The Notification department </actor> at the car insurer <activity id=9> checks </activity> <activity_data id=10> the documents </activity_data> <further_specification id=11> upon completeness </further_specification> and <activity id=12> registers </activity> <activity_data id=6> the claim </activity_data> . Then , <actor id=13> the Handling department </actor> <activity id=14> picks up </activity> <activity_data id=5> the claim </activity_data> and <activity id=15> checks </activity> <activity_data id=16> the insurance </activity_data> . Then , <activity_data id=17> an assessment </activity_data> is <activity id=18> performed </activity> . <xor_gateway id=19> If </xor_gateway> <condition_specification id=20> the assessment is positive </condition_specification> , <actor id=21> a garage </actor> is <activity id=22> phoned </activity> <further_specification id=23> to authorise the repairs </further_specification> and <activity_data id=24> the payment </activity_data> is <activity id=25> scheduled </activity> ( in this order ) . <xor_gateway id=26> Otherwise </xor_gateway> , <activity_data id=4> the claim </activity_data> is <activity id=27> rejected </activity> . In any case ( whether the outcome is positive or negative ) , <activity_data id=28> a letter </activity_data> is <activity id=29> sent </activity> to <actor id=1> the customer </actor> and the process is considered to be complete .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_cot.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1462, "output_tokens": 504, "total_costs": 0.02974, "answers": ["actor performer\t2\t0\tthe activity submits is performed by a customer\nuses\t2\t3\tthis activity_data mention is produced by the activity submits\nfurther specification\t2\t7\tthis further_specification mention describes how the activity submits has to be executed\nactor performer\t9\t8\tthe activity checks is performed by The Notification department\nuses\t9\t10\tthis activity_data mention is produced by the activity checks\nactor recipient\t9\t11\tthis further_specification mention describes how the activity checks has to be executed\nuses\t12\t6\tthis activity_data mention is produced by the activity registers\nactor performer\t14\t13\tthe activity picks up is performed by the Handling department\nuses\t14\t5\tthis activity_data mention is produced by the activity picks up\nactor performer\t15\t13\tthe activity checks is performed by the Handling department\nactor performer\t15\t16\tthis activity_data mention is produced by the activity checks\nuses\t18\t17\tthis activity_data mention is produced by the activity performed\nflow\t2\t9\tthe activity submits is followed by the activity checks\nflow\t9\t12\tthe activity checks is followed by the activity registers\nflow\t12\t14\tthe activity registers is followed by the activity picks up\nactor performer\t14\t15\tthe activity picks up is followed by the activity checks\nflow\t15\t18\tthe activity checks is followed by the activity performed\nflow\t18\t22\tthe activity performed is followed by the activity phoned\nflow\t22\t25\tthe activity phoned is followed by the activity scheduled\nflow\t25\t27\tthe activity scheduled is followed by the activity rejected\nflow\t27\t29\tthe activity rejected is followed by the activity sent\nflow\t19\t20\tthe XOR_Gateway If is followed by the condition_specification the assessment is positive\nflow\t26\t27\tthe XOR_Gateway Otherwise is followed by the activity rejected\nactor performer\t22\t21\tthe activity phoned is performed by a garage\nfurther specification\t22\t23\tthis further_specification mention describes how the activity phoned has to be executed\nuses\t22\t24\tthis activity_data mention is produced by the activity phoned\nuses\t25\t24\tthis activity_data mention is produced by the activity scheduled\nactor recipient\t29\t1\tthe activity sent is received by the customer\nuses\t29\t28\tthis activity_data mention is produced by the activity sent\nsame gateway\t19\t26\tthese mentions describe the same decision point in the process execution"], "original_id": "doc-3.8"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nYou are an expert in business process modelling, specialized on BPMN and its elements.\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The EC </actor> <activity id=1> tells </activity> <actor id=2> the INQ </actor> <activity_data id=4> about the change of his master data </activity_data> . <actor id=3> The INQ </actor> <activity id=5> notifies </activity> <actor id=6> the IP </actor> of <activity_data id=10> the change </activity_data> . <actor id=8> The IP </actor> <activity id=13> checks </activity> <further_specification id=14> whether the master data can be changed at the desired time </further_specification> . <actor id=7> The IP </actor> <activity id=15> confirmes </activity> <activity_data id=11> the changes of the INQ </activity_data> <xor_gateway id=16> or </xor_gateway> <actor id=9> the IP </actor> <activity id=17> rejectes </activity> <activity_data id=12> the changes of the INQ </activity_data> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_cot.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1271, "output_tokens": 286, "total_costs": 0.021289999999999996, "answers": ["actor performer\t1\t0\tthe activity tells is performed by The EC\nactor recipient\t1\t2\tthe activity tells affects the INQ, making them the recipient\nuses\t1\t4\tthe activity tells uses the information about the change of his master data\nactor performer\t5\t3\tthe activity notifies is performed by The INQ\nactor recipient\t5\t6\tthe activity notifies affects the IP, making them the recipient\nuses\t5\t10\tthe activity notifies uses the information about the change\nactor performer\t13\t8\tthe activity checks is performed by The IP\nfurther specification\t13\t14\tthe activity checks is further described by whether the master data can be changed at the desired time\nactor performer\t15\t7\tthe activity confirmes is performed by The IP\nuses\t15\t11\tthe activity confirmes uses the information about the changes of the INQ\nactor performer\t17\t9\tthe activity rejectes is performed by The IP\nuses\t17\t12\tthe activity rejectes uses the information about the changes of the INQ\nflow\t1\t5\tthe activity tells is followed by the activity notifies\nflow\t5\t13\tthe activity notifies is followed by the activity checks\nflow\t13\t15\tthe activity checks is followed by the activity confirmes\nflow\t15\t17\tthe activity confirmes is followed by the activity rejectes, through an XOR gateway indicating a decision point"], "original_id": "doc-10.12"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nYou are an expert in business process modelling, specialized on BPMN and its elements.\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The GO </actor> <activity id=6> requests </activity> <activity_data id=7> the measurements </activity_data> to <actor id=8> the MSP </actor> . <actor id=11> The MSP </actor> <activity id=15> checks </activity> <activity_data id=16> the received request </activity_data> . <actor id=10> The MSP </actor> <activity id=18> denies </activity> <activity_data id=17> the request of the GO </activity_data> <xor_gateway id=19> or </xor_gateway> <actor id=14> the MSP </actor> <activity id=20> performs </activity> <activity_data id=21> the measurement </activity_data> . <actor id=9> The MSP </actor> <activity id=22> informs </activity> <actor id=5> the GO </actor> <activity_data id=23> about the failure of the reading </activity_data> <xor_gateway id=24> or </xor_gateway> <actor id=13> the MSP </actor> <activity id=25> transmits </activity> <activity_data id=26> the measured values </activity_data> to <actor id=4> the GO </actor> . <actor id=3> The GO </actor> <activity id=30> processes </activity> <activity_data id=27> the measured values </activity_data> . <actor id=2> The GO </actor> <activity id=31> sends </activity> <activity_data id=28> the changed values </activity_data> to <actor id=12> the MSP </actor> . <actor id=1> The GO </actor> <activity id=32> transmit </activity> <activity_data id=29> the readings </activity_data> to <actor id=33> the SP </actor> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_cot.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1440, "output_tokens": 512, "total_costs": 0.02976, "answers": ["actor performer\t6\t0\tthe activity requests is performed by The GO\nuses\t6\t7\tthis activity_data mention is produced by the activity requests\nflow\t6\t8\tthe result of the activity requests is received by the MSP\nactor performer\t15\t11\tthe activity checks is performed by The MSP\nuses\t15\t16\tthis activity_data mention is produced by the activity checks\nactor performer\t18\t10\tthe activity denies is performed by The MSP\nuses\t18\t17\tthis activity_data mention is produced by the activity denies\nactor performer\t20\t14\tthe activity performs is performed by The MSP\nfurther specification\t20\t21\tthis activity_data mention is produced by the activity performs\nactor performer\t22\t9\tthe activity informs is performed by The MSP\nactor recipient\t22\t5\tthe result of the activity informs is received by the GO\nuses\t22\t23\tthis activity_data mention is produced by the activity informs\nactor performer\t25\t13\tthe activity transmits is performed by The MSP\nactor recipient\t25\t4\tthe result of the activity transmits is received by the GO\nuses\t25\t26\tthis activity_data mention is produced by the activity transmits\nactor performer\t30\t3\tthe activity processes is performed by The GO\nuses\t30\t27\tthis activity_data mention is produced by the activity processes\nactor performer\t31\t2\tthe activity sends is performed by The GO\nactor recipient\t31\t12\tthe result of the activity sends is received by the MSP\nuses\t31\t28\tthis activity_data mention is produced by the activity sends\nactor performer\t32\t1\tthe activity transmit is performed by The GO\nactor recipient\t32\t33\tthe result of the activity transmit is received by the SP\nuses\t32\t29\tthis activity_data mention is produced by the activity transmit\nflow\t6\t15\tthe activity requests is followed by the activity checks\nflow\t15\t18\tthe activity checks is followed by the activity denies\nflow\t18\t20\tthe activity denies is followed by the activity performs\nflow\t20\t22\tthe activity performs is followed by the activity informs\nflow\t22\t25\tthe activity informs is followed by the activity transmits\nflow\t25\t30\tthe activity transmits is followed by the activity processes\nflow\t30\t31\tthe activity processes is followed by the activity sends\nflow\t31\t32\tthe activity sends is followed by the activity transmit\nsame gateway\t19\t24\tthe xor_gateway or is mentioned again, linking the decision points"], "original_id": "doc-10.11"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nYou are an expert in business process modelling, specialized on BPMN and its elements.\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The fault detector </actor> <activity id=1> reports </activity> <activity_data id=2> a failure </activity_data> to <actor id=3> the MPO </actor> <xor_gateway id=13> or </xor_gateway> <actor id=4> MPO </actor> has a <activity id=14> suspicion </activity> <activity_data id=15> of their own fault </activity_data> . <actor id=11> The MPO </actor> shall <activity id=16> examine </activity> <activity_data id=17> the failure </activity_data> . <actor id=10> The MPO </actor> <activity id=21> rejects </activity> <activity_data id=19> the failure of the fault detector </activity_data> <xor_gateway id=22> or </xor_gateway> <actor id=5> the MPO </actor> <activity id=23> confirms </activity> <activity_data id=18> the failure of the fault detector </activity_data> . If the MPO confirms the failure of the fault detector , <actor id=12> he </actor> <activity id=24> informes </activity> <actor id=25> the GO </actor> and <actor id=27> the MSP </actor> . <actor id=9> The MPO </actor> <activity id=29> fixes </activity> <activity_data id=20> the fault at the measuring device </activity_data> . <actor id=8> The MPO </actor> <activity id=30> shares </activity> <activity_data id=31> the results of the repairs </activity_data> <further_specification id=32> carried out with the fault detector </further_specification> . <actor id=7> The MPO </actor> will <activity id=33> inform </activity> <actor id=26> the GO </actor> <activity_data id=34> about the resolution of the interference </activity_data> . <actor id=6> The MPO </actor> will <activity id=36> inform </activity> <actor id=28> the MSP </actor> <activity_data id=35> about the resolution of the interference </activity_data> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_cot.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1520, "output_tokens": 552, "total_costs": 0.031760000000000004, "answers": ["actor performer\t1\t0\tthe activity reports is performed by the fault detector\nuses\t1\t2\tthis activity_data mention is produced by the activity reports\nactor recipient\t1\t3\tthe result of the activity reports is received by the MPO\nactor performer\t14\t4\tthe activity suspicion is performed by MPO\nuses\t14\t15\tthis activity_data mention is produced by the activity suspicion\nactor performer\t16\t11\tthe activity examine is performed by the MPO\nuses\t16\t17\tthis activity_data mention is produced by the activity examine\nactor performer\t21\t10\tthe activity rejects is performed by the MPO\nuses\t21\t19\tthis activity_data mention is produced by the activity rejects\nactor performer\t23\t5\tthe activity confirms is performed by the MPO\nuses\t23\t18\tthis activity_data mention is produced by the activity confirms\nactor performer\t24\t12\tthe activity informes is performed by he\nactor recipient\t24\t25\tthe result of the activity informes is received by the GO\nfurther specification\t24\t27\tthe result of the activity informes is received by the MSP\nactor performer\t29\t9\tthe activity fixes is performed by the MPO\nactor recipient\t29\t20\tthis activity_data mention is produced by the activity fixes\nactor performer\t30\t8\tthe activity shares is performed by the MPO\nuses\t30\t31\tthis activity_data mention is produced by the activity shares\nfurther specification\t30\t32\tthe activity shares is further specified by carried out with the fault detector\nactor performer\t33\t7\tthe activity inform is performed by the MPO\nactor recipient\t33\t26\tthe result of the activity inform is received by the GO\nuses\t33\t34\tthis activity_data mention is produced by the activity inform\nactor performer\t36\t6\tthe activity inform is performed by the MPO\nactor recipient\t36\t28\tthe result of the activity inform is received by the MSP\nuses\t36\t35\tthis activity_data mention is produced by the activity inform\nflow\t1\t14\tthe activity reports is followed by the activity suspicion\nflow\t14\t16\tthe activity suspicion is followed by the activity examine\nflow\t16\t21\tthe activity examine is followed by the activity rejects\nflow\t21\t23\tthe activity rejects is followed by the activity confirms\nflow\t23\t24\tthe activity confirms is followed by the activity informes\nflow\t24\t29\tthe activity informes is followed by the activity fixes\nflow\t29\t30\tthe activity fixes is followed by the activity shares\nflow\t30\t33\tthe activity shares is followed by the activity inform\nflow\t33\t36\tthe activity inform is followed by the activity inform"], "original_id": "doc-10.10"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nYou are an expert in business process modelling, specialized on BPMN and its elements.\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> A customer </actor> <activity id=2> brings in </activity> <activity_data id=3> a defective computer </activity_data> and <actor id=5> the CRS </actor> <activity id=6> checks </activity> <activity_data id=7> the defect </activity_data> and <activity id=8> hands out </activity> <activity_data id=9> a repair cost calculation </activity_data> back . <xor_gateway id=10> If </xor_gateway> <condition_specification id=11> the customer decides that the costs are acceptable </condition_specification> , the process continues , <xor_gateway id=12> otherwise </xor_gateway> <actor id=1> she </actor> <activity id=13> takes </activity> <activity_data id=4> her computer </activity_data> <further_specification id=14> home unrepaired </further_specification> . The ongoing repair consists of two activities , which are executed , in an arbitrary order . The first activity is to <activity id=15> check </activity> and <activity id=16> repair </activity> <activity_data id=17> the hardware </activity_data> , <and_gateway id=18> whereas </and_gateway> the second activity <activity id=19> checks </activity> and <activity id=20> configures </activity> <activity_data id=21> the software </activity_data> . After each of these activities , <activity_data id=22> the proper system functionality </activity_data> is <activity id=23> tested </activity> . <xor_gateway id=24> If </xor_gateway> <condition_specification id=25> an error is detected </condition_specification> <activity_data id=26> another arbitrary repair activity </activity_data> is <activity id=27> executed </activity> , <xor_gateway id=28> otherwise </xor_gateway> the repair is finished .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_cot.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1448, "output_tokens": 517, "total_costs": 0.02999, "answers": ["actor performer\t2\t0\tthe activity brings in is performed by A customer\nuses\t2\t3\tthis activity_data mention is produced by the activity brings in\nactor performer\t6\t5\tthe activity checks is performed by the CRS\nuses\t6\t7\tthis activity_data mention is produced by the activity checks\nactor performer\t8\t5\tthe activity hands out is performed by the CRS\nuses\t8\t9\tthis activity_data mention is produced by the activity hands out\nflow\t2\t6\tthe activity brings in is followed by the activity checks\nflow\t6\t8\tthe activity checks is followed by the activity hands out\nflow\t8\t10\tthe activity hands out is followed by the xor_gateway If\nflow\t10\t11\tthe xor_gateway If is followed by the condition_specification the customer decides that the costs are acceptable\nflow\t11\t12\tthe condition_specification the customer decides that the costs are acceptable is followed by the xor_gateway otherwise\nactor recipient\t13\t1\tthe activity takes is passively affecting she\nuses\t13\t4\tthis activity_data mention is produced by the activity takes\nfurther specification\t13\t14\tthis further_specification mention describes how the activity takes has to be executed\nflow\t12\t13\tthe xor_gateway otherwise is followed by the activity takes\nflow\t15\t16\tthe activity check is followed by the activity repair in an arbitrary order\nuses\t15\t17\tthis activity_data mention is produced by the activity check\nuses\t16\t17\tthis activity_data mention is produced by the activity repair\nflow\t16\t18\tthe activity repair is followed by the and_gateway whereas\nflow\t18\t19\tthe and_gateway whereas is followed by the activity checks\nflow\t19\t20\tthe activity checks is followed by the activity configures\nuses\t19\t21\tthis activity_data mention is produced by the activity checks\nuses\t20\t21\tthis activity_data mention is produced by the activity configures\nflow\t20\t23\tthe activity configures is followed by the activity tested\nuses\t23\t22\tthis activity_data mention is produced by the activity tested\nflow\t23\t24\tthe activity tested is followed by the xor_gateway If\nflow\t24\t25\tthe xor_gateway If is followed by the condition_specification an error is detected\nuses\t27\t26\tthis activity_data mention is produced by the activity executed\nflow\t25\t27\tthe condition_specification an error is detected is followed by the activity executed\nflow\t27\t28\tthe activity executed is followed by the xor_gateway otherwise"], "original_id": "doc-1.2"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nYou are an expert in business process modelling, specialized on BPMN and its elements.\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nFirst , <actor id=0> the Manager </actor> <activity id=5> checks </activity> <activity_data id=6> the open leads </activity_data> . Afterwards , <actor id=1> he </actor> <activity id=7> selects </activity> <activity_data id=8> the top five ones </activity_data> . <actor id=3> He </actor> then <activity id=9> tells </activity> his <actor id=10> Sales Assistant </actor> <activity_data id=14> to call the contact person of the leads </activity_data> . <actor id=13> The Sales Assistant </actor> <activity id=15> calls </activity> <activity_data id=16> each customer </activity_data> . <xor_gateway id=17> If </xor_gateway> <condition_specification id=18> someone is interested </condition_specification> , <actor id=12> he </actor> <activity id=19> sends </activity> <activity_data id=20> a note </activity_data> to <actor id=2> the Manager </actor> . <actor id=4> The Manager </actor> then <activity id=21> processes </activity> <activity_data id=22> the lead </activity_data> . <xor_gateway id=23> Otherwise </xor_gateway> , <actor id=11> he </actor> <activity id=24> calls </activity> <activity_data id=25> the next customer </activity_data> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_cot.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1356, "output_tokens": 359, "total_costs": 0.024329999999999997, "answers": ["actor performer\t5\t0\tthe activity checks is performed by the Manager\nuses\t5\t6\tthis activity_data mention is produced by the activity checks\nflow\t5\t7\tthe activity checks is performed before the activity selects\nactor performer\t7\t1\tthe activity selects is performed by the Manager\nuses\t7\t8\tthis activity_data mention is produced by the activity selects\nflow\t7\t9\tthe activity selects is performed before the activity tells\nactor performer\t9\t3\tthe activity tells is performed by the Manager\nactor recipient\t9\t10\tthe activity tells is directed towards the Sales Assistant\nuses\t9\t14\tthis activity_data mention is produced by the activity tells\nflow\t9\t15\tthe activity tells is performed before the activity calls\nactor performer\t15\t13\tthe activity calls is performed by the Sales Assistant\nuses\t15\t16\tthis activity_data mention is produced by the activity calls\nactor performer\t15\t19\tthe activity calls is performed before the activity sends\nflow\t17\t18\tthe XOR_Gateway If leads to the condition someone is interested\nactor performer\t19\t12\tthe activity sends is performed by the Sales Assistant\nuses\t19\t20\tthis activity_data mention is produced by the activity sends\nactor recipient\t19\t2\tthe activity sends is directed towards the Manager\nflow\t19\t21\tthe activity sends is performed before the activity processes\nactor performer\t21\t4\tthe activity processes is performed by the Manager\nuses\t21\t22\tthis activity_data mention is produced by the activity processes\nflow\t23\t24\tthe XOR_Gateway Otherwise leads to the activity calls\nactor performer\t24\t11\tthe activity calls is performed by the Sales Assistant\nuses\t24\t25\tthis activity_data mention is produced by the activity calls"], "original_id": "doc-7.1"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nYou are an expert in business process modelling, specialized on BPMN and its elements.\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nThe process is initiated by a switch-over request . In doing so , <actor id=0> the customer </actor> <activity id=4> transmits </activity> <activity_data id=5> his data </activity_data> to <actor id=8> the customer service department </actor> of the company . Customer service is a shared service center between the departments Sales and Distribution . <activity_data id=6> The customer data </activity_data> is <activity id=13> received </activity> by <actor id=11> customer service </actor> and based on this data <activity_data id=14> a customer data object </activity_data> is <activity id=15> entered </activity> <further_specification id=16> into the CRM system </further_specification> . After customer data has been entered <activity_data id=7> it </activity_data> should then be <activity id=17> compared </activity> with <activity_data id=18> the internal customer data base </activity_data> and <activity id=19> checked </activity> <further_specification id=20> for completeness and plausibility </further_specification> . <xor_gateway id=21> In case of </xor_gateway> <condition_specification id=22> any errors </condition_specification> <activity_data id=23> these </activity_data> should be <activity id=24> corrected </activity> on the basis of a simple error list . The comparison of data is done to prevent individual customer data being stored multiple times . <xor_gateway id=25> In case </xor_gateway> <condition_specification id=26> the customer does not exist in the customer data base </condition_specification> , <activity_data id=27> a new customer object </activity_data> is being <activity id=28> created </activity> which will remain the data object of interest during the rest of the process flow . This object consists of data elements such as the customer's name and address and the assigned power gauge . The generated customer object is then used , in combination with other customer data to <activity id=29> prepare </activity> <activity_data id=30> the contract documents for the power supplier switch </activity_data> ( including data such as bank connection , information on the selected rate , requested date of switch-over ) . In the following an automated <activity id=33> check </activity> of <activity_data id=32> the contract documents </activity_data> is carried out within <actor id=34> the CIS </actor> ( customer information system ) in order to confirm their successful generation . <xor_gateway id=36> In case of </xor_gateway> <condition_specification id=37> a negative response </condition_specification> , i.e . the contract documents are not ( or incorrectly ) generated , <activity_data id=38> the causing issues </activity_data> are being <activity id=39> analyzed </activity> and <activity id=40> resolved </activity> . Subsequently <activity_data id=31> the contract documents </activity_data> are <activity id=41> generated </activity> once again . <xor_gateway id=42> In case of </xor_gateway> <condition_specification id=43> a positive response </condition_specification> <activity_data id=44> a confirmation document </activity_data> is <activity id=45> sent out </activity> to <actor id=2> the customer </actor> stating that the switch-over to the new supplier can be executed . <activity_data id=46> A request </activity_data> to <actor id=48> the grid operator </actor> is automatically <activity id=55> sent out </activity> by <actor id=35> the CIS </actor> . It puts the question whether the customer may be supplied by the selected supplier in the future . <activity_data id=47> The switch-over request </activity_data> is <activity id=56> checked </activity> by <actor id=53> the grid operator </actor> for supplier concurrence , and <actor id=52> the grid operator </actor> <activity id=57> transmits </activity> <activity_data id=58> a response comment </activity_data> . <xor_gateway id=59> In the case of </xor_gateway> <condition_specification id=60> supplier concurrence </condition_specification> <actor id=51> the grid operator </actor> would <activity id=61> inform </activity> <actor id=62> all involved suppliers </actor> and <activity id=63> demand </activity> <activity_data id=64> the resolution of the conflict </activity_data> . <actor id=54> The grid operator </actor> <activity id=65> communicates </activity> with <actor id=66> the old supplier </actor> and <activity id=70> carries out </activity> <activity_data id=71> the termination of the sales agreement </activity_data> between the customer and the old supplier ( i.e . the customer service ( of the new supplier ) does not have to interact with the old supplier regarding termination ) . <xor_gateway id=72> If </xor_gateway> <condition_specification id=73> there are not any objections by the grid operator </condition_specification> ( i.e . no supplier concurrence ) , <actor id=10> customer service </actor> <activity id=74> creates </activity> <activity_data id=75> a CIS contract </activity_data> . <actor id=3> The customer </actor> then has the chance to <activity id=78> check </activity> <activity_data id=79> the contract details </activity_data> and based on this check may decide to <xor_gateway id=80> either </xor_gateway> <activity id=81> withdraw </activity> from <activity_data id=76> the switch contract </activity_data> <xor_gateway id=82> or </xor_gateway> <activity id=83> confirm </activity> <activity_data id=77> it </activity_data> . Depending on the customer's acceptance / rejection the process flow at customer service either ends ( in case of withdrawal ) or continues ( in case of a confirmation ) . An additional constraint is that the customer can only withdraw from the offered contract within 7 days after the 7th day the contract will be regarded as accepted and the process continues . The confirmation message by the customer is therefore not absolutely necessary ( as it will count as accepted after 7 days in any way ) but it can speed up the switch process . On the switch-date , but no later than 10 days after power supply has begun , <actor id=50> the grid operator </actor> <activity id=84> transmits </activity> <activity_data id=85> the power meter data </activity_data> to <actor id=12> the customer service </actor> and <actor id=69> the old supplier </actor> <further_specification id=88> via messages containing a services consumption report </further_specification> . <and_gateway id=89> At the same time </and_gateway> , <actor id=49> the grid operator </actor> <activity id=90> computes </activity> <activity_data id=91> the final billing </activity_data> based on the meter data and <activity id=94> sends </activity> <activity_data id=92> it </activity_data> to <actor id=68> the old supplier </actor> . Likewise <actor id=67> the old supplier </actor> <activity id=95> creates </activity> and <activity id=96> sends </activity> <activity_data id=93> the final billing </activity_data> to <actor id=1> the customer </actor> . For the customer as well as the grid operator the process ends then . After <activity id=97> receiving </activity> <activity_data id=86> the meter data </activity_data> <actor id=9> customer service </actor> <activity id=98> imports </activity> <activity_data id=87> the meter data </activity_data> to systems that require the information . The process of winning a new customer ends here .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_cot.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 2775, "output_tokens": 1376, "total_costs": 0.06903, "answers": ["actor performer\t4\t0\tthe activity transmits is performed by the customer\nuses\t4\t5\tthis activity_data mention is produced by the activity transmits\nactor recipient\t4\t8\tthe activity transmits affects the customer service department\nactor performer\t13\t11\tthe activity received is performed by customer service\nuses\t13\t6\tthis activity_data mention is produced by the activity received\nuses\t15\t14\tthis activity_data mention is produced by the activity entered\nfurther specification\t15\t16\tthis further_specification mention describes how the activity entered is executed\nuses\t17\t7\tthis activity_data mention is produced by the activity compared\nuses\t17\t18\tthis activity_data mention is produced by the activity compared\nuses\t19\t7\tthis activity_data mention is produced by the activity checked\nfurther specification\t19\t20\tthis further_specification mention describes how the activity checked is executed\nflow\t4\t13\tthe activity transmits is performed before the activity received\nflow\t13\t15\tthe activity received is performed before the activity entered\nflow\t15\t17\tthe activity entered is performed before the activity compared\nflow\t17\t19\tthe activity compared is performed before the activity checked\nflow\t19\t24\tthe activity checked is performed before the activity corrected\nflow\t24\t28\tthe activity corrected is performed before the activity created\nflow\t28\t29\tthe activity created is performed before the activity prepare\nflow\t29\t33\tthe activity prepare is performed before the activity check\nflow\t33\t39\tthe activity check is performed before the activity analyzed\nflow\t39\t40\tthe activity analyzed is performed before the activity resolved\nflow\t40\t41\tthe activity resolved is performed before the activity generated\nflow\t41\t45\tthe activity generated is performed before the activity sent out\nflow\t45\t55\tthe activity sent out is performed before the activity sent out\nflow\t55\t56\tthe activity sent out is performed before the activity checked\nflow\t56\t57\tthe activity checked is performed before the activity transmits\nflow\t57\t61\tthe activity transmits is performed before the activity inform\nflow\t61\t63\tthe activity inform is performed before the activity demand\nflow\t63\t65\tthe activity demand is performed before the activity communicates\nflow\t65\t70\tthe activity communicates is performed before the activity carries out\nflow\t70\t74\tthe activity carries out is performed before the activity creates\nflow\t74\t78\tthe activity creates is performed before the activity check\nflow\t78\t81\tthe activity check is performed before the activity withdraw\nflow\t81\t83\tthe activity withdraw is performed before the activity confirm\nflow\t83\t84\tthe activity confirm is performed before the activity transmits\nflow\t84\t90\tthe activity transmits is performed before the activity computes\nflow\t90\t94\tthe activity computes is performed before the activity sends\nflow\t94\t95\tthe activity sends is performed before the activity creates\nflow\t95\t96\tthe activity creates is performed before the activity sends\nflow\t96\t97\tthe activity sends is performed before the activity receiving\nflow\t97\t98\tthe activity receiving is performed before the activity imports\nuses\t24\t23\tthis activity_data mention is produced by the activity corrected\nuses\t28\t27\tthis activity_data mention is produced by the activity created\nuses\t29\t30\tthis activity_data mention is produced by the activity prepare\nactor performer\t33\t34\tthe activity check is performed by the CIS\nuses\t33\t32\tthis activity_data mention is produced by the activity check\nuses\t39\t38\tthis activity_data mention is produced by the activity analyzed\nuses\t41\t31\tthis activity_data mention is produced by the activity generated\nactor recipient\t45\t2\tthe activity sent out affects the customer\nuses\t45\t44\tthis activity_data mention is produced by the activity sent out\nactor performer\t55\t35\tthe activity sent out is performed by the CIS\nactor recipient\t55\t48\tthe activity sent out affects the grid operator\nuses\t55\t47\tthis activity_data mention is produced by the activity sent out\nactor performer\t56\t53\tthe activity checked is performed by the grid operator\nactor recipient\t56\t52\tthe activity checked affects the grid operator\nuses\t57\t58\tthis activity_data mention is produced by the activity transmits\nactor performer\t65\t54\tthe activity communicates is performed by the grid operator\nactor recipient\t65\t66\tthe activity communicates affects the old supplier\nuses\t70\t71\tthis activity_data mention is produced by the activity carries out\nuses\t74\t75\tthis activity_data mention is produced by the activity creates\nuses\t78\t79\tthis activity_data mention is produced by the activity check\nuses\t81\t76\tthis activity_data mention is produced by the activity withdraw\nuses\t83\t77\tthis activity_data mention is produced by the activity confirm\nactor performer\t84\t50\tthe activity transmits is performed by the grid operator\nactor recipient\t84\t12\tthe activity transmits affects the customer service\nactor recipient\t84\t69\tthe activity transmits affects the old supplier\nfurther specification\t84\t88\tthis further_specification mention describes how the activity transmits is executed\nuses\t90\t91\tthis activity_data mention is produced by the activity computes\nuses\t94\t92\tthis activity_data mention is produced by the activity sends\nactor recipient\t94\t68\tthe activity sends affects the old supplier\nuses\t95\t93\tthis activity_data mention is produced by the activity creates\nactor recipient\t95\t1\tthe activity creates affects the customer\nuses\t96\t93\tthis activity_data mention is produced by the activity sends\nactor recipient\t96\t1\tthe activity sends affects the customer\nuses\t98\t87\tthis activity_data mention is produced by the activity imports\nuses\t98\t86\tthis activity_data mention is produced by the activity imports\nflow\t21\t22\tthe xor_gateway precedes the condition_specification any errors\nflow\t25\t26\tthe xor_gateway precedes the condition_specification the customer does not exist in the customer data base\nflow\t36\t37\tthe xor_gateway precedes the condition_specification a negative response\nflow\t42\t43\tthe xor_gateway precedes the condition_specification a positive response\nflow\t59\t60\tthe xor_gateway precedes the condition_specification supplier concurrence\nflow\t72\t73\tthe xor_gateway precedes the condition_specification there are not any objections by the grid operator\nflow\t80\t81\tthe xor_gateway precedes the activity withdraw\nflow\t80\t83\tthe xor_gateway precedes the activity confirm\nflow\t82\t83\tthe xor_gateway precedes the activity confirm\nsame gateway\t80\t82\tthe xor_gateway either describes the same decision point as or"], "original_id": "doc-2.2"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nYou are an expert in business process modelling, specialized on BPMN and its elements.\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<xor_gateway id=0> If </xor_gateway> <actor id=1> the MPOO </actor> <activity id=3> sends </activity> <activity_data id=4> the bill for the temporary continuation of the metering point operations </activity_data> to <actor id=6> the GO </actor> , <actor id=11> the GO </actor> <activity id=12> examines </activity> <activity_data id=5> the bill </activity_data> . <xor_gateway id=13> If </xor_gateway> <actor id=14> the MSPO </actor> <activity id=15> sends </activity> <activity_data id=16> the bill for the temporary continuation of the measurement </activity_data> to <actor id=10> the GO </actor> , <actor id=9> the GO </actor> <activity id=18> examines </activity> <activity_data id=17> the bill </activity_data> . <xor_gateway id=19> If </xor_gateway> <actor id=20> the MSPO </actor> <activity id=21> sends </activity> <activity_data id=22> the bill for additional readings </activity_data> to <actor id=8> the GO </actor> , <actor id=7> the GO </actor> <activity id=24> examines </activity> <activity_data id=23> the bill </activity_data> . <xor_gateway id=25> If </xor_gateway> <actor id=2> the MPOO </actor> <activity id=26> sends </activity> <activity_data id=27> the bill for the equipment acquisition </activity_data> to <actor id=29> the MPON or the GO </actor> , <actor id=30> the MPON or the GO </actor> <activity id=33> examines </activity> <activity_data id=28> the bill </activity_data> . <actor id=31> The GO or the MPON </actor> <activity id=34> confirms </activity> <activity_data id=35> the invoice with payment advice </activity_data> to <actor id=37> the MPOO or the MSPO </actor> , <xor_gateway id=38> or </xor_gateway> <actor id=32> the GO or the MPON </actor> <activity id=39> rejects </activity> <activity_data id=36> the invoice of the MPOO or the MSPO </activity_data> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_cot.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1566, "output_tokens": 662, "total_costs": 0.035519999999999996, "answers": ["actor performer\t3\t1\tthe activity sends is performed by the MPOO\nactor recipient\t3\t6\tthe activity sends has the GO as its recipient\nuses\t3\t4\tthe activity sends uses the bill for the temporary continuation of the metering point operations\nactor performer\t12\t11\tthe activity examines is performed by the GO\nuses\t12\t5\tthe activity examines uses the bill\nactor performer\t15\t14\tthe activity sends is performed by the MSPO\nactor recipient\t15\t10\tthe activity sends has the GO as its recipient\nuses\t15\t16\tthe activity sends uses the bill for the temporary continuation of the measurement\nactor performer\t18\t9\tthe activity examines is performed by the GO\nuses\t18\t17\tthe activity examines uses the bill\nactor performer\t21\t20\tthe activity sends is performed by the MSPO\nactor recipient\t21\t8\tthe activity sends has the GO as its recipient\nuses\t21\t22\tthe activity sends uses the bill for additional readings\nactor performer\t24\t7\tthe activity examines is performed by the GO\nuses\t24\t23\tthe activity examines uses the bill\nactor performer\t26\t2\tthe activity sends is performed by the MPOO\nactor recipient\t26\t29\tthe activity sends has the MPON or the GO as its recipient\nuses\t26\t27\tthe activity sends uses the bill for the equipment acquisition\nactor performer\t33\t30\tthe activity examines is performed by the MPON or the GO\nuses\t33\t28\tthe activity examines uses the bill\nactor performer\t34\t31\tthe activity confirms is performed by the GO or the MPON\nactor recipient\t34\t37\tthe activity confirms has the MPOO or the MSPO as its recipient\nuses\t34\t35\tthe activity confirms uses the invoice with payment advice\nactor performer\t39\t32\tthe activity rejects is performed by the GO or the MPON\nactor recipient\t39\t37\tthe activity rejects has the MPOO or the MSPO as its recipient\nuses\t39\t36\tthe activity rejects uses the invoice of the MPOO or the MSPO\nflow\t3\t12\tthe activity sends is followed by the activity examines\nflow\t12\t15\tthe activity examines is followed by the activity sends\nflow\t15\t18\tthe activity sends is followed by the activity examines\nflow\t18\t21\tthe activity examines is followed by the activity sends\nflow\t21\t24\tthe activity sends is followed by the activity examines\nflow\t24\t26\tthe activity examines is followed by the activity sends\nflow\t26\t33\tthe activity sends is followed by the activity examines\nflow\t33\t34\tthe activity examines is followed by the activity confirms\nflow\t34\t39\tthe activity confirms is followed by the activity rejects\nsame gateway\t0\t13\tthe xor_gateway If is described in multiple places and refers to the same decision point\nsame gateway\t13\t19\tthe xor_gateway If is described in multiple places and refers to the same decision point\nsame gateway\t19\t25\tthe xor_gateway If is described in multiple places and refers to the same decision point\nsame gateway\t25\t38\tthe xor_gateway or is described in multiple places and refers to the same decision point"], "original_id": "doc-10.14"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nYou are an expert in business process modelling, specialized on BPMN and its elements.\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nThe intake workflow starts with a notice by telephone at the secretarial office of the mental health care institute . <activity_data id=0> This notice </activity_data> is <activity id=1> done </activity> by <actor id=2> the family doctor </actor> of somebody who is in need of mental treatment . <actor id=3> The secretarial worker </actor> <activity id=4> inquires </activity> after <activity_data id=5> the name and residence of the patient </activity_data> . On the basis of this information , <activity_data id=6> the doctor </activity_data> is <activity id=7> put through </activity> to <actor id=8> the nursing officer responsible </actor> <further_specification id=10> for the part of the region that the patient lives in </further_specification> . <actor id=9> The nursing officer </actor> <activity id=11> makes a full inquiry </activity> <further_specification id=12> into the mental , health , and social state of the patient in question </further_specification> . <activity_data id=13> This information </activity_data> is <activity id=14> recorded </activity> <further_specification id=15> on a registration form </further_specification> . At the end of the conversation , <activity_data id=16> this form </activity_data> is <activity id=17> handed in </activity> at <actor id=53> the secretarial office </actor> of the institute . Here , <activity_data id=18> the information on the form </activity_data> is <activity id=19> stored </activity> <further_specification id=20> in the information system </further_specification> and subsequently <activity id=21> printed </activity> . <xor_gateway id=22> For </xor_gateway> <condition_specification id=23> new patients </condition_specification> , <activity_data id=24> a patient file </activity_data> is <activity id=25> created </activity> . <activity_data id=26> The registration form </activity_data> as well as <activity_data id=27> the print from the information system </activity_data> are <activity id=28> stored </activity> <further_specification id=29> in the patient file </further_specification> . Patient files are kept at the secretarial office and may not leave the building . At <actor id=58> the secretarial office </actor> , <activity_data id=30> two registration cards </activity_data> are <activity id=31> produced </activity> <further_specification id=32> for respectively the future first and second intaker of the patient </further_specification> . The registration card contains a set of basic patient data . <activity_data id=33> The new patient </activity_data> is <activity id=34> added </activity> <further_specification id=35> on the list of new notices </further_specification> . Halfway the week , at Wednesday , <activity_data id=36> a staff meeting </activity_data> <further_specification id=37> of the entire medical team </further_specification> <activity id=38> takes place </activity> . The medical team consists of social-medical workers , physicians , and a psychiatrist . At this meeting , <actor id=39> the team-leader </actor> <activity id=40> assigns </activity> <activity_data id=41> all new patients </activity_data> on the list of new notices to <actor id=42> members of the team </actor> . Each patient will be assigned to a social-medical worker , who will act as the first intaker of the patient . One of the physicians will act as the second intaker . In assigning intakers , the teamleader takes into account their expertise , the region they are responsible for , earlier contacts they might have had with the patient , and their case load . <activity_data id=43> The assignments </activity_data> are <activity id=44> recorded </activity> <further_specification id=45> on an assignment list </further_specification> which is handed to <actor id=57> the secretarial office </actor> . For each new assignment , it is also <activity id=46> determined </activity> whether <activity_data id=47> the medical file of the patient </activity_data> is required . <activity_data id=48> This information </activity_data> is <activity id=49> added </activity> <further_specification id=50> to the assignment list </further_specification> . <actor id=51> The secretarial office </actor> <activity id=60> stores </activity> the assignment of each patient of the assignment list <further_specification id=61> in the information system </further_specification> . <actor id=59> It </actor> <activity id=62> passes </activity> <activity_data id=63> the produced registration cards </activity_data> to <actor id=64> the first and second intaker </actor> of each newly assigned patient . An intaker keeps this registration with him at times when visiting the patient and in his close proximity when he is at the office . <xor_gateway id=65> For each patient for which </xor_gateway> <condition_specification id=66> the medical file is required </condition_specification> , <actor id=56> the secretarial office </actor> <activity id=67> prepares </activity> and <activity id=68> sends </activity> <activity_data id=69> a letter </activity_data> to <actor id=70> the family doctor of the patient </actor> , requesting for a copy of the medical file . As soon as <activity_data id=71> this copy </activity_data> is <activity id=72> received </activity> , <actor id=55> the secretarial office </actor> will <activity id=73> inform </activity> <actor id=74> the second intaker </actor> and <activity id=76> add </activity> <activity_data id=77> the copy </activity_data> <further_specification id=78> to the patient file </further_specification> . <actor id=79> The first intaker </actor> <activity id=81> plans </activity> <activity_data id=82> a meeting with the patient </activity_data> as soon as this is possible . During the first meeting , <activity_data id=83> the patient </activity_data> is <activity id=84> examined </activity> using a standard checklist which is filled out . <activity_data id=85> Additional observations </activity_data> are <activity id=86> registered </activity> <further_specification id=87> in a personal notebook </further_specification> . After a visit , <actor id=80> the first intaker </actor> <activity id=88> puts </activity> <activity_data id=89> a copy of these notes </activity_data> <further_specification id=90> in the file of a patient </further_specification> . <activity_data id=91> The standard checklist </activity_data> is also <activity id=92> added </activity> <further_specification id=93> to the patient's file </further_specification> . <actor id=75> The second intaker </actor> <activity id=94> plans </activity> <activity_data id=95> the first meeting </activity_data> only after the medical information of the physician <xor_gateway id=96> if </xor_gateway> <condition_specification id=97> required has been received </condition_specification> . Physicians use dictaphones to record their observations made during meetings with patients . <actor id=52> The secretarial office </actor> <activity id=98> types out </activity> <activity_data id=99> these tapes </activity_data> , after which <activity_data id=100> the information </activity_data> is <activity id=101> added </activity> <further_specification id=102> to the patient file </further_specification> . As soon as the meetings of the first and second intaker with the patient have taken place , <actor id=54> the secretarial office </actor> <activity id=103> puts </activity> the patient <further_specification id=104> on the list of patients that reach this status </further_specification> . For the staff meeting on Wednesday , <actor id=105> they </actor> <activity id=106> provide </activity> <actor id=107> the team-leader </actor> with <activity_data id=108> a list of these patients </activity_data> . For each of these patients , <actor id=109> the first and second intaker together with the team-leader and the attending psychiatrist </actor> <activity id=110> formulate </activity> <activity_data id=111> a treatment plan </activity_data> . This treatment plan formally ends the intake procedure .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_cot.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 2994, "output_tokens": 1987, "total_costs": 0.08955, "answers": ["actor performer\t1\t2\tthe activity done is performed by the family doctor\nuses\t1\t0\tthis activity_data mention is produced by the activity done\nactor performer\t4\t3\tthe activity inquires is performed by the secretarial worker\nuses\t4\t5\tthis activity_data mention is produced by the activity inquires\nactor performer\t7\t3\tthe activity put through is performed by the secretarial worker\nuses\t7\t6\tthis activity_data mention is produced by the activity put through\nactor recipient\t7\t8\tthe nursing officer responsible receives the result of the activity put through\nfurther specification\t7\t10\tthis further specification describes how the activity put through has to be executed\nactor performer\t11\t9\tthe activity makes a full inquiry is performed by the nursing officer\nfurther specification\t11\t12\tthis further specification describes how the activity makes a full inquiry has to be executed\nuses\t11\t13\tthis activity_data mention is produced by the activity makes a full inquiry\nactor performer\t14\t9\tthe activity recorded is performed by the nursing officer\nfurther specification\t14\t15\tthis further specification describes how the activity recorded has to be executed\nuses\t14\t13\tthis activity_data mention is produced by the activity recorded\nactor performer\t17\t3\tthe activity handed in is performed by the secretarial worker\nuses\t17\t16\tthis activity_data mention is produced by the activity handed in\nactor recipient\t17\t53\tthe secretarial office receives the result of the activity handed in\nactor performer\t19\t3\tthe activity stored is performed by the secretarial worker\nfurther specification\t19\t20\tthis further specification describes how the activity stored has to be executed\nuses\t19\t18\tthis activity_data mention is produced by the activity stored\nactor performer\t21\t3\tthe activity printed is performed by the secretarial worker\nuses\t21\t18\tthis activity_data mention is produced by the activity printed\nflow\t1\t4\tthe activity done is performed before the activity inquires\nflow\t4\t7\tthe activity inquires is performed before the activity put through\nflow\t7\t11\tthe activity put through is performed before the activity makes a full inquiry\nflow\t11\t14\tthe activity makes a full inquiry is performed before the activity recorded\nflow\t14\t17\tthe activity recorded is performed before the activity handed in\nflow\t17\t19\tthe activity handed in is performed before the activity stored\nflow\t19\t21\tthe activity stored is performed before the activity printed\nflow\t21\t25\tthe activity printed is performed before the activity created\nflow\t25\t28\tthe activity created is performed before the activity stored\nflow\t28\t31\tthe activity stored is performed before the activity produced\nflow\t31\t34\tthe activity produced is performed before the activity added\nflow\t34\t38\tthe activity added is performed before the activity takes place\nflow\t38\t40\tthe activity takes place is performed before the activity assigns\nflow\t40\t44\tthe activity assigns is performed before the activity recorded\nflow\t44\t46\tthe activity recorded is performed before the activity determined\nflow\t46\t49\tthe activity determined is performed before the activity added\nflow\t49\t60\tthe activity added is performed before the activity stores\nflow\t60\t62\tthe activity stores is performed before the activity passes\nflow\t62\t67\tthe activity passes is performed before the activity prepares\nflow\t67\t68\tthe activity prepares is performed before the activity sends\nflow\t68\t72\tthe activity sends is performed before the activity received\nflow\t72\t73\tthe activity received is performed before the activity inform\nflow\t73\t76\tthe activity inform is performed before the activity add\nflow\t76\t81\tthe activity add is performed before the activity plans\nflow\t81\t84\tthe activity plans is performed before the activity examined\nflow\t84\t86\tthe activity examined is performed before the activity registered\nflow\t86\t88\tthe activity registered is performed before the activity puts\nflow\t88\t92\tthe activity puts is performed before the activity added\nflow\t92\t94\tthe activity added is performed before the activity plans\nflow\t94\t98\tthe activity plans is performed before the activity types out\nflow\t98\t101\tthe activity types out is performed before the activity added\nflow\t101\t103\tthe activity added is performed before the activity puts\nflow\t103\t106\tthe activity puts is performed before the activity provide\nflow\t106\t110\tthe activity provide is performed before the activity formulate\nuses\t25\t24\tthis activity_data mention is produced by the activity created\nuses\t28\t26\tthis activity_data mention is produced by the activity stored\nuses\t28\t27\tthis activity_data mention is produced by the activity stored\nfurther specification\t28\t29\tthis further specification describes how the activity stored has to be executed\nactor performer\t31\t3\tthe activity produced is performed by the secretarial worker\nfurther specification\t31\t32\tthis further specification describes how the activity produced has to be executed\nuses\t31\t30\tthis activity_data mention is produced by the activity produced\nactor performer\t34\t3\tthe activity added is performed by the secretarial worker\nfurther specification\t34\t35\tthis further specification describes how the activity added has to be executed\nuses\t34\t33\tthis activity_data mention is produced by the activity added\nactor performer\t38\t3\tthe activity takes place is performed by the secretarial worker\nfurther specification\t38\t37\tthis further specification describes how the activity takes place has to be executed\nuses\t38\t36\tthis activity_data mention is produced by the activity takes place\nactor performer\t40\t39\tthe activity assigns is performed by the team-leader\nuses\t40\t41\tthis activity_data mention is produced by the activity assigns\nactor recipient\t40\t42\tmembers of the team receive the result of the activity assigns\nuses\t44\t43\tthis activity_data mention is produced by the activity recorded\nfurther specification\t44\t45\tthis further specification describes how the activity recorded has to be executed\nactor performer\t46\t3\tthe activity determined is performed by the secretarial worker\nuses\t46\t47\tthis activity_data mention is produced by the activity determined\nuses\t49\t48\tthis activity_data mention is produced by the activity added\nfurther specification\t49\t50\tthis further specification describes how the activity added has to be executed\nactor performer\t60\t51\tthe activity stores is performed by the secretarial office\nfurther specification\t60\t61\tthis further specification describes how the activity stores has to be executed\nactor performer\t62\t59\tIt performs the activity passes\nuses\t62\t63\tthis activity_data mention is produced by the activity passes\nactor recipient\t62\t64\tthe first and second intaker receive the result of the activity passes\nflow\t22\t23\tthe XOR_Gateway for connects to the Condition_Specification new patients\nactor performer\t67\t56\tthe activity prepares is performed by the secretarial office\nactor performer\t68\t56\tthe activity sends is performed by the secretarial office\nuses\t68\t69\tthis activity_data mention is produced by the activity sends\nactor recipient\t68\t70\tthe family doctor of the patient receives the result of the activity sends\nuses\t72\t71\tthis activity_data mention is produced by the activity received\nactor performer\t73\t55\tthe activity inform is performed by the secretarial office\nactor recipient\t73\t74\tthe second intaker receives the result of the activity inform\nuses\t76\t77\tthis activity_data mention is produced by the activity add\nfurther specification\t76\t78\tthis further specification describes how the activity add has to be executed\nactor performer\t81\t79\tthe activity plans is performed by the first intaker\nuses\t81\t82\tthis activity_data mention is produced by the activity plans\nactor performer\t84\t79\tthe activity examined is performed by the first intaker\nuses\t84\t83\tthis activity_data mention is produced by the activity examined\nuses\t86\t85\tthis activity_data mention is produced by the activity registered\nfurther specification\t86\t87\tthis further specification describes how the activity registered has to be executed\nactor performer\t88\t80\tthe activity puts is performed by the first intaker\nuses\t88\t89\tthis activity_data mention is produced by the activity puts\nfurther specification\t88\t90\tthis further specification describes how the activity puts has to be executed\nuses\t92\t91\tthis activity_data mention is produced by the activity added\nfurther specification\t92\t93\tthis further specification describes how the activity added has to be executed\nactor performer\t94\t75\tthe activity plans is performed by the second intaker\nuses\t94\t95\tthis activity_data mention is produced by the activity plans\nflow\t96\t97\tthe XOR_Gateway if connects to the Condition_Specification required has been received\nactor performer\t98\t52\tthe activity types out is performed by the secretarial office\nuses\t98\t99\tthis activity_data mention is produced by the activity types out\nuses\t101\t100\tthis activity_data mention is produced by the activity added\nfurther specification\t101\t102\tthis further specification describes how the activity added has to be executed\nactor performer\t103\t54\tthe activity puts is performed by the secretarial office\nfurther specification\t103\t104\tthis further specification describes how the activity puts has to be executed\nactor performer\t106\t105\tthey perform the activity provide\nuses\t106\t108\tthis activity_data mention is produced by the activity provide\nactor recipient\t106\t107\tthe team-leader receives the result of the activity provide\nuses\t110\t111\tthis activity_data mention is produced by the activity formulate\n"], "original_id": "doc-4.1"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nYou are an expert in business process modelling, specialized on BPMN and its elements.\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nThe loan approval process starts by <activity id=0> receiving </activity> a customer request for a loan amount . <actor id=1> The risk assessment Web service </actor> is invoked to <activity id=2> assess </activity> <activity_data id=3> the request </activity_data> . <xor_gateway id=5> If </xor_gateway> <condition_specification id=6> the loan is small and the customer is low risk </condition_specification> , <activity_data id=7> the loan </activity_data> is <activity id=9> approved </activity> . <xor_gateway id=10> If </xor_gateway> <condition_specification id=11> the customer is high risk </condition_specification> , <activity_data id=8> the loan </activity_data> is <activity id=12> denied </activity> . <xor_gateway id=13> If </xor_gateway> <condition_specification id=14> the customer needs further review or the loan amount is for $10,000 or more </condition_specification> , <activity_data id=4> the request </activity_data> is <activity id=15> sent </activity> to <actor id=16> the approver Web service </actor> . <actor id=17> The customer </actor> <activity id=18> receives </activity> <activity_data id=19> feedback </activity_data> from <actor id=20> the assessor or approver </actor> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_cot.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1347, "output_tokens": 339, "total_costs": 0.02364, "answers": ["flow\t0\t2\treceiving activity is followed by assess activity\nuses\t2\t3\tthe activity assess uses the activity_data the request\nflow\t2\t5\tassess activity is followed by an XOR gateway decision point\nflow\t5\t6\tXOR gateway leads to a condition specification for loan assessment\nflow\t5\t10\tXOR gateway leads to another XOR gateway for a different decision path\nflow\t10\t11\tXOR gateway leads to a condition specification for high-risk assessment\nflow\t10\t13\tXOR gateway leads to another XOR gateway for further review decision\nflow\t13\t14\tXOR gateway leads to a condition specification for further review or high loan amount\nactor performer\t2\t1\tthe activity assess is performed by the risk assessment Web service\nflow\t6\t9\tthe condition of small loan and low risk leads to loan approval\nuses\t9\t7\tthe activity approved uses the activity_data the loan\nflow\t11\t12\tthe condition of high risk leads to loan denial\nuses\t12\t8\tthe activity denied uses the activity_data the loan\nflow\t14\t15\tthe condition of further review or high loan amount leads to sending the request for review\nuses\t15\t4\tthe activity sent uses the activity_data the request\nactor performer\t15\t16\tthe activity sent is performed by the approver Web service\nflow\t15\t18\tthe activity sent is followed by the activity receives\nuses\t18\t19\tthe activity receives uses the activity_data feedback\nactor recipient\t18\t17\tthe activity receives is passively affecting the customer\nactor performer\t18\t20\tthe activity receives is performed by the assessor or approver"], "original_id": "doc-5.1"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nYou are an expert in business process modelling, specialized on BPMN and its elements.\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The MPON </actor> <activity id=7> notifies </activity> <actor id=8> the MPOO </actor> <activity_data id=11> about equipment change intentions </activity_data> . <actor id=10> The MPOO </actor> <activity id=12> announces </activity> <activity_data id=13> self dismounting </activity_data> to <actor id=6> the MPON </actor> <xor_gateway id=14> or </xor_gateway> <actor id=9> the MPOO </actor> shall <activity id=15> notify </activity> <actor id=5> the MPON </actor> <activity_data id=16> about no self-dismounting of the MPOO </activity_data> . <actor id=17> The MPON or the MPOO </actor> <activity id=19> perform </activity> <activity_data id=20> the final reading </activity_data> . <actor id=18> The MPON or the MPOO </actor> <activity id=21> dismount </activity> <activity_data id=22> the old equipment </activity_data> . <actor id=4> The MPON </actor> <activity id=23> mounts </activity> <activity_data id=24> the new device </activity_data> . <actor id=3> The MPON </actor> <activity id=25> reads </activity> <activity_data id=26> the meter count </activity_data> from the installed meter . <actor id=2> The MPON </actor> <activity id=27> sents </activity> <activity_data id=28> the values of the final reading </activity_data> to <actor id=29> the GO </actor> . <actor id=1> The MPON </actor> <activity id=32> tells </activity> <actor id=30> the GO </actor> <activity_data id=33> about the device changes , the master data and the meter count at installation </activity_data> . <actor id=31> The GO </actor> shall <activity id=34> notify </activity> <actor id=35> the MSP </actor> <activity_data id=36> about the device changes , the master data , the meter count at dismounting , and the meter count at installation </activity_data> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_cot.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1549, "output_tokens": 586, "total_costs": 0.03307, "answers": ["actor performer\t7\t0\tthe activity notifies is performed by The MPON\nactor recipient\t7\t8\tthe result of the activity notifies is received by the MPOO\nuses\t7\t11\tthis activity_data mention is produced by the activity notifies\nactor performer\t12\t10\tthe activity announces is performed by The MPOO\nactor recipient\t12\t6\tthe result of the activity announces is received by the MPON\nuses\t12\t13\tthis activity_data mention is produced by the activity announces\nactor performer\t15\t9\tthe activity notify is performed by the MPOO\nactor recipient\t15\t5\tthe result of the activity notify is received by the MPON\nuses\t15\t16\tthis activity_data mention is produced by the activity notify\nactor performer\t19\t17\tthe activity perform is performed by The MPON or the MPOO\nuses\t19\t20\tthis activity_data mention is produced by the activity perform\nactor performer\t21\t18\tthe activity dismount is performed by The MPON or the MPOO\nuses\t21\t22\tthis activity_data mention is produced by the activity dismount\nactor performer\t23\t4\tthe activity mounts is performed by The MPON\nuses\t23\t24\tthis activity_data mention is produced by the activity mounts\nactor performer\t25\t3\tthe activity reads is performed by The MPON\nuses\t25\t26\tthis activity_data mention is produced by the activity reads\nactor performer\t27\t2\tthe activity sents is performed by The MPON\nactor recipient\t27\t29\tthe result of the activity sents is received by the GO\nuses\t27\t28\tthis activity_data mention is produced by the activity sents\nactor performer\t32\t1\tthe activity tells is performed by The MPON\nactor recipient\t32\t30\tthe result of the activity tells is received by the GO\nuses\t32\t33\tthis activity_data mention is produced by the activity tells\nactor performer\t34\t31\tthe activity notify is performed by The GO\nactor recipient\t34\t35\tthe result of the activity notify is received by the MSP\nuses\t34\t36\tthis activity_data mention is produced by the activity notify\nflow\t7\t12\tthe activity notifies is followed by the activity announces\nflow\t12\t15\tthe activity announces is followed by the activity notify\nflow\t15\t19\tthe activity notify is followed by the activity perform\nflow\t19\t21\tthe activity perform is followed by the activity dismount\nflow\t21\t23\tthe activity dismount is followed by the activity mounts\nflow\t23\t25\tthe activity mounts is followed by the activity reads\nflow\t25\t27\tthe activity reads is followed by the activity sents\nflow\t27\t32\tthe activity sents is followed by the activity tells\nflow\t32\t34\tthe activity tells is followed by the activity notify"], "original_id": "doc-10.4"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nYou are an expert in business process modelling, specialized on BPMN and its elements.\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The MPOO </actor> <activity id=4> deregisters </activity> at <actor id=7> the GO </actor> . <actor id=5> The GO </actor> <activity id=15> verifies </activity> <activity_data id=16> the deregistration </activity_data> . <actor id=14> The GO </actor> <activity id=19> rejects </activity> <activity_data id=18> the deregistration of the MPOO </activity_data> <xor_gateway id=20> or </xor_gateway> <actor id=6> the GO </actor> <further_specification id=21> preliminarily </further_specification> <activity id=22> confirms </activity> <activity_data id=17> the deregistration of the MPOO </activity_data> . <actor id=13> The GO </actor> <activity id=23> prepares </activity> <activity_data id=24> the readmission of the measuring point </activity_data> . Optionally , the GO may oblige the MPOO to continue the operations . <xor_gateway id=25> If </xor_gateway> <condition_specification id=26> the GO binds the MPOO to continue the operation </condition_specification> , <actor id=3> the MPOO </actor> <activity id=27> confirmes </activity> <activity_data id=28> the continuation </activity_data> to <actor id=2> the MPOO </actor> . <actor id=12> The GO </actor> <activity id=29> performs </activity> <activity_data id=30> the equipment acquisition and / or equipment changes </activity_data> . <actor id=11> The GO </actor> <activity id=31> assigns </activity> <activity_data id=32> the GO as MPO </activity_data> . <actor id=10> The GO </actor> <activity id=33> informs </activity> <actor id=1> the MPOO </actor> <activity_data id=34> about the end of the assignment of the MPOO and the beginning of the assignment of the GO </activity_data> . <actor id=9> The GO </actor> <activity id=35> informs </activity> <actor id=36> the MSPO </actor> <activity_data id=37> about the assignment of the GO </activity_data> . <actor id=8> The GO </actor> <activity id=39> informs </activity> <actor id=40> the SP </actor> <activity_data id=38> about the assignment of the GO </activity_data> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_cot.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1607, "output_tokens": 582, "total_costs": 0.033530000000000004, "answers": ["actor performer\t4\t0\tthe activity deregisters is performed by The MPOO\nactor recipient\t4\t7\tthe result of the activity deregisters is received by the GO\nactor performer\t15\t5\tthe activity verifies is performed by The GO\nuses\t15\t16\tthis activity_data mention is produced by the activity verifies\nactor performer\t19\t14\tthe activity rejects is performed by The GO\nuses\t19\t18\tthis activity_data mention is produced by the activity rejects\nactor performer\t22\t6\tthe activity confirms is performed by The GO\nuses\t22\t17\tthis activity_data mention is produced by the activity confirms\nfurther specification\t22\t21\tthe activity confirms is further specified by preliminarily\nactor performer\t23\t13\tthe activity prepares is performed by The GO\nuses\t23\t24\tthis activity_data mention is produced by the activity prepares\nactor performer\t27\t3\tthe activity confirmes is performed by the MPOO\nuses\t27\t28\tthis activity_data mention is produced by the activity confirmes\nactor recipient\t27\t2\tthe result of the activity confirmes is received by the MPOO\nactor performer\t29\t12\tthe activity performs is performed by The GO\nuses\t29\t30\tthis activity_data mention is produced by the activity performs\nactor performer\t31\t11\tthe activity assigns is performed by The GO\nuses\t31\t32\tthis activity_data mention is produced by the activity assigns\nactor performer\t33\t10\tthe activity informs is performed by The GO\nactor recipient\t33\t1\tthe result of the activity informs is received by the MPOO\nuses\t33\t34\tthis activity_data mention is produced by the activity informs\nactor performer\t35\t9\tthe activity informs is performed by The GO\nactor recipient\t35\t36\tthe result of the activity informs is received by the MSPO\nuses\t35\t37\tthis activity_data mention is produced by the activity informs\nactor performer\t39\t8\tthe activity informs is performed by The GO\nactor recipient\t39\t40\tthe result of the activity informs is received by the SP\nuses\t39\t38\tthis activity_data mention is produced by the activity informs\nflow\t4\t15\tthe activity deregisters is followed by the activity verifies\nflow\t15\t19\tthe activity verifies is followed by the activity rejects\nflow\t19\t22\tthe activity rejects is followed by the activity confirms\nflow\t22\t23\tthe activity confirms is followed by the activity prepares\nflow\t23\t29\tthe activity prepares is followed by the activity performs\nflow\t29\t31\tthe activity performs is followed by the activity assigns\nflow\t31\t33\tthe activity assigns is followed by the activity informs\nflow\t33\t35\tthe activity informs is followed by the activity informs\nflow\t35\t39\tthe activity informs is followed by the activity informs"], "original_id": "doc-10.3"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nYou are an expert in business process modelling, specialized on BPMN and its elements.\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> An employee </actor> <activity id=4> purchases </activity> <activity_data id=5> a product or service </activity_data> he requires . For instance , a sales person on a trip rents a car . <actor id=1> The employee </actor> <activity id=6> submits </activity> <activity_data id=7> an expense report </activity_data> with a list of items , along with the receipts for each item . <actor id=13> A supervisor </actor> <activity id=14> reviews </activity> <activity_data id=8> the expense report </activity_data> and <activity id=15> approves or rejects </activity> <activity_data id=9> the report </activity_data> . Since the company has expense rules , there are circumstances where the supervisor can accept or reject the report upon first inspection . These rules could be automated , to reduce the workload on the supervisor . <xor_gateway id=16> If </xor_gateway> <condition_specification id=17> the supervisor rejects the report </condition_specification> , <actor id=3> the employee </actor> , who submitted it , is given a chance to <activity id=18> edit </activity> <activity_data id=12> it </activity_data> , for example to correct errors or better describe an expense . <xor_gateway id=19> If </xor_gateway> <condition_specification id=20> the supervisor approves the report </condition_specification> , <activity_data id=11> it </activity_data> <activity id=21> goes </activity> to <actor id=22> the treasurer </actor> . <actor id=23> The treasurer </actor> <activity id=26> checks </activity> that all <activity_data id=27> the receipts </activity_data> have been submitted and match the items on the list . <xor_gateway id=28> If </xor_gateway> <condition_specification id=29> all is in order </condition_specification> , <actor id=24> the treasurer </actor> <activity id=30> accepts </activity> <activity_data id=31> the expenses </activity_data> for processing ( including , e.g . , payment or refund , and accounting ) . <xor_gateway id=32> If </xor_gateway> <condition_specification id=33> receipts are missing or do not match the report </condition_specification> , <actor id=25> he </actor> <activity id=34> sends </activity> <activity_data id=10> it </activity_data> back to <actor id=2> the employee </actor> . If a report returns to the employee for corrections , it must again go to a supervisor , even if the supervisor previously approved the report . If the treasurer accepts the expenses for processing , the report moves to an automatic activity that links to a payment system . The process waits for the payment confirmation . After <activity_data id=35> the payment </activity_data> is <activity id=36> confirmed </activity> , the process ends .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_cot.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1681, "output_tokens": 499, "total_costs": 0.03178, "answers": ["actor performer\t4\t0\tthe activity purchases is performed by An employee\nuses\t4\t5\tthis activity_data mention is produced by the activity purchases\nactor performer\t6\t1\tthe activity submits is performed by The employee\nuses\t6\t7\tthis activity_data mention is produced by the activity submits\nactor performer\t14\t13\tthe activity reviews is performed by A supervisor\nuses\t14\t8\tthis activity_data mention is produced by the activity reviews\nactor performer\t15\t13\tthe activity approves or rejects is performed by A supervisor\nuses\t15\t9\tthis activity_data mention is produced by the activity approves or rejects\nflow\t4\t6\tthe activity purchases is performed before the activity submits\nflow\t6\t14\tthe activity submits is performed before the activity reviews\nflow\t14\t15\tthe activity reviews is performed before the activity approves or rejects\nflow\t15\t18\tthe activity approves or rejects is performed before the activity edit\nactor performer\t18\t3\tthe activity edit is performed by the employee\nuses\t18\t12\tthis activity_data mention is produced by the activity edit\nflow\t18\t21\tthe activity edit is performed before the activity goes\nactor performer\t21\t22\tthe activity goes is performed by the treasurer\nflow\t21\t26\tthe activity goes is performed before the activity checks\nactor performer\t26\t23\tthe activity checks is performed by The treasurer\nuses\t26\t27\tthis activity_data mention is produced by the activity checks\nflow\t26\t30\tthe activity checks is performed before the activity accepts\nactor performer\t30\t24\tthe activity accepts is performed by the treasurer\nuses\t30\t31\tthis activity_data mention is produced by the activity accepts\nflow\t30\t34\tthe activity accepts is performed before the activity sends\nactor performer\t34\t25\tthe activity sends is performed by he\nuses\t34\t10\tthis activity_data mention is produced by the activity sends\nflow\t34\t36\tthe activity sends is performed before the activity confirmed\nactor performer\t36\t0\tthe activity confirmed is performed by An employee\nuses\t36\t35\tthis activity_data mention is produced by the activity confirmed\nflow\t16\t17\tIf condition follows the XOR_Gateway, connect them\nflow\t19\t20\tIf condition follows the XOR_Gateway, connect them\nflow\t28\t29\tIf condition follows the XOR_Gateway, connect them\nflow\t32\t33\tIf condition follows the XOR_Gateway, connect them"], "original_id": "doc-5.4"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nYou are an expert in business process modelling, specialized on BPMN and its elements.\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nI am the HR clerk . When <activity_data id=0> a vacancy </activity_data> is <activity id=1> reported </activity> to <actor id=7> me </actor> , <actor id=2> I </actor> <activity id=8> create </activity> <activity_data id=9> a job description from the information </activity_data> . <xor_gateway id=13> Sometimes </xor_gateway> <condition_specification id=14> there is still confusion in the message </condition_specification> , then <actor id=6> I </actor> must <activity id=15> ask </activity> <actor id=16> the Department </actor> again . <actor id=5> I </actor> am <activity id=17> submitting </activity> <activity_data id=10> the job description </activity_data> for consideration and <activity id=18> waiting </activity> for <activity_data id=19> the approval </activity_data> . But , <xor_gateway id=20> it can also happen that </xor_gateway> <condition_specification id=21> the department does not approve it </condition_specification> , but rejects it , and <activity id=22> requests </activity> <activity_data id=23> a correction </activity_data> . Then <actor id=4> I </actor> <activity id=24> correct </activity> <activity_data id=11> the description </activity_data> and <activity id=25> submit </activity> <activity_data id=12> it </activity_data> again for consideration . <xor_gateway id=26> If </xor_gateway> <condition_specification id=27> the description is finally approved </condition_specification> , <actor id=3> I </actor> <activity id=28> post </activity> <activity_data id=29> the job </activity_data> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_cot.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1437, "output_tokens": 553, "total_costs": 0.03096, "answers": ["actor performer\t1\t7\tthe activity reported is performed by the HR clerk\nuses\t1\t0\tthis activity_data mention is produced by the activity reported\nactor performer\t8\t2\tthe activity create is performed by the HR clerk\nuses\t8\t9\tthis activity_data mention is produced by the activity create\nflow\t1\t8\tthe activity reported is performed before the activity create\nflow\t8\t13\tthe activity create is performed before the xor_gateway Sometimes\nflow\t13\t14\tthe xor_gateway Sometimes is followed by the condition_specification there is still confusion in the message\nactor performer\t15\t6\tthe activity ask is performed by the HR clerk\nactor recipient\t15\t16\tthe activity ask is passively affecting the Department\nflow\t14\t15\tthe condition_specification there is still confusion in the message is followed by the activity ask\nactor performer\t17\t5\tthe activity submitting is performed by the HR clerk\nuses\t17\t10\tthis activity_data mention is produced by the activity submitting\nactor performer\t18\t5\tthe activity waiting is performed by the HR clerk\nuses\t18\t19\tthis activity_data mention is produced by the activity waiting\nflow\t15\t17\tthe activity ask is performed before the activity submitting\nflow\t17\t18\tthe activity submitting is performed before the activity waiting\nflow\t18\t20\tthe activity waiting is performed before the xor_gateway it can also happen that\nflow\t20\t21\tthe xor_gateway it can also happen that is followed by the condition_specification the department does not approve it\nactor performer\t22\t5\tthe activity requests is performed by the HR clerk\nuses\t22\t23\tthis activity_data mention is produced by the activity requests\nflow\t21\t22\tthe condition_specification the department does not approve it is followed by the activity requests\nactor performer\t24\t4\tthe activity correct is performed by the HR clerk\nuses\t24\t11\tthis activity_data mention is produced by the activity correct\nactor performer\t25\t4\tthe activity submit is performed by the HR clerk\nuses\t25\t12\tthis activity_data mention is produced by the activity submit\nflow\t22\t24\tthe activity requests is performed before the activity correct\nflow\t24\t25\tthe activity correct is performed before the activity submit\nflow\t25\t26\tthe activity submit is performed before the xor_gateway If\nflow\t26\t27\tthe xor_gateway If is followed by the condition_specification the description is finally approved\nactor performer\t28\t3\tthe activity post is performed by the HR clerk\nuses\t28\t29\tthis activity_data mention is produced by the activity post\nflow\t27\t28\tthe condition_specification the description is finally approved is followed by the activity post"], "original_id": "doc-8.2"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nYou are an expert in business process modelling, specialized on BPMN and its elements.\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nEach morning , <activity_data id=0> the files which have yet to be processed </activity_data> need to be <activity id=3> checked </activity> , to make sure they are in order for the court hearing that day . <xor_gateway id=4> If </xor_gateway> <condition_specification id=5> some files are missing </condition_specification> , <activity_data id=6> a search </activity_data> is <activity id=7> initiated </activity> , <xor_gateway id=8> otherwise </xor_gateway> <activity_data id=1> the files </activity_data> can be physically <activity id=9> tracked </activity> <further_specification id=10> to the intended location </further_specification> . Once all the files are ready , <activity_data id=2> these </activity_data> are <activity id=11> handed </activity> to <actor id=12> the Associate </actor> , and <and_gateway id=13> meantime </and_gateway> <activity_data id=14> the Judgeis Lawlist </activity_data> is <activity id=15> distributed </activity> to <actor id=16> the relevant people </actor> . Afterwards , <activity_data id=17> the directions hearings </activity_data> are <activity id=18> conducted </activity> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_cot.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1320, "output_tokens": 295, "total_costs": 0.02205, "answers": ["uses\t3\t0\tthis activity_data mention is produced by the activity checked\nflow\t3\t4\tthe activity checked is followed by the XOR gateway If\nflow\t4\t5\tthe XOR gateway If is followed by the condition specification some files are missing\nuses\t7\t6\tthis activity_data mention is produced by the activity initiated\nflow\t5\t7\tthe condition specification some files are missing is followed by the activity initiated\nflow\t7\t8\tthe activity initiated is followed by the XOR gateway otherwise\nuses\t9\t1\tthis activity_data mention is produced by the activity tracked\nflow\t8\t9\tthe XOR gateway otherwise is followed by the activity tracked\nfurther_specification\t9\t10\tthe activity tracked is further described by to the intended location\nflow\t9\t11\tthe activity tracked is followed by the activity handed\nuses\t11\t2\tthis activity_data mention is produced by the activity handed\nactor recipient\t11\t12\tthe activity handed is received by the Associate\nflow\t11\t13\tthe activity handed is followed by the AND gateway meantime\nuses\t15\t14\tthis activity_data mention is produced by the activity distributed\nflow\t13\t15\tthe AND gateway meantime is followed by the activity distributed\nactor recipient\t15\t16\tthe activity distributed is received by the relevant people\nflow\t15\t18\tthe activity distributed is followed by the activity conducted\nuses\t18\t17\tthis activity_data mention is produced by the activity conducted"], "original_id": "doc-3.2"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nYou are an expert in business process modelling, specialized on BPMN and its elements.\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nAs a basic principle , <actor id=0> ACME AG </actor> <activity id=1> receives </activity> <activity_data id=3> invoices </activity_data> on paper or fax . <activity_data id=2> These </activity_data> are <activity id=4> received </activity> by <actor id=5> the Secretariat </actor> in the central inbox and <activity id=6> forwarded </activity> after <further_specification id=7> a short visual </further_specification> <activity id=8> inspection </activity> to <actor id=9> an accounting employee </actor> . In `` ACME Financial Accounting `` , a software specially developed for the ACME AG , <actor id=10> she </actor> <activity id=18> identifies </activity> <activity_data id=19> the charging suppliers </activity_data> and <activity id=20> creates </activity> <activity_data id=21> a new instance </activity_data> ( invoice ) . <actor id=11> She </actor> then <activity id=22> checks </activity> <activity_data id=23> the invoice items </activity_data> and <activity id=24> notes </activity> <activity_data id=25> the corresponding cost center at the ACME AG and the related cost center managers for each position </activity_data> on a separate form ( `` docket `` ) . <activity_data id=26> The docket and the copy of the invoice </activity_data> <activity id=28> go </activity> to the internal mail together and are <activity id=29> sent </activity> to <actor id=30> the first cost center manager </actor> to the list . <actor id=31> He </actor> <activity id=33> reviews </activity> <activity_data id=34> the content </activity_data> <further_specification id=35> for accuracy </further_specification> after <activity id=36> receiving </activity> <activity_data id=37> the copy of the invoice </activity_data> . <xor_gateway id=43> Should </xor_gateway> <condition_specification id=44> everything be in order </condition_specification> , <actor id=32> he </actor> <activity id=45> notes </activity> <activity_data id=46> his code </activity_data> one <further_specification id=47> on the docket </further_specification> ( `` accurate position - AP `` ) and <activity id=48> returns </activity> <activity_data id=42> the copy of the invoice </activity_data> to <actor id=49> the internal mail </actor> . From it , <activity_data id=41> the copy of the invoice </activity_data> is <activity id=50> passed on </activity> to <actor id=51> the next cost center manager </actor> , based on the docket , or <xor_gateway id=52> if </xor_gateway> <condition_specification id=53> all items are marked correct </condition_specification> , <activity id=54> sent back </activity> to <actor id=55> accounting </actor> . Therefore , the copy of invoice and the docket gradually move through the hands of all cost center managers until all positions are marked as completely accurate . However , <xor_gateway id=56> if </xor_gateway> <condition_specification id=57> inconsistencies exist </condition_specification> , e.g . because the ordered product is not of the expected quantity or quality , <actor id=58> the cost center manager </actor> <activity id=59> rejects </activity> <activity_data id=60> the AP </activity_data> with a note and explanatory statement on the docket , and <activity_data id=40> the copy of the invoice </activity_data> is <activity id=61> sent back </activity> to <actor id=62> accounting </actor> directly . Based on the statements of the cost center managers , <actor id=17> she </actor> will <activity id=63> proceede </activity> with <activity_data id=64> the clarification with the vendor </activity_data> , but , <xor_gateway id=65> if </xor_gateway> <condition_specification id=66> necessary </condition_specification> , <actor id=16> she </actor> <activity id=67> consults </activity> <actor id=68> the cost center managers </actor> by telephone or e-mail again . When all inconsistencies are resolved , <activity_data id=39> the copy of the invoice </activity_data> is <activity id=70> sent </activity> to <actor id=69> the cost center managers </actor> again , and the process continues . After all invoice items are AP , <actor id=15> the accounting employee </actor> <activity id=71> forwards </activity> <activity_data id=38> the copy of the invoice </activity_data> to <actor id=72> the commercial manager </actor> . <actor id=73> He </actor> <activity id=74> makes </activity> <activity_data id=75> the commercial audit </activity_data> and <activity id=76> issues </activity> <activity_data id=77> the approval for payment </activity_data> . <xor_gateway id=78> If </xor_gateway> <condition_specification id=79> the bill amount exceeds EUR 20 </condition_specification> , <actor id=80> the Board </actor> wants to <activity id=81> check </activity> <activity_data id=82> it </activity_data> again ( 4 - eyes-principle ) . <activity_data id=27> The copy of the invoice including the docket </activity_data> <activity id=83> moves back </activity> to <actor id=14> the accounting employee </actor> <further_specification id=84> in the appropriate signature file </further_specification> . <xor_gateway id=85> Should </xor_gateway> <condition_specification id=86> there be a complaint during the commercial audit </condition_specification> , <activity_data id=87> it </activity_data> will be <activity id=88> resolved </activity> by <actor id=13> the accounting employee </actor> with the supplier . After the commercial audit is successfully completed , <actor id=12> the accounting employee </actor> <activity id=89> gives </activity> <activity_data id=90> payment instructions </activity_data> and <activity id=91> closes </activity> <activity_data id=92> the instance in `` ACME financial accounting `` </activity_data> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_cot.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 2472, "output_tokens": 1075, "total_costs": 0.05697, "answers": ["actor performer\t1\t0\tthe activity receives is performed by ACME AG\nuses\t1\t3\tthis activity_data mention is produced by the activity receives\nactor performer\t4\t5\tthe activity received is performed by the Secretariat\nuses\t4\t2\tthis activity_data mention is produced by the activity received\nactor performer\t6\t5\tthe activity forwarded is performed by the Secretariat\nflow\t4\t6\tthe activity received is followed by the activity forwarded\nfurther specification\t6\t7\tthe activity forwarded is further specified by a short visual\nactor performer\t8\t5\tthe activity inspection is performed by the Secretariat\nflow\t6\t8\tthe activity forwarded is followed by the activity inspection\nactor performer\t18\t10\tthe activity identifies is performed by an accounting employee\nuses\t18\t19\tthis activity_data mention is produced by the activity identifies\nactor performer\t20\t10\tthe activity creates is performed by an accounting employee\nuses\t20\t21\tthis activity_data mention is produced by the activity creates\nactor performer\t22\t11\tthe activity checks is performed by She\nuses\t22\t23\tthis activity_data mention is produced by the activity checks\nactor performer\t24\t11\tthe activity notes is performed by She\nuses\t24\t25\tthis activity_data mention is produced by the activity notes\nuses\t28\t26\tthis activity_data mention is produced by the activity go\nactor performer\t29\t30\tthe activity sent is performed by the first cost center manager\nflow\t28\t29\tthe activity go is followed by the activity sent\nactor performer\t33\t31\tthe activity reviews is performed by He\nuses\t33\t34\tthis activity_data mention is produced by the activity reviews\nfurther specification\t33\t35\tthe activity reviews is further specified by for accuracy\nactor performer\t36\t31\tthe activity receiving is performed by He\nuses\t36\t37\tthis activity_data mention is produced by the activity receiving\nflow\t33\t36\tthe activity reviews is followed by the activity receiving\nflow\t52\t53\tthe xor_gateway if connects to the condition_specification all items are marked correct\nactor performer\t45\t32\tthe activity notes is performed by he\nuses\t45\t46\tthis activity_data mention is produced by the activity notes\nfurther specification\t45\t47\tthe activity notes is further specified by on the docket\nactor performer\t48\t32\tthe activity returns is performed by he\nuses\t48\t42\tthis activity_data mention is produced by the activity returns\nflow\t45\t48\tthe activity notes is followed by the activity returns\nactor performer\t50\t51\tthe activity passed on is performed by the next cost center manager\nuses\t50\t41\tthis activity_data mention is produced by the activity passed on\nflow\t48\t50\tthe activity returns is followed by the activity passed on\nfurther specification\t56\t57\tthe xor_gateway if connects to the condition_specification inconsistencies exist\nactor performer\t59\t58\tthe activity rejects is performed by the cost center manager\nuses\t59\t60\tthis activity_data mention is produced by the activity rejects\nactor performer\t61\t62\tthe activity sent back is performed by accounting\nuses\t61\t40\tthis activity_data mention is produced by the activity sent back\nflow\t59\t61\tthe activity rejects is followed by the activity sent back\nactor performer\t63\t17\tthe activity proceede is performed by she\nuses\t63\t64\tthis activity_data mention is produced by the activity proceede\nflow\t61\t63\tthe activity sent back is followed by the activity proceede\nflow\t65\t66\tthe xor_gateway if connects to the condition_specification necessary\nactor performer\t67\t16\tthe activity consults is performed by she\nactor performer\t70\t69\tthe activity sent is performed by the cost center managers\nuses\t70\t39\tthis activity_data mention is produced by the activity sent\nactor performer\t71\t15\tthe activity forwards is performed by the accounting employee\nuses\t71\t38\tthis activity_data mention is produced by the activity forwards\nactor performer\t74\t73\tthe activity makes is performed by He\nuses\t74\t75\tthis activity_data mention is produced by the activity makes\nactor performer\t76\t73\tthe activity issues is performed by He\nuses\t76\t77\tthis activity_data mention is produced by the activity issues\nflow\t78\t79\tthe xor_gateway If connects to the condition_specification the bill amount exceeds EUR 20\nactor performer\t81\t80\tthe activity check is performed by the Board\nuses\t81\t82\tthis activity_data mention is produced by the activity check\nfurther specification\t83\t84\tthe activity moves back is further specified by in the appropriate signature file\nflow\t85\t86\tthe xor_gateway Should connects to the condition_specification there be a complaint during the commercial audit\nactor performer\t88\t13\tthe activity resolved is performed by the accounting employee\nuses\t88\t87\tthis activity_data mention is produced by the activity resolved\nactor performer\t89\t12\tthe activity gives is performed by the accounting employee\nuses\t89\t90\tthis activity_data mention is produced by the activity gives\nactor performer\t91\t12\tthe activity closes is performed by the accounting employee\nuses\t91\t92\tthis activity_data mention is produced by the activity closes"], "original_id": "doc-6.1"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nYou are an expert in business process modelling, specialized on BPMN and its elements.\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=1> The MSPN </actor> <activity id=2> registers </activity> <activity_data id=3> the measurement </activity_data> at <actor id=4> the GO </actor> . <actor id=10> The GO </actor> <activity id=12> examines </activity> <activity_data id=13> the application of the MSPN </activity_data> . <actor id=9> The GO </actor> <activity id=16> rejects </activity> <activity_data id=15> the application of the MSPN </activity_data> <xor_gateway id=17> or </xor_gateway> <actor id=11> the GO </actor> <activity id=18> confirmes </activity> <activity_data id=14> the application of the MSPN </activity_data> . <actor id=8> The GO </actor> <activity id=19> assigns </activity> <activity_data id=0> the MSPN </activity_data> . <actor id=7> The GO </actor> <activity id=20> informs </activity> <actor id=21> the MSPO </actor> <activity_data id=22> about the assignment of MSPN </activity_data> . <actor id=6> The GO </actor> <activity id=25> informs </activity> <actor id=26> the MPO </actor> <activity_data id=23> about the assignment of the MSPN </activity_data> . <actor id=5> The GO </actor> <activity id=27> informs </activity> <actor id=28> the SP </actor> <activity_data id=24> about the assignment of MSPN </activity_data> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_cot.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1398, "output_tokens": 452, "total_costs": 0.02754, "answers": ["actor performer\t2\t1\tthe activity registers is performed by The MSPN\nuses\t2\t3\tthis activity_data mention is produced by the activity registers\nactor recipient\t2\t4\tthe result of the activity registers is received by the GO\nactor performer\t12\t10\tthe activity examines is performed by The GO\nuses\t12\t13\tthis activity_data mention is produced by the activity examines\nactor performer\t16\t9\tthe activity rejects is performed by The GO\nuses\t16\t15\tthis activity_data mention is produced by the activity rejects\nflow\t12\t16\tthe activity examines is performed before the activity rejects\nactor performer\t18\t11\tthe activity confirmes is performed by The GO\nuses\t18\t14\tthis activity_data mention is produced by the activity confirmes\nflow\t12\t18\tthe activity examines is performed before the activity confirmes\nsame gateway\t17\t17\tthe xor_gateway or is linked to itself indicating a decision point\nactor performer\t19\t8\tthe activity assigns is performed by The GO\nuses\t19\t0\tthis activity_data mention is produced by the activity assigns\nflow\t16\t19\tthe activity rejects is performed before the activity assigns\nflow\t18\t19\tthe activity confirmes is performed before the activity assigns\nactor performer\t20\t7\tthe activity informs is performed by The GO\nactor recipient\t20\t21\tthe result of the activity informs is received by the MSPO\nuses\t20\t22\tthis activity_data mention is produced by the activity informs\nflow\t19\t20\tthe activity assigns is performed before the activity informs\nactor performer\t25\t6\tthe activity informs is performed by The GO\nactor recipient\t25\t26\tthe result of the activity informs is received by the MPO\nuses\t25\t23\tthis activity_data mention is produced by the activity informs\nflow\t20\t25\tthe activity informs is performed before the next activity informs\nactor performer\t27\t5\tthe activity informs is performed by The GO\nactor recipient\t27\t28\tthe result of the activity informs is received by the SP\nuses\t27\t24\tthis activity_data mention is produced by the activity informs\nflow\t25\t27\tthe activity informs is performed before the next activity informs"], "original_id": "doc-10.7"}]}]