[{"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Procedure\n\nLet's solve this task in 6 steps.\n\n1. Write a short list of facts about the process, then add a horizontal line (\"-----\")\n\n2. Detect all relations of type uses and list them in your answer.\n\n3. Detect all relations of type flow and list them in your answer.\n\n4. Detect all relations of type actor performer and actor recipient. In both cases focus on activities and find the actor, that is performing the activity, or is affected by its outcome respectively.\n\n5. Detect all relations of type same gateway and extract them. For this focus on XOR_Gateways and AND_Gateways.\n\n6. Detect all relations of type further specification and extract them. Focus on elements of type Activity and Further_Specification for this task.\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nI am the Head of the functional department . When <actor id=0> I </actor> have <activity id=5> detected </activity> <activity_data id=6> a number of personnel requirements </activity_data> , <actor id=4> I </actor> <activity id=7> report </activity> <activity_data id=8> the vacancy </activity_data> to <actor id=9> the Personnel Department </actor> . Then <actor id=3> I </actor> wait to <activity id=10> get </activity> <activity_data id=12> the job description for review </activity_data> before <activity_data id=11> it </activity_data> is <activity id=14> advertized </activity> . <xor_gateway id=15> Under certain circumstances </xor_gateway> , <actor id=2> I </actor> must <activity id=16> ask </activity> for <activity_data id=17> corrections </activity_data> again , <xor_gateway id=18> otherwise </xor_gateway> <actor id=1> I </actor> <activity id=19> approve </activity> <activity_data id=13> the job description </activity_data> . Sometimes it also happens that the colleague from the HR department still has questions about the tasks and requirements before he can describe the job . Then I am available for clarifications , of course .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_persona.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1466, "output_tokens": 455, "total_costs": 0.028310000000000002, "answers": ["Facts about the process:\n- The Head of the functional department detects personnel requirements and reports the vacancy to the Personnel Department.\n- They wait to get the job description for review before it is advertised.\n- Under certain circumstances, they must ask for corrections, otherwise, they approve the job description.\n- Sometimes, clarifications are needed from the HR department regarding the tasks and requirements.\n\n-----\n\nactor performer\t5\t0\tthe activity detected is performed by I (Head of the functional department)\nactor performer\t7\t4\tthe activity report is performed by I (Head of the functional department)\nactor performer\t10\t3\tthe activity get is performed by I (Head of the functional department)\nactor performer\t14\t3\tthe activity advertized is performed by I (Head of the functional department)\nactor performer\t16\t2\tthe activity ask is performed by I (Head of the functional department)\nactor performer\t19\t1\tthe activity approve is performed by I (Head of the functional department)\nactor recipient\t7\t9\tthe result of the activity report is received by the Personnel Department\nuses\t5\t6\tthe activity detected uses the activity_data a number of personnel requirements\nuses\t7\t8\tthe activity report uses the activity_data the vacancy\nuses\t10\t12\tthe activity get uses the activity_data the job description for review\nuses\t14\t11\tthe activity advertized uses the activity_data it\nuses\t16\t17\tthe activity ask uses the activity_data corrections\nuses\t19\t13\tthe activity approve uses the activity_data the job description\nflow\t5\t7\tdetected is followed by report in the process\nflow\t7\t10\treport is followed by get in the process\nflow\t10\t14\tget is followed by advertized in the process\nflow\t15\t16\tUnder certain circumstances (xor_gateway) leads to the need to ask for corrections\nflow\t16\t18\tasking for corrections (activity) is one path that can be taken from the xor_gateway under certain circumstances\nflow\t18\t19\totherwise (xor_gateway) leads to the approval of the job description\nsame gateway\t15\t18\tUnder certain circumstances and otherwise are part of the same decision-making process, indicating different outcomes based on the condition"], "original_id": "doc-8.3"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Procedure\n\nLet's solve this task in 6 steps.\n\n1. Write a short list of facts about the process, then add a horizontal line (\"-----\")\n\n2. Detect all relations of type uses and list them in your answer.\n\n3. Detect all relations of type flow and list them in your answer.\n\n4. Detect all relations of type actor performer and actor recipient. In both cases focus on activities and find the actor, that is performing the activity, or is affected by its outcome respectively.\n\n5. Detect all relations of type same gateway and extract them. For this focus on XOR_Gateways and AND_Gateways.\n\n6. Detect all relations of type further specification and extract them. Focus on elements of type Activity and Further_Specification for this task.\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<activity_data id=0> The Police Report </activity_data> related to the car accident is <activity id=1> searched </activity> <further_specification id=2> within the Police Report database </further_specification> and <activity id=3> put </activity> <further_specification id=4> in a file together with the Claim Documentation </further_specification> . This file serves as input to a claims handler <actor id=5> who </actor> <activity id=7> calculates </activity> <activity_data id=8> an initial claim estimate </activity_data> . Then , <actor id=6> the claims handler </actor> <activity id=9> creates </activity> <activity_data id=10> an Action Plan </activity_data> based on an Action Plan Checklist available in the Document Management system . Based on the Action Plan , <actor id=11> a claims manager </actor> tries to <activity id=12> negotiate </activity> <activity_data id=13> a settlement </activity_data> on the claim estimate . <actor id=14> The claimant </actor> is <activity id=15> informed </activity> of <activity_data id=16> the outcome </activity_data> , which ends the process .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_persona.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1443, "output_tokens": 358, "total_costs": 0.025169999999999998, "answers": ["Facts about the process:\n- A Police Report related to a car accident is searched within the Police Report database.\n- The Police Report is put in a file together with the Claim Documentation.\n- A claims handler calculates an initial claim estimate.\n- The claims handler creates an Action Plan based on an Action Plan Checklist.\n- A claims manager tries to negotiate a settlement on the claim estimate.\n- The claimant is informed of the outcome.\n\n-----\n\nuses\t1\t0\tthis activity_data mention is produced by the activity searched\nuses\t3\t0\tthis activity_data mention is produced by the activity put\nuses\t7\t8\tthis activity_data mention is produced by the activity calculates\nuses\t9\t10\tthis activity_data mention is produced by the activity creates\nuses\t12\t13\tthis activity_data mention is produced by the activity negotiate\nuses\t15\t16\tthis activity_data mention is produced by the activity informed\n\nflow\t1\t3\tThe activity searched is performed before the activity put\nflow\t3\t7\tThe activity put is performed before the activity calculates\nflow\t7\t9\tThe activity calculates is performed before the activity creates\nflow\t9\t12\tThe activity creates is performed before the activity negotiate\nflow\t12\t15\tThe activity negotiate is performed before the activity informed\n\nactor performer\t7\t5\tthe activity calculates is performed by the claims handler\nactor performer\t9\t6\tthe activity creates is performed by the claims handler\nactor performer\t12\t11\tthe activity negotiate is performed by the claims manager\nactor recipient\t15\t14\tthe activity informed is performed towards the claimant\n\nfurther specification\t1\t2\tthis further specification describes how the activity searched is executed\nfurther specification\t3\t4\tthis further specification describes how the activity put is executed"], "original_id": "doc-3.7"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Procedure\n\nLet's solve this task in 6 steps.\n\n1. Write a short list of facts about the process, then add a horizontal line (\"-----\")\n\n2. Detect all relations of type uses and list them in your answer.\n\n3. Detect all relations of type flow and list them in your answer.\n\n4. Detect all relations of type actor performer and actor recipient. In both cases focus on activities and find the actor, that is performing the activity, or is affected by its outcome respectively.\n\n5. Detect all relations of type same gateway and extract them. For this focus on XOR_Gateways and AND_Gateways.\n\n6. Detect all relations of type further specification and extract them. Focus on elements of type Activity and Further_Specification for this task.\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nEvery time we <activity id=0> get </activity> <activity_data id=1> a new order </activity_data> from <actor id=3> the sales department </actor> , first , <actor id=4> one of my masters </actor> <activity id=5> determines </activity> <activity_data id=6> the necessary parts and quantities as well as the delivery date </activity_data> . Once that information is present , <activity_data id=7> it </activity_data> has to be <activity id=8> entered </activity> into our production planning system ( PPS ) . It optimizes our production processes and creates possibly uniform work packages so that the setup times are minimized . Besides , <actor id=9> it </actor> <activity id=10> creates </activity> <activity_data id=11> a list of parts </activity_data> to be procured . Unfortunately it is not coupled correctly to our Enterprise Resource Planning system ( ERP ) , so <activity_data id=12> the data </activity_data> must be <activity id=13> transferred </activity> <further_specification id=14> manually </further_specification> . By the way , that is the second step . Once all the data is present , we need to decide whether <condition_specification id=15> any parts are missing </condition_specification> and must be <activity id=16> procured </activity> <xor_gateway id=17> or </xor_gateway> if this is not necessary . Once production is scheduled to start , <actor id=18> we </actor> <activity id=19> receive </activity> <activity_data id=20> a notice </activity_data> from the system and <actor id=21> an employee </actor> <activity id=22> takes care </activity> of <activity_data id=23> the implementation </activity_data> . Finally , <activity_data id=2> the order </activity_data> will be <activity id=24> checked </activity> again <further_specification id=25> for its quality </further_specification> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_persona.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1621, "output_tokens": 550, "total_costs": 0.03271, "answers": ["Facts about the process:\n- A new order is received from the sales department.\n- One of the masters determines the necessary parts, quantities, and delivery date.\n- This information is entered into the production planning system (PPS).\n- The PPS creates a list of parts to be procured.\n- Data must be transferred manually to the Enterprise Resource Planning system (ERP).\n- A decision is made whether any parts need to be procured.\n- A notice is received from the system when production is scheduled to start.\n- An employee takes care of the implementation.\n- The order is checked again for its quality.\n\n-----\n\nuses\t0\t1\tthis activity_data mention is produced by the activity get\nuses\t5\t6\tthis activity_data mention is produced by the activity determines\nuses\t8\t7\tthis activity_data mention is produced by the activity entered\nuses\t10\t11\tthis activity_data mention is produced by the activity creates\nuses\t13\t12\tthis activity_data mention is produced by the activity transferred\nuses\t19\t20\tthis activity_data mention is produced by the activity receive\nuses\t22\t23\tthis activity_data mention is produced by the activity takes care\nuses\t24\t2\tthis activity_data mention is produced by the activity checked\n\nflow\t0\t5\tthe activity get is performed before the activity determines\nflow\t5\t8\tthe activity determines is performed before the activity entered\nflow\t8\t10\tthe activity entered is performed before the activity creates\nflow\t10\t13\tthe activity creates is performed before the activity transferred\nflow\t13\t16\tthe activity transferred is performed before the activity procured\nflow\t16\t17\tthe activity procured is followed by a decision point xor_gateway\nflow\t17\t19\tthe decision point xor_gateway is followed by the activity receive\nflow\t19\t22\tthe activity receive is performed before the activity takes care\nflow\t22\t24\tthe activity takes care is performed before the activity checked\n\nactor performer\t0\t3\tthe activity get is performed by the sales department\nactor performer\t5\t4\tthe activity determines is performed by one of my masters\nactor performer\t10\t9\tthe activity creates is performed by it (PPS)\nactor performer\t13\t9\tthe activity transferred is performed by it (PPS)\nactor performer\t19\t18\tthe activity receive is performed by we (the company)\nactor performer\t22\t21\tthe activity takes care is performed by an employee\nactor recipient\t22\t18\tthe activity takes care affects we (the company)\n\nfurther specification\t13\t14\tthe activity transferred is further specified as being done manually\nfurther specification\t24\t25\tthe activity checked is further specified as being checked for its quality"], "original_id": "doc-6.3"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Procedure\n\nLet's solve this task in 6 steps.\n\n1. Write a short list of facts about the process, then add a horizontal line (\"-----\")\n\n2. Detect all relations of type uses and list them in your answer.\n\n3. Detect all relations of type flow and list them in your answer.\n\n4. Detect all relations of type actor performer and actor recipient. In both cases focus on activities and find the actor, that is performing the activity, or is affected by its outcome respectively.\n\n5. Detect all relations of type same gateway and extract them. For this focus on XOR_Gateways and AND_Gateways.\n\n6. Detect all relations of type further specification and extract them. Focus on elements of type Activity and Further_Specification for this task.\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nThe process starts periodically on the first of each month , when Assembler AG <activity id=0> places </activity> <activity_data id=1> an order </activity_data> with <actor id=4> the supplier </actor> <further_specification id=8> in order to request more product parts </further_specification> . a ) <actor id=9> Assembler AG </actor> <activity id=12> sends </activity> <activity_data id=2> the order </activity_data> to <actor id=5> the supplier </actor> . b ) <actor id=7> The supplier </actor> <activity id=13> processes </activity> <activity_data id=3> the order </activity_data> . c ) <actor id=6> The supplier </actor> <activity id=14> sends </activity> <activity_data id=15> an invoice </activity_data> to <actor id=11> Assembler AG </actor> . d ) <actor id=10> Assembler AG </actor> <activity id=17> receives </activity> <activity_data id=16> the invoice </activity_data> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_persona.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1419, "output_tokens": 343, "total_costs": 0.024480000000000002, "answers": ["Facts about the process:\n- The process starts periodically on the first of each month.\n- Assembler AG places an order with the supplier.\n- Assembler AG sends the order to the supplier.\n- The supplier processes the order.\n- The supplier sends an invoice to Assembler AG.\n- Assembler AG receives the invoice.\n\n-----\n\nuses\t0\t1\tthis activity_data mention is produced by the activity places\nuses\t12\t2\tthis activity_data mention is produced by the activity sends\nuses\t13\t3\tthis activity_data mention is produced by the activity processes\nuses\t14\t15\tthis activity_data mention is produced by the activity sends\nuses\t17\t16\tthis activity_data mention is produced by the activity receives\n\nflow\t0\t12\tthe activity places is followed by the activity sends\nflow\t12\t13\tthe activity sends is followed by the activity processes\nflow\t13\t14\tthe activity processes is followed by the activity sends\nflow\t14\t17\tthe activity sends is followed by the activity receives\n\nactor performer\t0\t9\tthe activity places is performed by Assembler AG\nactor performer\t12\t9\tthe activity sends is performed by Assembler AG\nactor performer\t13\t7\tthe activity processes is performed by The supplier\nactor performer\t14\t7\tthe activity sends is performed by The supplier\nactor performer\t17\t10\tthe activity receives is performed by Assembler AG\n\nactor recipient\t12\t5\tthe result of the activity sends is received by the supplier\nactor recipient\t14\t11\tthe result of the activity sends is received by Assembler AG\n\nfurther specification\t0\t8\tthis further_specification mention describes how the activity places has to be executed"], "original_id": "doc-6.2"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Procedure\n\nLet's solve this task in 6 steps.\n\n1. Write a short list of facts about the process, then add a horizontal line (\"-----\")\n\n2. Detect all relations of type uses and list them in your answer.\n\n3. Detect all relations of type flow and list them in your answer.\n\n4. Detect all relations of type actor performer and actor recipient. In both cases focus on activities and find the actor, that is performing the activity, or is affected by its outcome respectively.\n\n5. Detect all relations of type same gateway and extract them. For this focus on XOR_Gateways and AND_Gateways.\n\n6. Detect all relations of type further specification and extract them. Focus on elements of type Activity and Further_Specification for this task.\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nAfter <activity_data id=0> a claim </activity_data> is <activity id=4> registered </activity> , <activity_data id=2> it </activity_data> is <activity id=5> examined </activity> by <actor id=6> a claims officer </actor> . <actor id=7> The claims officer </actor> then <activity id=9> writes </activity> <activity_data id=10> a settlement recommendation </activity_data> . <activity_data id=11> This recommendation </activity_data> is then <activity id=12> checked </activity> by <actor id=13> a senior claims officer </actor> who may <activity id=14> mark </activity> <activity_data id=3> the claim </activity_data> <further_specification id=15> as OK or Not OK </further_specification> . <xor_gateway id=16> If </xor_gateway> <condition_specification id=17> the claim is marked as Not OK </condition_specification> , <activity_data id=1> it </activity_data> is <activity id=18> sent back </activity> to <actor id=8> the claims officer </actor> and the recommendation is repeated . <xor_gateway id=19> If </xor_gateway> <condition_specification id=20> the claim is OK </condition_specification> , <activity_data id=21> the claim handling process </activity_data> <activity id=22> proceeds </activity> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_persona.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1489, "output_tokens": 450, "total_costs": 0.02839, "answers": ["Facts about the process:\n- A claim is registered and then examined by a claims officer.\n- The claims officer writes a settlement recommendation.\n- This recommendation is checked by a senior claims officer who may mark the claim as OK or Not OK.\n- If the claim is marked as Not OK, it is sent back to the claims officer and the recommendation is repeated.\n- If the claim is OK, the claim handling process proceeds.\n\n-----\n\nuses\t4\t0\tthis activity_data mention is produced by the activity registered\nuses\t5\t2\tthis activity_data mention is produced by the activity examined\nuses\t9\t10\tthis activity_data mention is produced by the activity writes\nuses\t12\t11\tthis activity_data mention is produced by the activity checked\nuses\t14\t3\tthis activity_data mention is produced by the activity mark\nuses\t18\t1\tthis activity_data mention is produced by the activity sent back\nuses\t22\t21\tthis activity_data mention is produced by the activity proceeds\n\nflow\t4\t5\tthe activity registered is performed before the activity examined\nflow\t5\t9\tthe activity examined is performed before the activity writes\nflow\t9\t12\tthe activity writes is performed before the activity checked\nflow\t12\t14\tthe activity checked is performed before the activity mark\nflow\t14\t16\tthe activity mark is performed before the XOR gateway decision\nflow\t16\t17\tthe XOR gateway leads to the condition the claim is marked as Not OK\nflow\t16\t19\tthe XOR gateway leads to another XOR gateway decision\nflow\t19\t20\tthe XOR gateway leads to the condition the claim is OK\nflow\t17\t18\tthe condition the claim is marked as Not OK leads to the activity sent back\nflow\t20\t22\tthe condition the claim is OK leads to the activity proceeds\n\nactor performer\t5\t6\tthe activity examined is performed by a claims officer\nactor performer\t9\t7\tthe activity writes is performed by the claims officer\nactor performer\t12\t13\tthe activity checked is performed by a senior claims officer\nactor recipient\t18\t8\tthe activity sent back affects the claims officer\n\nfurther_specification\t14\t15\tthe activity mark is further specified by as OK or Not OK"], "original_id": "doc-3.3"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Procedure\n\nLet's solve this task in 6 steps.\n\n1. Write a short list of facts about the process, then add a horizontal line (\"-----\")\n\n2. Detect all relations of type uses and list them in your answer.\n\n3. Detect all relations of type flow and list them in your answer.\n\n4. Detect all relations of type actor performer and actor recipient. In both cases focus on activities and find the actor, that is performing the activity, or is affected by its outcome respectively.\n\n5. Detect all relations of type same gateway and extract them. For this focus on XOR_Gateways and AND_Gateways.\n\n6. Detect all relations of type further specification and extract them. Focus on elements of type Activity and Further_Specification for this task.\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nWhenever <actor id=0> a company </actor> <activity id=1> makes </activity> <activity_data id=2> the decision to go public </activity_data> , its first task is to <activity id=3> select </activity> <activity_data id=4> the underwriters </activity_data> . Underwriters act as financial midwives to a new issue . Usually they play a triple role : First they provide the company with procedural and financial advice , then they buy the issue , and finally they resell it to the public . Established underwriters are careful of their reputation and will not handle a new issue unless they believe the facts have been presented fairly . Thus , in addition to handling the sale of a company \u2019 s issue , the underwriters in effect give their seal of approval to it . <actor id=6> They </actor> <activity id=11> prepare </activity> <activity_data id=12> a registration statement for the approval of the Securities and Exchange Commission ( SEC ) </activity_data> . In addition to registering the issue with the SEC , <actor id=8> they </actor> need to <activity id=13> check </activity> <further_specification id=14> that the issue complies with the so-called blue-sky laws of each state that regulate sales of securities within the state </further_specification> . <and_gateway id=15> While </and_gateway> the registration statement is <activity id=16> awaiting </activity> <activity_data id=17> approval </activity_data> , <actor id=10> underwriters </actor> begin to <activity id=18> firm up </activity> <activity_data id=19> the issue price </activity_data> . <actor id=5> They </actor> <activity id=21> arrange </activity> <activity_data id=22> a road show </activity_data> <further_specification id=23> to talk to potential investors </further_specification> . Immediately after they <activity id=24> receive </activity> <activity_data id=25> clearance </activity_data> from the SEC , <actor id=9> underwriters </actor> <activity id=26> fix </activity> <activity_data id=20> the issue price </activity_data> . After that <actor id=7> they </actor> <activity id=27> enter </activity> <activity_data id=28> into a firm commitment to buy the stock </activity_data> and then <activity id=29> offer </activity> <activity_data id=30> it </activity_data> to <actor id=31> the public </actor> , when they haven \u2019 t still found any reason not to do it .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_persona.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1748, "output_tokens": 643, "total_costs": 0.03677, "answers": ["Facts about the process:\n- A company decides to go public.\n- The company selects underwriters.\n- Underwriters prepare a registration statement for SEC approval.\n- They check compliance with blue-sky laws.\n- While awaiting SEC approval, underwriters firm up the issue price.\n- They arrange a road show to talk to potential investors.\n- Upon receiving SEC clearance, underwriters fix the issue price.\n- They enter into a firm commitment to buy the stock.\n- Finally, they offer the stock to the public.\n\n-----\n\nactor performer\t1\t0\tthe activity makes is performed by a company\nuses\t1\t2\tthis activity_data mention is produced by the activity makes\nactor performer\t3\t0\tthe activity select is performed by a company\nuses\t3\t4\tthis activity_data mention is produced by the activity select\nactor performer\t11\t6\tthe activity prepare is performed by They\nuses\t11\t12\tthis activity_data mention is produced by the activity prepare\nactor performer\t13\t8\tthe activity check is performed by they\nuses\t13\t14\tthis activity_data mention is produced by the activity check\nactor performer\t16\t10\tthe activity awaiting is performed by underwriters\nuses\t16\t17\tthis activity_data mention is produced by the activity awaiting\nactor performer\t18\t10\tthe activity firm up is performed by underwriters\nuses\t18\t19\tthis activity_data mention is produced by the activity firm up\nactor performer\t21\t5\tthe activity arrange is performed by They\nuses\t21\t22\tthis activity_data mention is produced by the activity arrange\nactor performer\t24\t9\tthe activity receive is performed by underwriters\nuses\t24\t25\tthis activity_data mention is produced by the activity receive\nactor performer\t26\t9\tthe activity fix is performed by underwriters\nuses\t26\t20\tthis activity_data mention is produced by the activity fix\nactor performer\t27\t7\tthe activity enter is performed by they\nuses\t27\t28\tthis activity_data mention is produced by the activity enter\nactor performer\t29\t7\tthe activity offer is performed by they\nuses\t29\t30\tthis activity_data mention is produced by the activity offer\nactor recipient\t29\t31\tthe activity offer affects the public\n\nflow\t1\t3\tthe activity makes is followed by the activity select\nflow\t3\t11\tthe activity select is followed by the activity prepare\nflow\t11\t13\tthe activity prepare is followed by the activity check\nflow\t13\t16\tthe activity check is followed by the activity awaiting\nflow\t16\t18\tthe activity awaiting is followed by the activity firm up\nflow\t18\t21\tthe activity firm up is followed by the activity arrange\nflow\t21\t24\tthe activity arrange is followed by the activity receive\nflow\t24\t26\tthe activity receive is followed by the activity fix\nflow\t26\t27\tthe activity fix is followed by the activity enter\nflow\t27\t29\tthe activity enter is followed by the activity offer\n\nfurther specification\t13\t14\tthe activity check has further specifications described by the mention\nfurther specification\t21\t23\tthe activity arrange has further specifications described by the mention"], "original_id": "doc-1.4"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Procedure\n\nLet's solve this task in 6 steps.\n\n1. Write a short list of facts about the process, then add a horizontal line (\"-----\")\n\n2. Detect all relations of type uses and list them in your answer.\n\n3. Detect all relations of type flow and list them in your answer.\n\n4. Detect all relations of type actor performer and actor recipient. In both cases focus on activities and find the actor, that is performing the activity, or is affected by its outcome respectively.\n\n5. Detect all relations of type same gateway and extract them. For this focus on XOR_Gateways and AND_Gateways.\n\n6. Detect all relations of type further specification and extract them. Focus on elements of type Activity and Further_Specification for this task.\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The MSPO </actor> <activity id=2> deregisters </activity> at <actor id=4> the GO </actor> . <actor id=10> The GO </actor> <activity id=12> verifies </activity> <activity_data id=13> the deregistration </activity_data> . <actor id=9> The GO </actor> <activity id=16> rejects </activity> <activity_data id=15> the deregistration of the MSPO </activity_data> <xor_gateway id=17> or </xor_gateway> <actor id=11> the GO </actor> <further_specification id=18> preliminarily </further_specification> <activity id=19> confirms </activity> <activity_data id=14> the deregistration of the MSPO </activity_data> . <actor id=8> The GO </actor> <activity id=20> assigns </activity> <activity_data id=3> himself </activity_data> <further_specification id=21> as MSP </further_specification> . <actor id=7> The GO </actor> <activity id=22> informs </activity> <actor id=1> the MSPO </actor> <activity_data id=23> about the end of the assignment and the beginning of the assignment of the GO </activity_data> . <actor id=6> The GO </actor> <activity id=24> informs </activity> <actor id=25> the MPO </actor> <activity_data id=26> about the assignment of the GO </activity_data> . <actor id=5> The GO </actor> <activity id=27> informs </activity> <actor id=28> the SP </actor> <activity_data id=29> about the assignment of the GO </activity_data> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_persona.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1564, "output_tokens": 544, "total_costs": 0.03196, "answers": ["Facts about the process:\n- The MSPO deregisters at the GO.\n- The GO verifies the deregistration.\n- The GO rejects the deregistration of the MSPO or preliminarily confirms the deregistration of the MSPO.\n- The GO assigns himself as MSP.\n- The GO informs the MSPO about the end of the assignment and the beginning of the assignment of the GO.\n- The GO informs the MPO about the assignment of the GO.\n- The GO informs the SP about the assignment of the GO.\n\n-----\n\nactor performer\t2\t0\tThe activity deregisters is performed by the MSPO\nactor recipient\t2\t4\tThe activity deregisters affects the GO\nactor performer\t12\t10\tThe activity verifies is performed by the GO\nuses\t12\t13\tThe activity verifies uses the deregistration\nactor performer\t16\t9\tThe activity rejects is performed by the GO\nuses\t16\t15\tThe activity rejects uses the deregistration of the MSPO\nactor performer\t19\t11\tThe activity confirms is performed by the GO\nuses\t19\t14\tThe activity confirms uses the deregistration of the MSPO\nactor performer\t20\t8\tThe activity assigns is performed by the GO\nuses\t20\t3\tThe activity assigns uses himself\nfurther_specification\t20\t21\tThe activity assigns is further specified as MSP\nactor performer\t22\t7\tThe activity informs is performed by the GO\nactor recipient\t22\t1\tThe activity informs affects the MSPO\nuses\t22\t23\tThe activity informs uses about the end of the assignment and the beginning of the assignment of the GO\nactor performer\t24\t6\tThe activity informs is performed by the GO\nactor recipient\t24\t25\tThe activity informs affects the MPO\nuses\t24\t26\tThe activity informs uses about the assignment of the GO\nactor performer\t27\t5\tThe activity informs is performed by the GO\nactor recipient\t27\t28\tThe activity informs affects the SP\nuses\t27\t29\tThe activity informs uses about the assignment of the GO\n\nflow\t2\t12\tThe activity deregisters is followed by the activity verifies\nflow\t12\t16\tThe activity verifies is followed by the activity rejects\nflow\t16\t19\tThe activity rejects is followed by the activity confirms through an XOR gateway\nflow\t19\t20\tThe activity confirms is followed by the activity assigns\nflow\t20\t22\tThe activity assigns is followed by the activity informs targeting the MSPO\nflow\t22\t24\tThe activity informs targeting the MSPO is followed by the activity informs targeting the MPO\nflow\t24\t27\tThe activity informs targeting the MPO is followed by the activity informs targeting the SP"], "original_id": "doc-10.8"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Procedure\n\nLet's solve this task in 6 steps.\n\n1. Write a short list of facts about the process, then add a horizontal line (\"-----\")\n\n2. Detect all relations of type uses and list them in your answer.\n\n3. Detect all relations of type flow and list them in your answer.\n\n4. Detect all relations of type actor performer and actor recipient. In both cases focus on activities and find the actor, that is performing the activity, or is affected by its outcome respectively.\n\n5. Detect all relations of type same gateway and extract them. For this focus on XOR_Gateways and AND_Gateways.\n\n6. Detect all relations of type further specification and extract them. Focus on elements of type Activity and Further_Specification for this task.\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nIn November of each year , <actor id=0> the Coordination Unit at the Town Planning Authority </actor> <activity id=3> drafts </activity> a schedule of meetings for the next calendar year and <activity id=4> adds </activity> <activity_data id=5> draft dates </activity_data> to all calendars . <actor id=6> The Support Officer </actor> then <activity id=7> checks </activity> <activity_data id=8> the dates </activity_data> and <activity id=10> suggests </activity> <activity_data id=11> modifications </activity_data> . <actor id=1> The Coordination Unit </actor> then <activity id=12> rechecks </activity> <activity_data id=9> all dates </activity_data> and <activity id=13> looks for </activity> <activity_data id=14> potential conflicts </activity_data> . <activity_data id=15> The final schedule of meeting dates </activity_data> is <activity id=16> sent </activity> to <actor id=17> all the independent Committee Members </actor> <further_specification id=19> by email </further_specification> , <actor id=18> who </actor> then <activity id=20> check </activity> <activity_data id=21> their diaries </activity_data> and <activity id=22> advise </activity> <actor id=2> the Coordination Unit </actor> of any conflicts .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_persona.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1490, "output_tokens": 546, "total_costs": 0.03128, "answers": ["Facts about the process:\n- The Coordination Unit at the Town Planning Authority drafts a schedule of meetings for the next calendar year and adds draft dates to all calendars.\n- The Support Officer checks the dates and suggests modifications.\n- The Coordination Unit rechecks all dates and looks for potential conflicts.\n- The final schedule of meeting dates is sent to all the independent Committee Members by email.\n- The independent Committee Members check their diaries and advise the Coordination Unit of any conflicts.\n\n-----\n\nuses\t3\t5\tthe activity_data draft dates is produced by the activity drafts\nuses\t7\t8\tthe activity_data the dates is produced by the activity checks\nuses\t10\t11\tthe activity_data modifications is produced by the activity suggests\nuses\t12\t9\tthe activity_data all dates is produced by the activity rechecks\nuses\t13\t14\tthe activity_data potential conflicts is produced by the activity looks for\nuses\t16\t15\tthe activity_data The final schedule of meeting dates is produced by the activity sent\nuses\t20\t21\tthe activity_data their diaries is produced by the activity check\n\nflow\t3\t4\tthe activity drafts is followed by the activity adds\nflow\t4\t7\tthe activity adds is followed by the activity checks\nflow\t7\t10\tthe activity checks is followed by the activity suggests\nflow\t10\t12\tthe activity suggests is followed by the activity rechecks\nflow\t12\t13\tthe activity rechecks is followed by the activity looks for\nflow\t13\t16\tthe activity looks for is followed by the activity sent\nflow\t16\t20\tthe activity sent is followed by the activity check\nflow\t20\t22\tthe activity check is followed by the activity advise\n\nactor performer\t3\t0\tthe activity drafts is performed by the Coordination Unit at the Town Planning Authority\nactor performer\t4\t0\tthe activity adds is performed by the Coordination Unit at the Town Planning Authority\nactor performer\t7\t6\tthe activity checks is performed by The Support Officer\nactor performer\t10\t6\tthe activity suggests is performed by The Support Officer\nactor performer\t12\t1\tthe activity rechecks is performed by The Coordination Unit\nactor performer\t13\t1\tthe activity looks for is performed by The Coordination Unit\nactor performer\t16\t1\tthe activity sent is performed by The Coordination Unit\nactor performer\t20\t18\tthe activity check is performed by who (independent Committee Members)\nactor performer\t22\t2\tthe activity advise is performed by the Coordination Unit\n\nactor recipient\t16\t17\tthe activity sent affects all the independent Committee Members\n\nfurther specification\t16\t19\tthe activity sent is further specified by the method by email"], "original_id": "doc-9.3"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Procedure\n\nLet's solve this task in 6 steps.\n\n1. Write a short list of facts about the process, then add a horizontal line (\"-----\")\n\n2. Detect all relations of type uses and list them in your answer.\n\n3. Detect all relations of type flow and list them in your answer.\n\n4. Detect all relations of type actor performer and actor recipient. In both cases focus on activities and find the actor, that is performing the activity, or is affected by its outcome respectively.\n\n5. Detect all relations of type same gateway and extract them. For this focus on XOR_Gateways and AND_Gateways.\n\n6. Detect all relations of type further specification and extract them. Focus on elements of type Activity and Further_Specification for this task.\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nAfter <activity_data id=0> the Expense Report </activity_data> is <activity id=3> received </activity> , <activity_data id=4> a new account </activity_data> must be <activity id=5> created </activity> <xor_gateway id=6> if </xor_gateway> <condition_specification id=7> the employee does not already have one </condition_specification> . <activity_data id=2> The report </activity_data> is then <activity id=8> reviewed </activity> <further_specification id=9> for automatic approval </further_specification> . <condition_specification id=10> Amounts under $200 </condition_specification> are <further_specification id=11> automatically </further_specification> <activity id=12> approved </activity> , <xor_gateway id=13> whereas </xor_gateway> <condition_specification id=14> amounts equal to or over $200 </condition_specification> <activity id=15> require </activity> <activity_data id=16> approval </activity_data> of <actor id=17> the supervisor </actor> . <xor_gateway id=18> In case of </xor_gateway> <condition_specification id=19> rejection </condition_specification> , <actor id=20> the employee </actor> must <activity id=23> receive </activity> <activity_data id=24> a rejection notice </activity_data> <further_specification id=25> by email </further_specification> . <xor_gateway id=26> Otherwise </xor_gateway> , <activity_data id=27> the reimbursement </activity_data> <activity id=28> goes </activity> <further_specification id=29> to the employees direct deposit bank account </further_specification> . <xor_gateway id=30> If </xor_gateway> <condition_specification id=31> the request is not completed in 7 days </condition_specification> , then <actor id=22> the employee </actor> must <activity id=32> receive </activity> <activity_data id=33> an approval in progress email </activity_data> . <xor_gateway id=34> If </xor_gateway> <condition_specification id=35> the request is not finished within 30 days </condition_specification> , then the process is stopped and <actor id=21> the employee </actor> <activity id=36> receives </activity> <activity_data id=37> an email cancellation notice </activity_data> and must <activity id=38> re-submit </activity> <activity_data id=1> the expense report </activity_data> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_persona.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1736, "output_tokens": 502, "total_costs": 0.03242, "answers": ["After analyzing the provided text, here are the extracted relations:\n\n-----\n\n**uses Relations:**\n\nuses\t5\t4\tthis activity_data mention is produced by the activity created\nuses\t15\t16\tthis activity_data mention is produced by the activity require\nuses\t23\t24\tthis activity_data mention is produced by the activity receive\nuses\t28\t27\tthis activity_data mention is produced by the activity goes\nuses\t32\t33\tthis activity_data mention is produced by the activity receive\nuses\t36\t37\tthis activity_data mention is produced by the activity receives\nuses\t38\t1\tthis activity_data mention is produced by the activity re-submit\n\n**flow Relations:**\n\nflow\t3\t5\treceived activity is followed by created activity\nflow\t5\t8\tcreated activity is followed by reviewed activity\nflow\t8\t12\treviewed activity is followed by approved activity\nflow\t12\t15\tapproved activity is followed by require activity\nflow\t15\t23\trequire activity is followed by receive activity\nflow\t23\t28\treceive activity is followed by goes activity\nflow\t28\t32\tgoes activity is followed by receive activity\nflow\t32\t36\treceive activity is followed by receives activity\nflow\t36\t38\treceives activity is followed by re-submit activity\n\n**actor performer Relations:**\n\nactor performer\t15\t17\tthe activity require is performed by the supervisor\n\n**actor recipient Relations:**\n\nactor recipient\t23\t20\tthe activity receive is passively affecting the employee\nactor recipient\t32\t22\tthe activity receive is passively affecting the employee\nactor recipient\t36\t21\tthe activity receives is passively affecting the employee\n\n**same gateway Relations:**\n\nsame gateway\t6\t13\tthe xor_gateway if and whereas describe the same decision point\nsame gateway\t13\t18\tthe xor_gateway whereas and In case of describe the same decision point\nsame gateway\t18\t26\tthe xor_gateway In case of and Otherwise describe the same decision point\nsame gateway\t26\t30\tthe xor_gateway Otherwise and If describe the same decision point\nsame gateway\t30\t34\tthe xor_gateway If and If describe the same decision point\n\n**further specification Relations:**\n\nfurther specification\t8\t9\tthe activity reviewed is further described by for automatic approval\nfurther specification\t23\t25\tthe activity receive is further described by by email\nfurther specification\t28\t29\tthe activity goes is further described by to the employees direct deposit bank account"], "original_id": "doc-9.5"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Procedure\n\nLet's solve this task in 6 steps.\n\n1. Write a short list of facts about the process, then add a horizontal line (\"-----\")\n\n2. Detect all relations of type uses and list them in your answer.\n\n3. Detect all relations of type flow and list them in your answer.\n\n4. Detect all relations of type actor performer and actor recipient. In both cases focus on activities and find the actor, that is performing the activity, or is affected by its outcome respectively.\n\n5. Detect all relations of type same gateway and extract them. For this focus on XOR_Gateways and AND_Gateways.\n\n6. Detect all relations of type further specification and extract them. Focus on elements of type Activity and Further_Specification for this task.\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The MPON </actor> <activity id=9> reports </activity> <activity_data id=10> the meter operation </activity_data> to <actor id=19> the GO </actor> . <actor id=11> The GO </actor> <activity id=28> examines </activity> <activity_data id=31> the application </activity_data> of <actor id=8> the MPON </actor> . <actor id=27> The GO </actor> <activity id=29> rejects </activity> <activity_data id=30> the application of the MPON </activity_data> <xor_gateway id=33> or </xor_gateway> <actor id=18> the GO </actor> <activity id=34> confirmes </activity> <activity_data id=32> the application of the MPON </activity_data> . <actor id=26> The GO </actor> <activity id=35> informs </activity> <actor id=36> the MPOO </actor> <activity_data id=40> about the registration confirmation of the MPON </activity_data> . <actor id=25> The GO </actor> <activity id=42> informs </activity> <actor id=43> the MSPO </actor> <activity_data id=41> about the registration confirmation of the MPON </activity_data> . <actor id=2> The MPON </actor> and <actor id=39> the MPOO </actor> <activity id=46> perform </activity> <activity_data id=47> the equipment acquisition and / or equipment changes </activity_data> . <actor id=1> The MPON </actor> <activity id=48> informs </activity> <actor id=17> the GO </actor> <activity_data id=49> about the failure of the entire process </activity_data> <xor_gateway id=50> or </xor_gateway> <actor id=7> the MPON </actor> <activity id=51> informs </activity> <actor id=16> the GO </actor> <activity_data id=52> about the successful completion of the entire process </activity_data> . <actor id=24> The GO </actor> <activity id=53> informs </activity> <actor id=6> the MPON </actor> <activity_data id=54> about the failure of the overall transaction by deadline </activity_data> <xor_gateway id=55> if </xor_gateway> <condition_specification id=56> after a maximum time limit no message of the MPON is present at the GO </condition_specification> . <xor_gateway id=57> If </xor_gateway> <condition_specification id=58> the MPON informs the GO about the failure of the entire process </condition_specification> , <actor id=15> the GO </actor> <activity id=59> confirms </activity> <activity_data id=60> the failure of the assignment </activity_data> to <actor id=5> the MPON </actor> . <xor_gateway id=61> If </xor_gateway> <condition_specification id=62> the MPON informs the GO about the successful completion of the overall process </condition_specification> , <actor id=14> the GO </actor> <activity id=63> assigns </activity> <actor id=4> the MPON </actor> . <actor id=23> The GO </actor> <activity id=64> confirms </activity> <activity_data id=65> the assignment </activity_data> to <actor id=3> the MPON </actor> . <actor id=22> The GO </actor> <activity id=66> informs </activity> <actor id=38> the MPOO </actor> <activity_data id=67> about the failure of the assignment of the MPON </activity_data> or <actor id=13> the GO </actor> <activity id=68> informs </activity> <actor id=37> the MPOO </actor> <activity_data id=69> about the assignment of the MPON </activity_data> . <actor id=21> The GO </actor> <activity id=70> informs </activity> <actor id=45> the MSPO </actor> <activity_data id=71> about the failure of the assignment of the MPON </activity_data> or <actor id=12> the GO </actor> <activity id=72> informs </activity> <actor id=44> the MSPO </actor> <activity_data id=73> about the assignment of the MPON </activity_data> . <actor id=20> The GO </actor> <activity id=74> informs </activity> <actor id=75> the SP </actor> <activity_data id=76> about the assignment of the MPON </activity_data> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_persona.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 2211, "output_tokens": 1324, "total_costs": 0.061829999999999996, "answers": ["-----\n\nactor performer\t9\t0\tthe activity reports is performed by The MPON\nactor recipient\t9\t19\tthe result of the activity reports is received by the GO\nuses\t9\t10\tthis activity_data mention is produced by the activity reports\nactor performer\t28\t11\tthe activity examines is performed by The GO\nactor recipient\t28\t8\tthe result of the activity examines is received by the MPON\nuses\t28\t31\tthis activity_data mention is produced by the activity examines\nactor performer\t29\t27\tthe activity rejects is performed by The GO\nuses\t29\t30\tthis activity_data mention is produced by the activity rejects\nactor performer\t34\t18\tthe activity confirmes is performed by The GO\nuses\t34\t32\tthis activity_data mention is produced by the activity confirmes\nactor performer\t35\t26\tthe activity informs is performed by The GO\nactor recipient\t35\t36\tthe result of the activity informs is received by the MPOO\nuses\t35\t40\tthis activity_data mention is produced by the activity informs\nactor performer\t42\t25\tthe activity informs is performed by The GO\nactor recipient\t42\t43\tthe result of the activity informs is received by the MSPO\nuses\t42\t41\tthis activity_data mention is produced by the activity informs\nactor performer\t46\t2\tthe activity perform is performed by The MPON\nactor recipient\t46\t39\tthe result of the activity perform is received by the MPOO\nuses\t46\t47\tthis activity_data mention is produced by the activity perform\nactor performer\t48\t1\tthe activity informs is performed by The MPON\nactor recipient\t48\t17\tthe result of the activity informs is received by the GO\nuses\t48\t49\tthis activity_data mention is produced by the activity informs\nactor performer\t51\t7\tthe activity informs is performed by The MPON\nactor recipient\t51\t16\tthe result of the activity informs is received by the GO\nuses\t51\t52\tthis activity_data mention is produced by the activity informs\nactor performer\t53\t24\tthe activity informs is performed by The GO\nactor recipient\t53\t6\tthe result of the activity informs is received by the MPON\nuses\t53\t54\tthis activity_data mention is produced by the activity informs\nactor performer\t59\t15\tthe activity confirms is performed by The GO\nactor recipient\t59\t5\tthe result of the activity confirms is received by the MPON\nuses\t59\t60\tthis activity_data mention is produced by the activity confirms\nactor performer\t63\t14\tthe activity assigns is performed by The GO\nactor recipient\t63\t4\tthe result of the activity assigns is received by the MPON\nactor performer\t64\t23\tthe activity confirms is performed by The GO\nactor recipient\t64\t3\tthe result of the activity confirms is received by the MPON\nuses\t64\t65\tthis activity_data mention is produced by the activity confirms\nactor performer\t66\t22\tthe activity informs is performed by The GO\nactor recipient\t66\t38\tthe result of the activity informs is received by the MPOO\nuses\t66\t67\tthis activity_data mention is produced by the activity informs\nactor performer\t68\t13\tthe activity informs is performed by The GO\nactor recipient\t68\t37\tthe result of the activity informs is received by the MPOO\nuses\t68\t69\tthis activity_data mention is produced by the activity informs\nactor performer\t70\t21\tthe activity informs is performed by The GO\nactor recipient\t70\t45\tthe result of the activity informs is received by the MSPO\nuses\t70\t71\tthis activity_data mention is produced by the activity informs\nactor performer\t72\t12\tthe activity informs is performed by The GO\nactor recipient\t72\t44\tthe result of the activity informs is received by the MSPO\nuses\t72\t73\tthis activity_data mention is produced by the activity informs\nactor performer\t74\t20\tthe activity informs is performed by The GO\nactor recipient\t74\t75\tthe result of the activity informs is received by the SP\nuses\t74\t76\tthis activity_data mention is produced by the activity informs\n\nflow\t9\t28\tThe activity reports is followed by the activity examines\nflow\t28\t29\tThe activity examines is followed by the activity rejects\nflow\t29\t34\tThe activity rejects is followed by the activity confirmes through an XOR gateway\nflow\t34\t35\tThe activity confirmes is followed by the activity informs\nflow\t35\t42\tThe activity informs (id=35) is followed by another activity informs (id=42)\nflow\t42\t46\tThe activity informs (id=42) is followed by the activity perform\nflow\t46\t48\tThe activity perform is followed by the activity informs (id=48)\nflow\t48\t51\tThe activity informs (id=48) is followed by another activity informs (id=51) through an XOR gateway\nflow\t51\t53\tThe activity informs (id=51) is followed by another activity informs (id=53)\nflow\t53\t59\tThe activity informs (id=53) is followed by the activity confirms through an XOR gateway and a condition specification\nflow\t59\t63\tThe activity confirms is followed by the activity assigns through an XOR gateway and a condition specification\nflow\t63\t64\tThe activity assigns is followed by the activity confirms\nflow\t64\t66\tThe activity confirms (id=64) is followed by the activity informs (id=66)\nflow\t66\t68\tThe activity informs (id=66) is followed by another activity informs (id=68) through an XOR gateway\nflow\t68\t70\tThe activity informs (id=68) is followed by another activity informs (id=70)\nflow\t70\t72\tThe activity informs (id=70) is followed by another activity informs (id=72)\nflow\t72\t74\tThe activity informs (id=72) is followed by another activity informs (id=74)\n\nsame gateway\t33\t50\tThe XOR gateway with id=33 is related to another XOR gateway with id=50 as they both describe decision points in the process\nsame gateway\t55\t57\tThe XOR gateway with id=55 is related to another XOR gateway with id=57 as they both describe decision points in the process\nsame gateway\t57\t61\tThe XOR gateway with id=57 is related to another XOR gateway with id=61 as they both describe decision points in the process"], "original_id": "doc-10.2"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Procedure\n\nLet's solve this task in 6 steps.\n\n1. Write a short list of facts about the process, then add a horizontal line (\"-----\")\n\n2. Detect all relations of type uses and list them in your answer.\n\n3. Detect all relations of type flow and list them in your answer.\n\n4. Detect all relations of type actor performer and actor recipient. In both cases focus on activities and find the actor, that is performing the activity, or is affected by its outcome respectively.\n\n5. Detect all relations of type same gateway and extract them. For this focus on XOR_Gateways and AND_Gateways.\n\n6. Detect all relations of type further specification and extract them. Focus on elements of type Activity and Further_Specification for this task.\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nThe Evanstonian is an upscale independent hotel . When <actor id=0> a guest </actor> <activity id=1> calls </activity> <actor id=2> room service </actor> at The Evanstonian , <actor id=3> the room-service manager </actor> <activity id=7> takes down </activity> <activity_data id=8> the order </activity_data> . <actor id=5> She </actor> then <activity id=10> submits </activity> <activity_data id=11> an order ticket </activity_data> to <actor id=12> the kitchen </actor> <further_specification id=14> to begin preparing the food </further_specification> . <actor id=4> She </actor> also <activity id=15> gives </activity> <activity_data id=16> an order </activity_data> to <actor id=17> the sommelier </actor> ( i.e . , the wine waiter ) <further_specification id=19> to fetch wine from the cellar and to prepare any other alcoholic beverages </further_specification> . Eighty percent of room-service orders include wine or some other alcoholic beverage . Finally , <actor id=6> she </actor> <activity id=20> assigns </activity> <activity_data id=9> the order </activity_data> to <actor id=21> the waiter </actor> . <and_gateway id=26> While </and_gateway> <actor id=13> the kitchen </actor> and <actor id=18> the sommelier </actor> are <activity id=27> doing </activity> <activity_data id=28> their tasks </activity_data> , <actor id=24> the waiter </actor> <activity id=29> readies </activity> <activity_data id=30> a cart </activity_data> ( i.e . , puts a tablecloth on the cart and gathers silverware ) . The waiter is also responsible for nonalcoholic drinks . Once the food , wine , and cart are ready , <actor id=23> the waiter </actor> <activity id=32> delivers </activity> <activity_data id=31> it </activity_data> to <actor id=33> the guest \u2019 s room </actor> . After <activity id=34> returning </activity> <further_specification id=35> to the room-service station </further_specification> , <actor id=22> the waiter </actor> <activity id=36> debits </activity> <activity_data id=37> the guest \u2019 s account </activity_data> . <actor id=25> The waiter </actor> may <activity id=38> wait </activity> <activity_data id=39> to do the billing </activity_data> <xor_gateway id=40> if </xor_gateway> <condition_specification id=41> he has another order to prepare or deliver </condition_specification> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_persona.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1803, "output_tokens": 812, "total_costs": 0.04239, "answers": ["Facts about the process:\n- A guest calls room service, and the room-service manager takes down the order.\n- The room-service manager submits an order ticket to the kitchen and gives an order to the sommelier to prepare wine or other alcoholic beverages.\n- The waiter is assigned the order, readies a cart while the kitchen and sommelier are doing their tasks, and then delivers everything to the guest's room.\n- After delivering, the waiter returns to the room-service station and debits the guest's account.\n- The waiter may wait to do the billing if he has another order to prepare or deliver.\n\n-----\n\nactor performer\t1\t0\tthe activity calls is performed by a guest\nactor performer\t7\t3\tthe activity takes down is performed by the room-service manager\nactor performer\t10\t5\tthe activity submits is performed by She\nactor performer\t15\t4\tthe activity gives is performed by She\nactor performer\t20\t6\tthe activity assigns is performed by she\nactor performer\t27\t13\tthe activity doing is performed by the kitchen\nactor performer\t27\t18\tthe activity doing is performed by the sommelier\nactor performer\t29\t24\tthe activity readies is performed by the waiter\nactor performer\t32\t23\tthe activity delivers is performed by the waiter\nactor performer\t34\t22\tthe activity returning is performed by the waiter\nactor performer\t36\t22\tthe activity debits is performed by the waiter\nactor performer\t38\t25\tthe activity wait is performed by The waiter\n\nuses\t7\t8\tthis activity_data mention is produced by the activity takes down\nuses\t10\t11\tthis activity_data mention is produced by the activity submits\nuses\t15\t16\tthis activity_data mention is produced by the activity gives\nuses\t20\t9\tthis activity_data mention is produced by the activity assigns\nuses\t27\t28\tthis activity_data mention is produced by the activity doing\nuses\t29\t30\tthis activity_data mention is produced by the activity readies\nuses\t32\t31\tthis activity_data mention is produced by the activity delivers\nuses\t36\t37\tthis activity_data mention is produced by the activity debits\nuses\t38\t39\tthis activity_data mention is produced by the activity wait\n\nflow\t1\t7\tthe activity calls is followed by the activity takes down\nflow\t7\t10\tthe activity takes down is followed by the activity submits\nflow\t10\t15\tthe activity submits is followed by the activity gives\nflow\t15\t20\tthe activity gives is followed by the activity assigns\nflow\t20\t27\tthe activity assigns is followed by the activity doing\nflow\t27\t29\tthe activity doing is followed by the activity readies\nflow\t29\t32\tthe activity readies is followed by the activity delivers\nflow\t32\t34\tthe activity delivers is followed by the activity returning\nflow\t34\t36\tthe activity returning is followed by the activity debits\nflow\t36\t38\tthe activity debits is followed by the activity wait\nflow\t38\t40\tthe activity wait is followed by the xor_gateway if\n\nactor recipient\t7\t2\tthe activity takes down is received by room service\nactor recipient\t10\t12\tthe activity submits is received by the kitchen\nactor recipient\t15\t17\tthe activity gives is received by the sommelier\nactor recipient\t20\t21\tthe activity assigns is received by the waiter\nactor recipient\t32\t33\tthe activity delivers is received by the guest \u2019 s room\n\nfurther specification\t10\t14\tthis further_specification describes how the activity submits has to be executed\nfurther specification\t15\t19\tthis further_specification describes how the activity gives has to be executed\nfurther specification\t34\t35\tthis further_specification describes how the activity returning has to be executed\n\nsame gateway\t26\t26\tthis relation links disjointed descriptions of the same AND_Gateway together\nsame gateway\t40\t40\tthis relation links disjointed descriptions of the same XOR_Gateway together"], "original_id": "doc-1.3"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Procedure\n\nLet's solve this task in 6 steps.\n\n1. Write a short list of facts about the process, then add a horizontal line (\"-----\")\n\n2. Detect all relations of type uses and list them in your answer.\n\n3. Detect all relations of type flow and list them in your answer.\n\n4. Detect all relations of type actor performer and actor recipient. In both cases focus on activities and find the actor, that is performing the activity, or is affected by its outcome respectively.\n\n5. Detect all relations of type same gateway and extract them. For this focus on XOR_Gateways and AND_Gateways.\n\n6. Detect all relations of type further specification and extract them. Focus on elements of type Activity and Further_Specification for this task.\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<activity_data id=0> Mail from the party </activity_data> is <activity id=5> collected </activity> on a daily basis by <actor id=6> the Mail Processing Unit </actor> . Within this unit , <actor id=7> the Mail Clerk </actor> <activity id=8> sorts </activity> <activity_data id=1> the unopened mail </activity_data> <further_specification id=9> into the various business areas </further_specification> . <activity_data id=2> The mail </activity_data> is then <activity id=10> distributed </activity> . When <activity_data id=3> the mail </activity_data> is <activity id=11> received </activity> by <actor id=12> the Registry </actor> , <activity_data id=4> it </activity_data> is <activity id=13> opened </activity> and <activity id=14> sorted </activity> into groups for distribution , and thus <activity id=15> registered </activity> <further_specification id=16> in a manual incoming Mail Register </further_specification> . Afterwards , <actor id=17> the Assistant Registry Manager </actor> within the Registry <activity id=19> performs a quality check </activity> . <xor_gateway id=20> If </xor_gateway> <condition_specification id=21> the mail is not compliant </condition_specification> , <activity_data id=22> a list of requisition </activity_data> explaining the reason for rejection is <activity id=23> compiled </activity> and <activity id=24> sent back </activity> to <actor id=25> the party </actor> . <xor_gateway id=27> Otherwise </xor_gateway> , <activity_data id=28> the matter details </activity_data> ( types of action ) are <activity id=29> captured </activity> and <activity id=30> provided </activity> to <actor id=31> the Cashier </actor> , <actor id=32> who </actor> <activity id=34> takes </activity> the applicable fees attached to the mail . At this point , <actor id=18> the Assistant Registry Manager </actor> <activity id=35> puts </activity> <activity_data id=36> the receipt and copied documents </activity_data> <further_specification id=38> into an envelope </further_specification> and <activity id=39> posts </activity> <activity_data id=37> it </activity_data> to <actor id=26> the party </actor> . <and_gateway id=40> Meantime </and_gateway> , <actor id=33> the Cashier </actor> <activity id=41> captures </activity> <activity_data id=42> the Party Details </activity_data> and <activity id=43> prints </activity> <activity_data id=44> the Physical Court File </activity_data> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_persona.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1806, "output_tokens": 951, "total_costs": 0.04658999999999999, "answers": ["Facts about the process:\n- Mail is collected daily by the Mail Processing Unit.\n- Within this unit, the Mail Clerk sorts the unopened mail into various business areas.\n- The mail is then distributed.\n- When the mail is received by the Registry, it is opened, sorted into groups for distribution, and registered in a manual incoming Mail Register.\n- The Assistant Registry Manager performs a quality check.\n- If the mail is not compliant, a list of requisition explaining the reason for rejection is compiled and sent back to the party.\n- Otherwise, the matter details are captured and provided to the Cashier, who takes the applicable fees attached to the mail.\n- The Assistant Registry Manager puts the receipt and copied documents into an envelope and posts it to the party.\n- Meantime, the Cashier captures the Party Details and prints the Physical Court File.\n\n-----\n\nuses\t5\t0\tthis activity_data mention is produced by the activity collected\nuses\t8\t1\tthis activity_data mention is produced by the activity sorts\nuses\t10\t2\tthis activity_data mention is produced by the activity distributed\nuses\t11\t3\tthis activity_data mention is produced by the activity received\nuses\t13\t4\tthis activity_data mention is produced by the activity opened\nuses\t15\t4\tthis activity_data mention is produced by the activity registered\nuses\t23\t22\tthis activity_data mention is produced by the activity compiled\nuses\t24\t22\tthis activity_data mention is produced by the activity sent back\nuses\t29\t28\tthis activity_data mention is produced by the activity captured\nuses\t30\t28\tthis activity_data mention is produced by the activity provided\nuses\t34\t28\tthis activity_data mention is produced by the activity takes\nuses\t39\t37\tthis activity_data mention is produced by the activity posts\nuses\t41\t42\tthis activity_data mention is produced by the activity captures\nuses\t43\t44\tthis activity_data mention is produced by the activity prints\n\nflow\t5\t8\tthe activity collected is performed before the activity sorts\nflow\t8\t10\tthe activity sorts is performed before the activity distributed\nflow\t10\t11\tthe activity distributed is performed before the activity received\nflow\t11\t13\tthe activity received is performed before the activity opened\nflow\t13\t14\tthe activity opened is performed before the activity sorted\nflow\t14\t15\tthe activity sorted is performed before the activity registered\nflow\t15\t19\tthe activity registered is performed before the activity performs a quality check\nflow\t20\t21\tthe XOR_Gateway leads to the condition specification the mail is not compliant\nflow\t20\t27\tthe XOR_Gateway leads to the otherwise path\nflow\t23\t24\tthe activity compiled is performed before the activity sent back\nflow\t29\t30\tthe activity captured is performed before the activity provided\nflow\t30\t34\tthe activity provided is performed before the activity takes\nflow\t34\t35\tthe activity takes is performed before the activity puts\nflow\t35\t39\tthe activity puts is performed before the activity posts\nflow\t39\t41\tthe activity posts is performed before the activity captures\nflow\t41\t43\tthe activity captures is performed before the activity prints\n\nactor performer\t5\t6\tthe activity collected is performed by the Mail Processing Unit\nactor performer\t8\t7\tthe activity sorts is performed by the Mail Clerk\nactor performer\t11\t12\tthe activity received is performed by the Registry\nactor performer\t19\t17\tthe activity performs a quality check is performed by the Assistant Registry Manager\nactor performer\t23\t17\tthe activity compiled is performed by the Assistant Registry Manager\nactor performer\t24\t17\tthe activity sent back is performed by the Assistant Registry Manager\nactor performer\t29\t17\tthe activity captured is performed by the Assistant Registry Manager\nactor performer\t30\t31\tthe activity provided is performed by the Cashier\nactor performer\t34\t32\tthe activity takes is performed by the Cashier\nactor performer\t35\t18\tthe activity puts is performed by the Assistant Registry Manager\nactor performer\t39\t18\tthe activity posts is performed by the Assistant Registry Manager\nactor performer\t41\t33\tthe activity captures is performed by the Cashier\nactor performer\t43\t33\tthe activity prints is performed by the Cashier\n\nactor recipient\t24\t25\tthe activity sent back affects the party\nactor recipient\t39\t26\tthe activity posts affects the party\n\nfurther specification\t8\t9\tthe activity sorts is further specified by into the various business areas\nfurther specification\t15\t16\tthe activity registered is further specified by in a manual incoming Mail Register\nfurther specification\t35\t38\tthe activity puts is further specified by into an envelope"], "original_id": "doc-3.5"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Procedure\n\nLet's solve this task in 6 steps.\n\n1. Write a short list of facts about the process, then add a horizontal line (\"-----\")\n\n2. Detect all relations of type uses and list them in your answer.\n\n3. Detect all relations of type flow and list them in your answer.\n\n4. Detect all relations of type actor performer and actor recipient. In both cases focus on activities and find the actor, that is performing the activity, or is affected by its outcome respectively.\n\n5. Detect all relations of type same gateway and extract them. For this focus on XOR_Gateways and AND_Gateways.\n\n6. Detect all relations of type further specification and extract them. Focus on elements of type Activity and Further_Specification for this task.\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nEvery weekday morning , <activity_data id=0> the database </activity_data> is <activity id=2> backed up </activity> and then <activity_data id=1> it </activity_data> is <activity id=3> checked </activity> <further_specification id=4> to see whether the Account Defaulter table has new records </further_specification> . <xor_gateway id=5> If </xor_gateway> <condition_specification id=6> no new records are found </condition_specification> , then the process should <activity id=7> check </activity> <activity_data id=8> the CRM system </activity_data> <further_specification id=10> to see whether new returns have been filed </further_specification> . <xor_gateway id=11> If </xor_gateway> <condition_specification id=12> new returns exist </condition_specification> , then <activity id=13> register </activity> <activity_data id=14> all defaulting accounts and customers </activity_data> . <xor_gateway id=15> If </xor_gateway> <condition_specification id=16> the defaulting client codes have not been previously advised </condition_specification> , <activity id=17> produce </activity> <activity_data id=18> another table of defaulting accounts </activity_data> and <activity id=19> send </activity> to <actor id=20> account management </actor> . All of this must be <condition_specification id=21> completed by 2 : 30 pm </condition_specification> , <xor_gateway id=22> if </xor_gateway> <condition_specification id=23> it is not </condition_specification> , then <activity_data id=24> an alert </activity_data> should be <activity id=25> sent </activity> to <actor id=26> the supervisor </actor> . Once the new defaulting account report has been completed , <activity id=28> check </activity> <activity_data id=9> the CRM system </activity_data> <further_specification id=29> to see whether new returns have been filed </further_specification> . <xor_gateway id=30> If </xor_gateway> <condition_specification id=31> new returns have been filed </condition_specification> , <activity id=32> reconcile with </activity> <activity_data id=33> the existing account defaulters table </activity_data> . This must be <condition_specification id=34> completed by 4 : 0 pm </condition_specification> <xor_gateway id=35> otherwise </xor_gateway> <actor id=27> a supervisor </actor> should be <activity id=36> sent </activity> <activity_data id=37> a message </activity_data> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_persona.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1768, "output_tokens": 676, "total_costs": 0.03796, "answers": ["Facts about the process:\n- The database is backed up and checked every weekday morning.\n- The process checks for new records in the Account Defaulter table.\n- If no new records are found, the CRM system is checked for new returns.\n- If new returns exist, all defaulting accounts and customers are registered.\n- If defaulting client codes have not been previously advised, another table of defaulting accounts is produced and sent to account management.\n- The process must be completed by 2:30 pm; if not, an alert is sent to the supervisor.\n- After completing the new defaulting account report, the CRM system is checked again for new returns.\n- If new returns have been filed, they are reconciled with the existing account defaulters table.\n- The reconciliation must be completed by 4:00 pm; otherwise, a message is sent to a supervisor.\n\n-----\n\nuses\t2\t0\tthis activity_data mention is produced by the activity backed up\nuses\t3\t1\tthis activity_data mention is produced by the activity checked\nuses\t7\t8\tthis activity_data mention is produced by the activity check\nuses\t13\t14\tthis activity_data mention is produced by the activity register\nuses\t17\t18\tthis activity_data mention is produced by the activity produce\nuses\t19\t18\tthis activity_data mention is produced by the activity send\nuses\t25\t24\tthis activity_data mention is produced by the activity sent\nuses\t28\t9\tthis activity_data mention is produced by the activity check\nuses\t32\t33\tthis activity_data mention is produced by the activity reconcile with\nuses\t36\t37\tthis activity_data mention is produced by the activity sent\n\nflow\t2\t3\tthe activity backed up is followed by the activity checked\nflow\t3\t7\tthe activity checked is followed by the activity check\nflow\t7\t13\tthe activity check is followed by the activity register\nflow\t13\t17\tthe activity register is followed by the activity produce\nflow\t17\t19\tthe activity produce is followed by the activity send\nflow\t19\t25\tthe activity send is followed by the activity sent\nflow\t25\t28\tthe activity sent is followed by the activity check\nflow\t28\t32\tthe activity check is followed by the activity reconcile with\nflow\t32\t36\tthe activity reconcile with is followed by the activity sent\nflow\t5\t6\tthe XOR_Gateway leads to the condition no new records are found\nflow\t11\t12\tthe XOR_Gateway leads to the condition new returns exist\nflow\t15\t16\tthe XOR_Gateway leads to the condition the defaulting client codes have not been previously advised\nflow\t22\t23\tthe XOR_Gateway leads to the condition it is not\nflow\t30\t31\tthe XOR_Gateway leads to the condition new returns have been filed\n\nactor recipient\t19\t20\tthe activity send is passively affecting account management\nactor recipient\t25\t26\tthe activity sent is passively affecting the supervisor\nactor recipient\t36\t27\tthe activity sent is passively affecting a supervisor\n\nfurther specification\t3\t4\tthis further specification describes how the activity checked is executed\nfurther specification\t7\t10\tthis further specification describes how the activity check is executed\nfurther specification\t28\t29\tthis further specification describes how the activity check is executed"], "original_id": "doc-9.1"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Procedure\n\nLet's solve this task in 6 steps.\n\n1. Write a short list of facts about the process, then add a horizontal line (\"-----\")\n\n2. Detect all relations of type uses and list them in your answer.\n\n3. Detect all relations of type flow and list them in your answer.\n\n4. Detect all relations of type actor performer and actor recipient. In both cases focus on activities and find the actor, that is performing the activity, or is affected by its outcome respectively.\n\n5. Detect all relations of type same gateway and extract them. For this focus on XOR_Gateways and AND_Gateways.\n\n6. Detect all relations of type further specification and extract them. Focus on elements of type Activity and Further_Specification for this task.\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nThe process of an Office Supply Request starts when <actor id=0> any employee </actor> of the organization <activity id=3> submits </activity> <activity_data id=4> an office supply request </activity_data> . Once <activity_data id=9> the requirement </activity_data> is <activity id=10> registered </activity> , <activity_data id=5> the request </activity_data> is <activity id=11> received </activity> by <actor id=12> the immediate supervisor of the employee </actor> requesting the office supplies . <actor id=13> The supervisor </actor> must <activity id=14> approve or ask for a change , or reject </activity> <activity_data id=6> the request </activity_data> . <xor_gateway id=15> If </xor_gateway> <condition_specification id=16> the request is rejected </condition_specification> the process will end . <xor_gateway id=17> If </xor_gateway> <condition_specification id=18> the request is asked to make a change </condition_specification> then <activity_data id=8> it </activity_data> is <activity id=19> returned </activity> to <actor id=1> the petitioner / employee </actor> who can <activity id=20> review </activity> <activity_data id=21> the comments for the change request </activity_data> . <xor_gateway id=22> If </xor_gateway> <condition_specification id=23> the request is approved </condition_specification> <activity_data id=7> it </activity_data> will <activity id=24> go </activity> to <actor id=25> the purchase department </actor> that will be in charge of <activity id=27> making </activity> <activity_data id=28> quotations </activity_data> ( using a subprocess ) and <activity id=29> select </activity> <activity_data id=30> a vendor </activity_data> . <xor_gateway id=31> If </xor_gateway> <condition_specification id=32> the vendor is not valid in the system </condition_specification> <actor id=26> the purchase department </actor> will have to <activity id=33> choose </activity> <activity_data id=34> a different vendor </activity_data> . After <activity_data id=35> a vendor </activity_data> is <activity id=36> selected </activity> and <activity id=37> confirmed </activity> , <actor id=38> the system </actor> will <activity id=39> generate </activity> and <activity id=40> send </activity> <activity_data id=41> a purchase order </activity_data> and <activity id=42> wait for </activity> <activity_data id=43> the product to be delivered </activity_data> and <activity_data id=44> the invoice received </activity_data> . In any case the system will send a notification to let the user know what the result was . In any of the cases , approval , rejection or change required <actor id=45> the system </actor> will <activity id=46> send </activity> <actor id=2> the user </actor> <activity_data id=47> a notification </activity_data> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_persona.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1872, "output_tokens": 980, "total_costs": 0.048119999999999996, "answers": ["-----\n\nactor performer\t3\t0\tthe activity submits is performed by any employee\nactor performer\t11\t12\tthe activity received is performed by the immediate supervisor of the employee\nactor performer\t14\t13\tthe activity approve or ask for a change, or reject is performed by The supervisor\nactor performer\t19\t1\tthe activity returned is performed by the petitioner / employee\nactor performer\t24\t25\tthe activity go is performed by the purchase department\nactor performer\t27\t25\tthe activity making is performed by the purchase department\nactor performer\t29\t25\tthe activity select is performed by the purchase department\nactor performer\t33\t26\tthe activity choose is performed by the purchase department\nactor performer\t39\t38\tthe activity generate is performed by the system\nactor performer\t40\t38\tthe activity send is performed by the system\nactor performer\t42\t38\tthe activity wait for is performed by the system\nactor performer\t46\t45\tthe activity send is performed by the system\n\nuses\t3\t4\tthe activity_data an office supply request is used by the activity submits\nuses\t10\t9\tthe activity_data the requirement is used by the activity registered\nuses\t11\t5\tthe activity_data the request is used by the activity received\nuses\t14\t6\tthe activity_data the request is used by the activity approve or ask for a change, or reject\nuses\t19\t8\tthe activity_data it is used by the activity returned\nuses\t20\t21\tthe activity_data the comments for the change request is used by the activity review\nuses\t24\t7\tthe activity_data it is used by the activity go\nuses\t27\t28\tthe activity_data quotations is used by the activity making\nuses\t29\t30\tthe activity_data a vendor is used by the activity select\nuses\t33\t34\tthe activity_data a different vendor is used by the activity choose\nuses\t36\t35\tthe activity_data a vendor is used by the activity selected\nuses\t39\t41\tthe activity_data a purchase order is used by the activity generate\nuses\t40\t41\tthe activity_data a purchase order is used by the activity send\nuses\t42\t43\tthe activity_data the product to be delivered is used by the activity wait for\nuses\t42\t44\tthe activity_data the invoice received is used by the activity wait for\nuses\t46\t47\tthe activity_data a notification is used by the activity send\n\nflow\t3\t10\tthe activity submits is followed by the activity registered\nflow\t10\t11\tthe activity registered is followed by the activity received\nflow\t11\t14\tthe activity received is followed by the activity approve or ask for a change, or reject\nflow\t14\t15\tthe activity approve or ask for a change, or reject is followed by the xor_gateway If\nflow\t15\t16\tthe xor_gateway If is followed by the condition_specification the request is rejected\nflow\t15\t17\tthe xor_gateway If is followed by the xor_gateway If\nflow\t17\t18\tthe xor_gateway If is followed by the condition_specification the request is asked to make a change\nflow\t18\t19\tthe condition_specification the request is asked to make a change is followed by the activity returned\nflow\t19\t20\tthe activity returned is followed by the activity review\nflow\t20\t22\tthe activity review is followed by the xor_gateway If\nflow\t22\t23\tthe xor_gateway If is followed by the condition_specification the request is approved\nflow\t23\t24\tthe condition_specification the request is approved is followed by the activity go\nflow\t24\t27\tthe activity go is followed by the activity making\nflow\t27\t29\tthe activity making is followed by the activity select\nflow\t29\t31\tthe activity select is followed by the xor_gateway If\nflow\t31\t32\tthe xor_gateway If is followed by the condition_specification the vendor is not valid in the system\nflow\t32\t33\tthe condition_specification the vendor is not valid in the system is followed by the activity choose\nflow\t33\t36\tthe activity choose is followed by the activity selected\nflow\t36\t37\tthe activity selected is followed by the activity confirmed\nflow\t37\t39\tthe activity confirmed is followed by the activity generate\nflow\t39\t40\tthe activity generate is followed by the activity send\nflow\t40\t42\tthe activity send is followed by the activity wait for\nflow\t42\t46\tthe activity wait for is followed by the activity send\n\nsame gateway\t15\t17\tthe xor_gateway If describes the same decision point as the subsequent xor_gateway If\nsame gateway\t17\t22\tthe xor_gateway If describes the same decision point as the subsequent xor_gateway If\nsame gateway\t22\t31\tthe xor_gateway If describes the same decision point as the subsequent xor_gateway If"], "original_id": "doc-5.3"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Procedure\n\nLet's solve this task in 6 steps.\n\n1. Write a short list of facts about the process, then add a horizontal line (\"-----\")\n\n2. Detect all relations of type uses and list them in your answer.\n\n3. Detect all relations of type flow and list them in your answer.\n\n4. Detect all relations of type actor performer and actor recipient. In both cases focus on activities and find the actor, that is performing the activity, or is affected by its outcome respectively.\n\n5. Detect all relations of type same gateway and extract them. For this focus on XOR_Gateways and AND_Gateways.\n\n6. Detect all relations of type further specification and extract them. Focus on elements of type Activity and Further_Specification for this task.\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The MPON </actor> <activity id=1> sents </activity> <activity_data id=2> the dismissal </activity_data> to <actor id=6> the MPOO </actor> . <actor id=8> The MPOO </actor> <activity id=10> reviews </activity> <activity_data id=5> the dismissal </activity_data> . <actor id=7> The MPOO </actor> <activity id=11> opposes </activity> <activity_data id=4> the dismissal </activity_data> of MPON <xor_gateway id=12> or </xor_gateway> <actor id=9> the MPOO </actor> <activity id=13> confirmes </activity> <activity_data id=3> the dismissal </activity_data> of the MPON .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_persona.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1352, "output_tokens": 261, "total_costs": 0.02135, "answers": ["Facts about the process:\n- The MPON sends the dismissal to the MPOO.\n- The MPOO reviews the dismissal.\n- The MPOO opposes the dismissal of MPON or the MPOO confirms the dismissal of the MPON.\n\n-----\n\nuses\t1\t2\tthis activity_data mention is produced by the activity sends\nuses\t10\t5\tthis activity_data mention is produced by the activity reviews\nuses\t11\t4\tthis activity_data mention is produced by the activity opposes\nuses\t13\t3\tthis activity_data mention is produced by the activity confirms\n\nflow\t1\t10\tThe activity sends is performed before the activity reviews\nflow\t10\t11\tThe activity reviews is performed before the activity opposes\nflow\t11\t13\tThe activity opposes is performed before the activity confirms, considering the XOR gateway that offers a choice between opposing and confirming\n\nactor performer\t1\t0\tthe activity sends is performed by The MPON\nactor performer\t10\t8\tthe activity reviews is performed by The MPOO\nactor performer\t11\t7\tthe activity opposes is performed by The MPOO\nactor performer\t13\t9\tthe activity confirms is performed by The MPOO\n\nactor recipient\t1\t6\tthe result of the activity sends is received by the MPOO"], "original_id": "doc-10.1"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Procedure\n\nLet's solve this task in 6 steps.\n\n1. Write a short list of facts about the process, then add a horizontal line (\"-----\")\n\n2. Detect all relations of type uses and list them in your answer.\n\n3. Detect all relations of type flow and list them in your answer.\n\n4. Detect all relations of type actor performer and actor recipient. In both cases focus on activities and find the actor, that is performing the activity, or is affected by its outcome respectively.\n\n5. Detect all relations of type same gateway and extract them. For this focus on XOR_Gateways and AND_Gateways.\n\n6. Detect all relations of type further specification and extract them. Focus on elements of type Activity and Further_Specification for this task.\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nThe first step is to <activity id=0> determine </activity> <activity_data id=1> contact details </activity_data> of potential customers . This can be achieved in several ways . <xor_gateway id=2> Sometimes </xor_gateway> , <actor id=3> we </actor> <activity id=6> buy </activity> <activity_data id=7> details for cold calls </activity_data> , <xor_gateway id=8> sometimes </xor_gateway> , <actor id=9> our marketing staff </actor> <activity id=10> participates </activity> in exhibitions and <xor_gateway id=11> sometimes </xor_gateway> , <actor id=5> you </actor> just happen to <activity id=12> know </activity> <activity_data id=13> somebody , who is interested in the product </activity_data> . Then <actor id=4> we </actor> start <activity id=14> calling </activity> <actor id=17> the customer </actor> . That is done by the call center staff . <actor id=20> They </actor> are <activity id=21> determining </activity> <activity_data id=22> the contact person </activity_data> and <activity_data id=23> the budget </activity_data> which would be available for the project . Of course , <activity id=24> asking </activity> <actor id=19> the customer </actor> whether he is generally interested is also important . <xor_gateway id=25> If </xor_gateway> <condition_specification id=26> this is not the case </condition_specification> , we <activity id=27> leave </activity> <activity_data id=15> him </activity_data> alone , except <xor_gateway id=28> if </xor_gateway> <condition_specification id=29> the potential project budget is huge </condition_specification> . Then <actor id=30> the head of development </actor> personally tries to <activity id=31> acquire </activity> <activity_data id=16> the customer </activity_data> . <xor_gateway id=32> If </xor_gateway> <condition_specification id=33> the customer is interested in the end </condition_specification> , the next step is <activity_data id=34> a detailed online presentation </activity_data> . It is <activity id=35> given </activity> either by a sales representative or by a pre-sales employee in case of a more technical presentation . Afterwards we are <activity id=36> waiting for </activity> <activity_data id=37> the customer to come back to us </activity_data> . <xor_gateway id=38> If </xor_gateway> <condition_specification id=39> we are not contacted within 2 weeks </condition_specification> , <actor id=40> a sales representative </actor> is <activity id=41> calling </activity> <actor id=18> the customer </actor> . The last phase is the <activity id=42> creation </activity> of <activity_data id=43> a quotation </activity_data> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_persona.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1833, "output_tokens": 865, "total_costs": 0.04428, "answers": ["Facts about the process:\n- Determine contact details of potential customers.\n- Buying details for cold calls, participating in exhibitions, or knowing somebody interested are ways to achieve this.\n- Calling the customer is the next step, done by the call center staff.\n- Determining the contact person and budget available for the project.\n- Asking the customer if they are generally interested.\n- If the customer is not interested, leave them alone unless the potential project budget is huge.\n- If the customer is interested, a detailed online presentation is given.\n- Waiting for the customer to come back.\n- If not contacted within 2 weeks, a sales representative calls the customer.\n- The last phase is the creation of a quotation.\n\n-----\n\nuses\t0\t1\tthis activity_data mention is produced by the activity determine\nuses\t6\t7\tthis activity_data mention is produced by the activity buy\nuses\t12\t13\tthis activity_data mention is produced by the activity know\nuses\t21\t22\tthis activity_data mention is produced by the activity determining\nuses\t21\t23\tthis activity_data mention is produced by the activity determining\nuses\t31\t16\tthis activity_data mention is produced by the activity acquire\nuses\t35\t34\tthis activity_data mention is produced by the activity given\nuses\t36\t37\tthis activity_data mention is produced by the activity waiting for\nuses\t42\t43\tthis activity_data mention is produced by the activity creation\n\nflow\t0\t6\tdetermine is the first activity, followed by buy as a way to achieve the goal\nflow\t6\t10\tbuy is followed by participates as another way to achieve the goal\nflow\t10\t12\tparticipates is followed by know as the last way to achieve the goal\nflow\t12\t14\tknow is followed by calling, moving to the next step of the process\nflow\t14\t21\tcalling is followed by determining, as part of the process to understand customer's needs\nflow\t21\t24\tdetermining is followed by asking, to gauge general interest\nflow\t24\t27\tasking is followed by leave, as a conditional step based on customer interest\nflow\t27\t31\tleave is followed by acquire, as a conditional step based on project budget\nflow\t31\t35\tacquire is followed by given, as the next step if the customer is interested\nflow\t35\t36\tgiven is followed by waiting for, as the next step in the process\nflow\t36\t41\twaiting for is followed by calling, as a conditional step based on customer response\nflow\t41\t42\tcalling is followed by creation, as the final step in the process\n\nactor performer\t6\t3\tthe activity buy is performed by we\nactor performer\t10\t9\tthe activity participates is performed by our marketing staff\nactor performer\t12\t5\tthe activity know is performed by you\nactor performer\t14\t4\tthe activity calling is performed by we\nactor performer\t21\t20\tthe activity determining is performed by They\nactor performer\t24\t19\tthe activity asking is performed by the customer\nactor performer\t31\t30\tthe activity acquire is performed by the head of development\nactor performer\t35\t0\tthe activity given is performed by a sales representative or pre-sales employee, but no specific actor mentioned\nactor performer\t41\t40\tthe activity calling is performed by a sales representative\nactor recipient\t14\t17\tthe result of the activity calling is received by the customer\nactor recipient\t24\t19\tthe result of the activity asking is received by the customer\nactor recipient\t41\t18\tthe result of the activity calling is received by the customer\n\nsame gateway\t2\t8\tboth mentions describe the same decision point in the process execution\nsame gateway\t8\t11\tboth mentions describe the same decision point in the process execution\nsame gateway\t25\t28\tboth mentions describe the same decision point in the process execution\nsame gateway\t28\t32\tboth mentions describe the same decision point in the process execution\nsame gateway\t32\t38\tboth mentions describe the same decision point in the process execution\n\nfurther specification\t35\t0\tthe activity given is further specified by the mention of either a sales representative or a pre-sales employee handling the presentation"], "original_id": "doc-6.4"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Procedure\n\nLet's solve this task in 6 steps.\n\n1. Write a short list of facts about the process, then add a horizontal line (\"-----\")\n\n2. Detect all relations of type uses and list them in your answer.\n\n3. Detect all relations of type flow and list them in your answer.\n\n4. Detect all relations of type actor performer and actor recipient. In both cases focus on activities and find the actor, that is performing the activity, or is affected by its outcome respectively.\n\n5. Detect all relations of type same gateway and extract them. For this focus on XOR_Gateways and AND_Gateways.\n\n6. Detect all relations of type further specification and extract them. Focus on elements of type Activity and Further_Specification for this task.\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nA small company manufactures customized bicycles . Whenever <actor id=0> the sales department </actor> <activity id=2> receives </activity> <activity_data id=3> an order </activity_data> , a new process instance is created . A member of the sales department can then <activity id=5> reject </activity> <xor_gateway id=6> or </xor_gateway> <activity id=7> accept </activity> <activity_data id=4> the order </activity_data> for a customized bike . In the former case , the process instance is finished . In the latter case , <actor id=8> the storehouse </actor> and <actor id=10> the engineering department </actor> are <activity id=13> informed </activity> . <actor id=9> The storehouse </actor> immediately <activity id=14> processes </activity> <activity_data id=15> the part list of the order </activity_data> and <activity id=16> checks </activity> <activity_data id=17> the required quantity of each part </activity_data> . <xor_gateway id=18> If </xor_gateway> <condition_specification id=19> the part is available in-house </condition_specification> , <activity_data id=20> it </activity_data> is <activity id=22> reserved </activity> . <xor_gateway id=23> If </xor_gateway> <condition_specification id=24> it is not available </condition_specification> , <activity_data id=21> it </activity_data> is <activity id=25> back-ordered </activity> . This procedure is repeated for each item on the part list . <and_gateway id=26> In the meantime </and_gateway> , <actor id=12> the engineering department </actor> <activity id=27> prepares </activity> <activity_data id=28> everything </activity_data> for the assembling of the ordered bicycle . <xor_gateway id=29> If </xor_gateway> <condition_specification id=30> the storehouse has successfully reserved or back-ordered every item of the part list </condition_specification> and the preparation activity has finished , <actor id=11> the engineering department </actor> <activity id=31> assembles </activity> <activity_data id=32> the bicycle </activity_data> . Afterwards , <actor id=1> the sales department </actor> <activity id=34> ships </activity> <activity_data id=33> the bicycle </activity_data> to <actor id=35> the customer </actor> and finishes the process instance .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_persona.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1723, "output_tokens": 760, "total_costs": 0.04003, "answers": ["Facts about the process:\n- The sales department receives orders for customized bicycles.\n- Orders can be either rejected or accepted.\n- If accepted, the storehouse and engineering department are informed.\n- The storehouse processes the part list and checks the required quantity of each part.\n- Parts are either reserved if available in-house or back-ordered if not.\n- The engineering department prepares for assembling the bicycle.\n- The bicycle is assembled if all parts are reserved or back-ordered and preparation is finished.\n- The sales department ships the assembled bicycle to the customer.\n\n-----\n\nactor performer\t2\t0\tthe activity receives is performed by the sales department\nuses\t2\t3\tthe activity_data an order is used by the activity receives\nactor performer\t5\t0\tthe activity reject is performed by the sales department\nactor performer\t7\t0\tthe activity accept is performed by the sales department\nuses\t7\t4\tthe activity_data the order is used by the activity accept\nactor performer\t13\t8\tthe activity informed is performed by the storehouse\nactor performer\t13\t10\tthe activity informed is performed by the engineering department\nactor performer\t14\t9\tthe activity processes is performed by the storehouse\nuses\t14\t15\tthe activity_data the part list of the order is used by the activity processes\nactor performer\t16\t9\tthe activity checks is performed by the storehouse\nuses\t16\t17\tthe activity_data the required quantity of each part is used by the activity checks\nactor performer\t22\t9\tthe activity reserved is performed by the storehouse\nuses\t22\t20\tthe activity_data it is used by the activity reserved\nactor performer\t25\t9\tthe activity back-ordered is performed by the storehouse\nuses\t25\t21\tthe activity_data it is used by the activity back-ordered\nactor performer\t27\t12\tthe activity prepares is performed by the engineering department\nuses\t27\t28\tthe activity_data everything is used by the activity prepares\nactor performer\t31\t11\tthe activity assembles is performed by the engineering department\nuses\t31\t32\tthe activity_data the bicycle is used by the activity assembles\nactor performer\t34\t1\tthe activity ships is performed by the sales department\nuses\t34\t33\tthe activity_data the bicycle is used by the activity ships\nactor recipient\t34\t35\tthe activity ships affects the customer\n\nflow\t2\t5\tthe activity receives is followed by the activity reject\nflow\t2\t7\tthe activity receives is followed by the activity accept\nflow\t7\t13\tthe activity accept is followed by the activity informed\nflow\t13\t14\tthe activity informed is followed by the activity processes\nflow\t14\t16\tthe activity processes is followed by the activity checks\nflow\t16\t22\tthe activity checks is followed by the activity reserved\nflow\t16\t25\tthe activity checks is followed by the activity back-ordered\nflow\t22\t27\tthe activity reserved is followed by the activity prepares\nflow\t25\t27\tthe activity back-ordered is followed by the activity prepares\nflow\t27\t31\tthe activity prepares is followed by the activity assembles\nflow\t31\t34\tthe activity assembles is followed by the activity ships\n\nsame gateway\t6\t23\tthe xor_gateway or is mentioned in two different places but refers to the same decision point\n\nfurther specification\t13\t19\tthe activity informed is further specified by the condition the part is available in-house\nfurther specification\t13\t24\tthe activity informed is further specified by the condition it is not available\nfurther specification\t31\t30\tthe activity assembles is further specified by the condition the storehouse has successfully reserved or back-ordered every item of the part list and the preparation activity has finished"], "original_id": "doc-1.1"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Procedure\n\nLet's solve this task in 6 steps.\n\n1. Write a short list of facts about the process, then add a horizontal line (\"-----\")\n\n2. Detect all relations of type uses and list them in your answer.\n\n3. Detect all relations of type flow and list them in your answer.\n\n4. Detect all relations of type actor performer and actor recipient. In both cases focus on activities and find the actor, that is performing the activity, or is affected by its outcome respectively.\n\n5. Detect all relations of type same gateway and extract them. For this focus on XOR_Gateways and AND_Gateways.\n\n6. Detect all relations of type further specification and extract them. Focus on elements of type Activity and Further_Specification for this task.\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The INQ </actor> <activity id=1> transmits </activity> <activity_data id=7> the transaction data request </activity_data> to <actor id=2> the IP </actor> . <actor id=4> The IP </actor> <activity id=5> checks </activity> <activity_data id=6> the request of the INQ </activity_data> . <actor id=3> The IP </actor> <activity id=8> answers </activity> <activity_data id=9> the question of the INQ </activity_data> <further_specification id=10> depending on the outcome of the examination </further_specification> , i.e . Transmission of data or rejection .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_persona.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1331, "output_tokens": 196, "total_costs": 0.01919, "answers": ["Facts about the process:\n- The INQ transmits the transaction data request to the IP.\n- The IP checks the request of the INQ.\n- The IP answers the question of the INQ depending on the outcome of the examination, which could be transmission of data or rejection.\n\n-----\n\nactor performer\t1\t0\tThe activity transmits is performed by The INQ\nactor recipient\t1\t2\tThe activity transmits affects the IP as the recipient of the transaction data request\nuses\t1\t7\tThe activity transmits uses the transaction data request\nactor performer\t5\t4\tThe activity checks is performed by The IP\nuses\t5\t6\tThe activity checks uses the request of the INQ\nactor performer\t8\t3\tThe activity answers is performed by The IP\nuses\t8\t9\tThe activity answers uses the question of the INQ\nfurther specification\t8\t10\tThe activity answers is further specified by depending on the outcome of the examination"], "original_id": "doc-10.13"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Procedure\n\nLet's solve this task in 6 steps.\n\n1. Write a short list of facts about the process, then add a horizontal line (\"-----\")\n\n2. Detect all relations of type uses and list them in your answer.\n\n3. Detect all relations of type flow and list them in your answer.\n\n4. Detect all relations of type actor performer and actor recipient. In both cases focus on activities and find the actor, that is performing the activity, or is affected by its outcome respectively.\n\n5. Detect all relations of type same gateway and extract them. For this focus on XOR_Gateways and AND_Gateways.\n\n6. Detect all relations of type further specification and extract them. Focus on elements of type Activity and Further_Specification for this task.\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The MSPN </actor> <activity id=1> sents </activity> <activity_data id=2> a dismissal </activity_data> to <actor id=6> the MSPO </actor> . <actor id=9> The MSPO </actor> <activity id=10> reviews </activity> <activity_data id=3> the dismissal </activity_data> . <actor id=8> The MSPO </actor> <activity id=11> rejects </activity> <activity_data id=5> the dismissal of the MSPN </activity_data> <xor_gateway id=12> or </xor_gateway> <actor id=7> The MSPO </actor> <activity id=13> confirms </activity> <activity_data id=4> the dismissal of the MSPN </activity_data> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_persona.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1348, "output_tokens": 390, "total_costs": 0.02518, "answers": ["Facts about the process:\n- The MSPN sends a dismissal to the MSPO.\n- The MSPO reviews the dismissal.\n- The MSPO either rejects or confirms the dismissal of the MSPN.\n\n-----\n\n**uses relations:**\nuses\t1\t2\tthis activity_data mention is produced by the activity sends\nuses\t10\t3\tthis activity_data mention is produced by the activity reviews\nuses\t11\t5\tthis activity_data mention is produced by the activity rejects\nuses\t13\t4\tthis activity_data mention is produced by the activity confirms\n\n**flow relations:**\nflow\t1\t10\tthe activity sends is performed before the activity reviews\nflow\t10\t11\tthe activity reviews is performed before the activity rejects\nflow\t11\t13\tthe activity rejects is performed before the activity confirms, considering the xor_gateway that offers a choice between reject and confirm\n\n**actor performer relations:**\nactor performer\t1\t0\tthe activity sends is performed by The MSPN\nactor performer\t10\t9\tthe activity reviews is performed by The MSPO\nactor performer\t11\t8\tthe activity rejects is performed by The MSPO\nactor performer\t13\t7\tthe activity confirms is performed by The MSPO\n\n**actor recipient relations:**\nactor recipient\t1\t6\tthe result of the activity sends is received by the MSPO\nactor recipient\t10\t9\tthe result of the activity reviews is received by The MSPO\nactor recipient\t11\t8\tthe result of the activity rejects is received by The MSPO\nactor recipient\t13\t7\tthe result of the activity confirms is received by The MSPO\n\n**same gateway relations:**\nNo same gateway relations are extracted because there is only one xor_gateway mentioned, and it does not have a pair to form a relation with.\n\n**further specification relations:**\nNo further specification relations are extracted because there are no mentions of type \"further_specification\" in the text."], "original_id": "doc-10.6"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Procedure\n\nLet's solve this task in 6 steps.\n\n1. Write a short list of facts about the process, then add a horizontal line (\"-----\")\n\n2. Detect all relations of type uses and list them in your answer.\n\n3. Detect all relations of type flow and list them in your answer.\n\n4. Detect all relations of type actor performer and actor recipient. In both cases focus on activities and find the actor, that is performing the activity, or is affected by its outcome respectively.\n\n5. Detect all relations of type same gateway and extract them. For this focus on XOR_Gateways and AND_Gateways.\n\n6. Detect all relations of type further specification and extract them. Focus on elements of type Activity and Further_Specification for this task.\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nOnce <activity_data id=0> the dates </activity_data> are <activity id=1> finalized </activity> ( by <actor id=2> the Coordination Unit </actor> ) , <actor id=3> the Support Officer </actor> <activity id=6> updates </activity> <activity_data id=7> all group calendars </activity_data> and <activity id=8> creates </activity> <activity_data id=9> meeting folders for each meeting </activity_data> and <activity id=10> ensures </activity> <activity_data id=11> all appropriate documents are uploaded to system </activity_data> . <actor id=12> Committee Members </actor> are <activity id=15> advised </activity> a week before each meeting to read all related documents . <actor id=13> The Committee Members </actor> <activity id=16> hold </activity> <activity_data id=17> their meeting </activity_data> , and <actor id=5> the Support Office </actor> then <activity id=18> produces </activity> <activity_data id=19> minutes </activity_data> including any Action Points for each Committee Member . Within 5 working days , <actor id=21> the Coordination Unit </actor> must <activity id=22> conduct </activity> <activity_data id=23> a QA check on the minutes </activity_data> , <activity_data id=20> which </activity_data> are then <activity id=24> sent </activity> to <actor id=14> all Committee Members </actor> . <actor id=4> The Support Officer </actor> then <activity id=25> updates </activity> <activity_data id=26> all departmental records </activity_data> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_persona.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1545, "output_tokens": 538, "total_costs": 0.03159, "answers": ["Facts about the process:\n- The Coordination Unit finalizes the dates.\n- The Support Officer updates all group calendars and creates meeting folders for each meeting, ensuring all appropriate documents are uploaded to the system.\n- Committee Members are advised a week before each meeting to read all related documents.\n- The Committee Members hold their meeting.\n- The Support Office produces minutes including any Action Points for each Committee Member.\n- The Coordination Unit conducts a QA check on the minutes.\n- The minutes are sent to all Committee Members.\n- The Support Officer updates all departmental records.\n\n-----\n\nuses\t1\t0\tthis activity_data mention is produced by the activity finalized\nuses\t6\t7\tthis activity_data mention is produced by the activity updates\nuses\t8\t9\tthis activity_data mention is produced by the activity creates\nuses\t10\t11\tthis activity_data mention is produced by the activity ensures\nuses\t18\t19\tthis activity_data mention is produced by the activity produces\nuses\t22\t23\tthis activity_data mention is produced by the activity conduct\nuses\t24\t20\tthis activity_data mention is produced by the activity sent\nuses\t25\t26\tthis activity_data mention is produced by the activity updates\n\nflow\t1\t6\tthe activity finalized is followed by the activity updates\nflow\t6\t8\tthe activity updates is followed by the activity creates\nflow\t8\t10\tthe activity creates is followed by the activity ensures\nflow\t10\t15\tthe activity ensures is followed by the activity advised\nflow\t15\t16\tthe activity advised is followed by the activity hold\nflow\t16\t18\tthe activity hold is followed by the activity produces\nflow\t18\t22\tthe activity produces is followed by the activity conduct\nflow\t22\t24\tthe activity conduct is followed by the activity sent\nflow\t24\t25\tthe activity sent is followed by the activity updates\n\nactor performer\t1\t2\tthe activity finalized is performed by the Coordination Unit\nactor performer\t6\t3\tthe activity updates is performed by the Support Officer\nactor performer\t8\t3\tthe activity creates is performed by the Support Officer\nactor performer\t10\t3\tthe activity ensures is performed by the Support Officer\nactor performer\t15\t12\tthe activity advised is performed by Committee Members\nactor performer\t16\t13\tthe activity hold is performed by The Committee Members\nactor performer\t18\t5\tthe activity produces is performed by the Support Office\nactor performer\t22\t21\tthe activity conduct is performed by the Coordination Unit\nactor performer\t25\t4\tthe activity updates is performed by The Support Officer\n\nactor recipient\t24\t14\tthe activity sent is received by all Committee Members"], "original_id": "doc-9.4"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Procedure\n\nLet's solve this task in 6 steps.\n\n1. Write a short list of facts about the process, then add a horizontal line (\"-----\")\n\n2. Detect all relations of type uses and list them in your answer.\n\n3. Detect all relations of type flow and list them in your answer.\n\n4. Detect all relations of type actor performer and actor recipient. In both cases focus on activities and find the actor, that is performing the activity, or is affected by its outcome respectively.\n\n5. Detect all relations of type same gateway and extract them. For this focus on XOR_Gateways and AND_Gateways.\n\n6. Detect all relations of type further specification and extract them. Focus on elements of type Activity and Further_Specification for this task.\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nWhen <activity_data id=0> a claim </activity_data> is <activity id=3> received </activity> , <activity_data id=2> it </activity_data> is first <activity id=4> checked </activity> whether the claimant is insured by the organization . <xor_gateway id=5> If </xor_gateway> <condition_specification id=6> not </condition_specification> , <actor id=7> the claimant </actor> is <activity id=10> informed </activity> that <activity_data id=11> the claim must be rejected </activity_data> . <xor_gateway id=12> Otherwise </xor_gateway> , <activity_data id=13> the severity of the claim </activity_data> is <activity id=14> evaluated </activity> . Based on the outcome ( simple or complex claims ) , <activity_data id=15> relevant forms </activity_data> are <activity id=18> sent </activity> to <actor id=9> the claimant </actor> . Once <activity_data id=16> the forms </activity_data> are <activity id=19> returned </activity> , <activity_data id=17> they </activity_data> are <activity id=20> checked </activity> <further_specification id=21> for completeness </further_specification> . <xor_gateway id=22> If </xor_gateway> <condition_specification id=23> the forms provide all relevant details </condition_specification> , <activity_data id=1> the claim </activity_data> is <activity id=24> registered </activity> <further_specification id=25> in the Claims Management system </further_specification> , which ends the Claims Notification process . <xor_gateway id=26> Otherwise </xor_gateway> , <actor id=8> the claimant </actor> is <activity id=27> informed </activity> <further_specification id=28> to update the forms </further_specification> . Upon reception of the updated forms , they are checked again .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_persona.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1608, "output_tokens": 639, "total_costs": 0.035250000000000004, "answers": ["Facts about the process:\n- A claim is received and checked for the claimant's insurance status.\n- If the claimant is not insured, they are informed that the claim must be rejected.\n- If the claimant is insured, the severity of the claim is evaluated.\n- Based on the claim's severity, relevant forms are sent to the claimant.\n- Once the forms are returned, they are checked for completeness.\n- If the forms provide all relevant details, the claim is registered in the Claims Management system, ending the process.\n- If the forms do not provide all relevant details, the claimant is informed to update the forms.\n- Upon reception of the updated forms, they are checked again.\n\n-----\n\nuses\t3\t0\tthis activity_data mention is produced by the activity received\nuses\t4\t2\tthis activity_data mention is produced by the activity checked\nuses\t10\t11\tthis activity_data mention is produced by the activity informed\nuses\t14\t13\tthis activity_data mention is produced by the activity evaluated\nuses\t18\t15\tthis activity_data mention is produced by the activity sent\nuses\t19\t16\tthis activity_data mention is produced by the activity returned\nuses\t20\t17\tthis activity_data mention is produced by the activity checked\nuses\t24\t1\tthis activity_data mention is produced by the activity registered\nuses\t27\t1\tthis activity_data mention is produced by the activity informed\n\nflow\t3\t4\tthe activity received is performed before the activity checked\nflow\t4\t5\tthe activity checked is followed by a decision point\nflow\t5\t6\tthe decision point leads to a condition specification\nflow\t5\t12\tanother path from the decision point leads to a different outcome\nflow\t10\t12\tthe activity informed is followed by another decision point\nflow\t12\t14\tthe decision point leads to the activity evaluated\nflow\t14\t18\tthe activity evaluated is followed by the activity sent\nflow\t18\t19\tthe activity sent is followed by the activity returned\nflow\t19\t20\tthe activity returned is followed by the activity checked\nflow\t20\t22\tthe activity checked is followed by a decision point\nflow\t22\t23\tthe decision point leads to a condition specification\nflow\t22\t26\tanother path from the decision point leads to a different outcome\nflow\t24\t26\tthe activity registered is followed by a decision point\nflow\t26\t27\tthe decision point leads to the activity informed\n\nactor recipient\t10\t7\tthe activity informed affects the claimant\nactor recipient\t18\t9\tthe activity sent affects the claimant\nactor recipient\t27\t8\tthe activity informed affects the claimant\n\nsame gateway\t5\t12\tthese mentions describe the same decision point in the process execution\nsame gateway\t22\t26\tthese mentions describe the same decision point in the process execution\n\nfurther specification\t20\t21\tthis further specification describes how the activity checked has to be executed\nfurther specification\t24\t25\tthis further specification describes how the activity registered has to be executed\nfurther specification\t27\t28\tthis further specification describes how the activity informed has to be executed"], "original_id": "doc-3.6"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Procedure\n\nLet's solve this task in 6 steps.\n\n1. Write a short list of facts about the process, then add a horizontal line (\"-----\")\n\n2. Detect all relations of type uses and list them in your answer.\n\n3. Detect all relations of type flow and list them in your answer.\n\n4. Detect all relations of type actor performer and actor recipient. In both cases focus on activities and find the actor, that is performing the activity, or is affected by its outcome respectively.\n\n5. Detect all relations of type same gateway and extract them. For this focus on XOR_Gateways and AND_Gateways.\n\n6. Detect all relations of type further specification and extract them. Focus on elements of type Activity and Further_Specification for this task.\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The Customer Service Representative </actor> <activity id=1> sends </activity> <activity_data id=2> a Mortgage offer </activity_data> to <actor id=3> the customer </actor> and <activity id=5> waits for </activity> <activity_data id=6> a reply </activity_data> . <xor_gateway id=7> If </xor_gateway> <condition_specification id=8> the customer calls or writes back declining the mortgage </condition_specification> , <activity_data id=9> the case details </activity_data> are <activity id=11> updated </activity> and <activity_data id=12> the work </activity_data> is then <activity id=13> archived </activity> prior to <activity id=14> cancellation </activity> . <xor_gateway id=15> If </xor_gateway> <condition_specification id=16> the customer sends back the completed offer documents and attaches all prerequisite documents </condition_specification> then <activity_data id=17> the case </activity_data> is <activity id=18> moved </activity> to <actor id=19> administration </actor> for completion . <xor_gateway id=20> If </xor_gateway> <condition_specification id=21> all pre-requisite documents are not provided </condition_specification> <activity_data id=22> a message </activity_data> is <activity id=23> generated </activity> to <actor id=4> the customer </actor> <further_specification id=24> requesting outstanding documents </further_specification> . <xor_gateway id=25> If </xor_gateway> <condition_specification id=26> no answer is received after 2 weeks </condition_specification> , <activity_data id=10> the case details </activity_data> are <activity id=27> updated </activity> prior to <activity id=28> archive </activity> and <activity id=29> cancellation </activity> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_persona.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1593, "output_tokens": 616, "total_costs": 0.034409999999999996, "answers": ["Facts about the process:\n- The Customer Service Representative sends a Mortgage offer to the customer and waits for a reply.\n- If the customer declines the mortgage, the case details are updated and the work is archived prior to cancellation.\n- If the customer sends back the completed offer documents with all prerequisite documents, the case is moved to administration for completion.\n- If all prerequisite documents are not provided, a message is generated to the customer requesting outstanding documents.\n- If no answer is received after 2 weeks, the case details are updated prior to archive and cancellation.\n\n-----\n\nuses\t1\t2\tthis activity_data mention is produced by the activity sends\nuses\t5\t6\tthis activity_data mention is produced by the activity waits\nuses\t11\t9\tthis activity_data mention is produced by the activity updated\nuses\t11\t12\tthis activity_data mention is produced by the activity updated\nuses\t13\t12\tthis activity_data mention is produced by the activity archived\nuses\t18\t17\tthis activity_data mention is produced by the activity moved\nuses\t23\t22\tthis activity_data mention is produced by the activity generated\nuses\t27\t10\tthis activity_data mention is produced by the activity updated\n\nflow\t1\t5\tthe activity sends is performed before the activity waits\nflow\t5\t7\tthe activity waits is performed before the XOR gateway decision\nflow\t7\t8\tthe XOR gateway leads to the condition where the customer declines the mortgage\nflow\t7\t15\tthe XOR gateway leads to another XOR gateway decision\nflow\t15\t16\tthe XOR gateway leads to the condition where the customer sends back the completed offer documents\nflow\t15\t20\tthe XOR gateway leads to another XOR gateway decision\nflow\t20\t21\tthe XOR gateway leads to the condition where all prerequisite documents are not provided\nflow\t20\t25\tthe XOR gateway leads to another XOR gateway decision\nflow\t25\t26\tthe XOR gateway leads to the condition where no answer is received after 2 weeks\nflow\t11\t13\tthe activity updated is performed before the activity archived\nflow\t13\t14\tthe activity archived is performed before the activity cancellation\nflow\t18\t23\tthe activity moved is performed before the activity generated\nflow\t27\t28\tthe activity updated is performed before the activity archive\nflow\t28\t29\tthe activity archive is performed before the activity cancellation\n\nactor performer\t1\t0\tthe activity sends is performed by The Customer Service Representative\nactor recipient\t1\t3\tthe result of the activity sends is received by the customer\nactor recipient\t23\t4\tthe result of the activity generated is received by the customer\nactor performer\t18\t19\tthe activity moved is performed by administration\n\nsame gateway\t7\t15\tthe XOR gateway decision points are part of the same decision process\nsame gateway\t15\t20\tthe XOR gateway decision points are part of the same decision process\nsame gateway\t20\t25\tthe XOR gateway decision points are part of the same decision process\n\nfurther specification\t23\t24\tthe activity generated is further specified by requesting outstanding documents"], "original_id": "doc-9.2"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Procedure\n\nLet's solve this task in 6 steps.\n\n1. Write a short list of facts about the process, then add a horizontal line (\"-----\")\n\n2. Detect all relations of type uses and list them in your answer.\n\n3. Detect all relations of type flow and list them in your answer.\n\n4. Detect all relations of type actor performer and actor recipient. In both cases focus on activities and find the actor, that is performing the activity, or is affected by its outcome respectively.\n\n5. Detect all relations of type same gateway and extract them. For this focus on XOR_Gateways and AND_Gateways.\n\n6. Detect all relations of type further specification and extract them. Focus on elements of type Activity and Further_Specification for this task.\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The MPON </actor> <activity id=3> requests </activity> <activity_data id=4> a device takeover bid </activity_data> of <actor id=5> the MPOO </actor> . <actor id=7> The MPOO </actor> <activity id=9> sends </activity> <activity_data id=10> a tender for the equipment takeover </activity_data> to <actor id=1> the MPON </actor> . <actor id=2> The MPON </actor> <activity id=11> places </activity> <activity_data id=12> an order </activity_data> at <actor id=8> the MPOO </actor> . <actor id=6> The MPOO </actor> <activity id=14> confirms </activity> <activity_data id=13> the order of the MPON </activity_data> and <activity id=15> sends </activity> <activity_data id=16> the master data </activity_data> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_persona.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1393, "output_tokens": 341, "total_costs": 0.02416, "answers": ["Facts about the process:\n- The MPON requests a device takeover bid of the MPOO.\n- The MPOO sends a tender for the equipment takeover to the MPON.\n- The MPON places an order at the MPOO.\n- The MPOO confirms the order of the MPON and sends the master data.\n\n-----\n\nuses\t3\t4\tthis activity_data mention is produced by the activity requests\nuses\t9\t10\tthis activity_data mention is produced by the activity sends\nuses\t11\t12\tthis activity_data mention is produced by the activity places\nuses\t14\t13\tthis activity_data mention is produced by the activity confirms\nuses\t15\t16\tthis activity_data mention is produced by the activity sends\n\nflow\t3\t9\tthe activity requests is performed before the activity sends\nflow\t9\t11\tthe activity sends is performed before the activity places\nflow\t11\t14\tthe activity places is performed before the activity confirms\nflow\t14\t15\tthe activity confirms is performed before the activity sends\n\nactor performer\t3\t0\tthe activity requests is performed by the MPON\nactor performer\t9\t7\tthe activity sends is performed by the MPOO\nactor performer\t11\t2\tthe activity places is performed by the MPON\nactor performer\t14\t6\tthe activity confirms is performed by the MPOO\nactor performer\t15\t6\tthe activity sends is performed by the MPOO\n\nactor recipient\t9\t1\tthe activity sends is received by the MPON\nactor recipient\t11\t8\tthe activity places is received by the MPOO\nactor recipient\t14\t2\tthe activity confirms is received by the MPON"], "original_id": "doc-10.5"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Procedure\n\nLet's solve this task in 6 steps.\n\n1. Write a short list of facts about the process, then add a horizontal line (\"-----\")\n\n2. Detect all relations of type uses and list them in your answer.\n\n3. Detect all relations of type flow and list them in your answer.\n\n4. Detect all relations of type actor performer and actor recipient. In both cases focus on activities and find the actor, that is performing the activity, or is affected by its outcome respectively.\n\n5. Detect all relations of type same gateway and extract them. For this focus on XOR_Gateways and AND_Gateways.\n\n6. Detect all relations of type further specification and extract them. Focus on elements of type Activity and Further_Specification for this task.\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The party </actor> <activity id=1> sends </activity> <activity_data id=2> a warrant possession request </activity_data> asking a warrant to be released . <actor id=3> The Client Service Back Office </actor> as part of the Small Claims Registry Operations <activity id=6> receives </activity> <activity_data id=7> the request </activity_data> and <activity id=8> retrieves </activity> <activity_data id=9> the SCT file </activity_data> . Then , <activity_data id=14> the SCT Warrant Possession </activity_data> is <activity id=15> forwarded </activity> to <actor id=16> Queensland Police </actor> . <activity_data id=11> The SCT physical file </activity_data> is <activity id=17> stored </activity> by <actor id=4> the Back Office </actor> <activity id=18> awaiting </activity> <activity_data id=19> a report </activity_data> <further_specification id=21> to be sent by the Police </further_specification> . When <activity_data id=20> the report </activity_data> is <activity id=22> received </activity> , <activity_data id=12> the respective SCT file </activity_data> is <activity id=23> retrieved </activity> . Then , <actor id=5> Back Office </actor> <activity id=24> attaches </activity> <activity_data id=25> the new SCT document </activity_data> , and <activity id=26> stores </activity> <activity_data id=13> the expanded SCT physical file </activity_data> . After that , <actor id=27> some other MC internal staff </actor> <activity id=28> receives </activity> <activity_data id=10> the physical SCT file </activity_data> ( out of scope ) .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_persona.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1580, "output_tokens": 568, "total_costs": 0.032839999999999994, "answers": ["Facts about the process:\n- The party sends a warrant possession request.\n- The Client Service Back Office receives the request and retrieves the SCT file.\n- The SCT Warrant Possession is forwarded to Queensland Police.\n- The SCT physical file is stored by the Back Office awaiting a report to be sent by the Police.\n- When the report is received, the respective SCT file is retrieved.\n- The Back Office attaches the new SCT document and stores the expanded SCT physical file.\n- Some other MC internal staff receives the physical SCT file (out of scope).\n\n-----\n\nuses\t1\t2\tthis activity_data mention is produced by the activity sends\nuses\t6\t7\tthis activity_data mention is produced by the activity receives\nuses\t8\t9\tthis activity_data mention is produced by the activity retrieves\nuses\t15\t14\tthis activity_data mention is produced by the activity forwarded\nuses\t17\t11\tthis activity_data mention is produced by the activity stored\nuses\t18\t19\tthis activity_data mention is produced by the activity awaiting\nuses\t22\t20\tthis activity_data mention is produced by the activity received\nuses\t23\t12\tthis activity_data mention is produced by the activity retrieved\nuses\t24\t25\tthis activity_data mention is produced by the activity attaches\nuses\t26\t13\tthis activity_data mention is produced by the activity stores\nuses\t28\t10\tthis activity_data mention is produced by the activity receives\n\nflow\t1\t6\tthe activity sends is followed by the activity receives\nflow\t6\t8\tthe activity receives is followed by the activity retrieves\nflow\t8\t15\tthe activity retrieves is followed by the activity forwarded\nflow\t15\t17\tthe activity forwarded is followed by the activity stored\nflow\t17\t18\tthe activity stored is followed by the activity awaiting\nflow\t18\t22\tthe activity awaiting is followed by the activity received\nflow\t22\t23\tthe activity received is followed by the activity retrieved\nflow\t23\t24\tthe activity retrieved is followed by the activity attaches\nflow\t24\t26\tthe activity attaches is followed by the activity stores\nflow\t26\t28\tthe activity stores is followed by the activity receives\n\nactor performer\t1\t0\tthe activity sends is performed by The party\nactor performer\t6\t3\tthe activity receives is performed by The Client Service Back Office\nactor performer\t15\t16\tthe activity forwarded is performed by Queensland Police\nactor performer\t17\t4\tthe activity stored is performed by the Back Office\nactor performer\t24\t5\tthe activity attaches is performed by Back Office\nactor performer\t28\t27\tthe activity receives is performed by some other MC internal staff\n\nactor recipient\t15\t16\tthe activity forwarded affects Queensland Police\n\nfurther specification\t18\t21\tthe activity awaiting is further specified by to be sent by the Police"], "original_id": "doc-3.1"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Procedure\n\nLet's solve this task in 6 steps.\n\n1. Write a short list of facts about the process, then add a horizontal line (\"-----\")\n\n2. Detect all relations of type uses and list them in your answer.\n\n3. Detect all relations of type flow and list them in your answer.\n\n4. Detect all relations of type actor performer and actor recipient. In both cases focus on activities and find the actor, that is performing the activity, or is affected by its outcome respectively.\n\n5. Detect all relations of type same gateway and extract them. For this focus on XOR_Gateways and AND_Gateways.\n\n6. Detect all relations of type further specification and extract them. Focus on elements of type Activity and Further_Specification for this task.\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nThe process is triggered by the <activity id=0> demand </activity> of <actor id=1> a functional department </actor> <activity_data id=2> to fill a post </activity_data> . <activity_data id=3> The post </activity_data> is <activity id=5> advertised </activity> , <actor id=6> applicants </actor> <activity id=7> apply </activity> , <activity_data id=8> the applications </activity_data> are <activity id=9> checked </activity> and <activity_data id=4> the post </activity_data> is <activity id=10> filled </activity> . The process finishes when the post was filled , precisely through the conclusion of a contract of employment .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_persona.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1331, "output_tokens": 319, "total_costs": 0.02288, "answers": ["- The process starts with a demand from a functional department to fill a post.\n- The post is advertised.\n- Applicants apply and their applications are checked.\n- The post is filled through the conclusion of a contract of employment.\n- The process ends when the post is filled.\n\n-----\n\nuses\t0\t2\tthe activity_data to fill a post is produced by the activity demand\nuses\t5\t3\tthe activity_data The post is produced by the activity advertised\nuses\t7\t8\tthe activity_data the applications is produced by the activity apply\nuses\t9\t8\tthe activity_data the applications is checked by the activity checked\nuses\t10\t4\tthe activity_data the post is filled by the activity filled\n\nflow\t0\t5\tthe activity demand is followed by the activity advertised\nflow\t5\t7\tthe activity advertised is followed by the activity apply\nflow\t7\t9\tthe activity apply is followed by the activity checked\nflow\t9\t10\tthe activity checked is followed by the activity filled\n\nactor performer\t0\t1\tthe activity demand is performed by a functional department\nactor performer\t7\t6\tthe activity apply is performed by applicants\n\nExplanation for relations:\n- **uses**: Each \"uses\" relation is identified based on the activity directly involving or producing the mentioned activity_data.\n- **flow**: The flow of activities is determined by their sequential order in the process description, indicating the progression from one activity to the next.\n- **actor performer**: The \"actor performer\" relations are identified by the actors who actively perform the activities, as explicitly mentioned in the text."], "original_id": "doc-8.1"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Procedure\n\nLet's solve this task in 6 steps.\n\n1. Write a short list of facts about the process, then add a horizontal line (\"-----\")\n\n2. Detect all relations of type uses and list them in your answer.\n\n3. Detect all relations of type flow and list them in your answer.\n\n4. Detect all relations of type actor performer and actor recipient. In both cases focus on activities and find the actor, that is performing the activity, or is affected by its outcome respectively.\n\n5. Detect all relations of type same gateway and extract them. For this focus on XOR_Gateways and AND_Gateways.\n\n6. Detect all relations of type further specification and extract them. Focus on elements of type Activity and Further_Specification for this task.\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The SP / PU / GO </actor> <activity id=3> request </activity> <activity_data id=4> changes </activity_data> to <actor id=5> the MPO </actor> <xor_gateway id=12> or </xor_gateway> <actor id=7> the MPO </actor> himself <activity id=13> causes </activity> <activity_data id=14> a change </activity_data> . <actor id=11> The MPO </actor> <activity id=15> reviews </activity> <activity_data id=16> the change request </activity_data> . <actor id=10> The MPO </actor> <activity id=19> rejects </activity> <activity_data id=17> the change of the measuring point by the SP / PU / GO </activity_data> <xor_gateway id=20> or </xor_gateway> <actor id=6> the MPO </actor> <activity id=21> confirmes </activity> <activity_data id=18> the request of the SP / PU / GO </activity_data> . <actor id=9> The MPO </actor> <activity id=22> performs </activity> <activity_data id=23> the measuring point change </activity_data> . <actor id=8> The MPO </actor> <activity id=24> reports </activity> <activity_data id=25> the implementation </activity_data> to <actor id=2> the SP / PU / GO </actor> <xor_gateway id=26> or </xor_gateway> <activity id=27> notifies </activity> <actor id=1> the SP / PU / GO </actor> <activity_data id=28> about the failure of the changes </activity_data> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_persona.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1553, "output_tokens": 526, "total_costs": 0.03131, "answers": ["Facts about the process:\n- The SP / PU / GO requests changes to the MPO or the MPO himself causes a change.\n- The MPO reviews the change request.\n- The MPO rejects the change of the measuring point by the SP / PU / GO or confirms the request of the SP / PU / GO.\n- The MPO performs the measuring point change.\n- The MPO reports the implementation to the SP / PU / GO or notifies the SP / PU / GO about the failure of the changes.\n\n-----\n\nuses\t3\t4\tthis activity_data mention is produced by the activity request\nuses\t13\t14\tthis activity_data mention is produced by the activity causes\nuses\t15\t16\tthis activity_data mention is produced by the activity reviews\nuses\t19\t17\tthis activity_data mention is produced by the activity rejects\nuses\t21\t18\tthis activity_data mention is produced by the activity confirmes\nuses\t22\t23\tthis activity_data mention is produced by the activity performs\nuses\t24\t25\tthis activity_data mention is produced by the activity reports\nuses\t27\t28\tthis activity_data mention is produced by the activity notifies\n\nflow\t3\t13\tthe activity request is followed by the activity causes\nflow\t13\t15\tthe activity causes is followed by the activity reviews\nflow\t15\t19\tthe activity reviews is followed by the activity rejects\nflow\t19\t21\tthe activity rejects is followed by the activity confirmes through an XOR gateway\nflow\t21\t22\tthe activity confirmes is followed by the activity performs\nflow\t22\t24\tthe activity performs is followed by the activity reports\nflow\t24\t27\tthe activity reports is followed by the activity notifies through an XOR gateway\n\nactor performer\t3\t0\tthe activity request is performed by The SP / PU / GO\nactor performer\t13\t7\tthe activity causes is performed by the MPO\nactor performer\t15\t11\tthe activity reviews is performed by The MPO\nactor performer\t19\t10\tthe activity rejects is performed by The MPO\nactor performer\t21\t6\tthe activity confirmes is performed by the MPO\nactor performer\t22\t9\tthe activity performs is performed by The MPO\nactor performer\t24\t8\tthe activity reports is performed by The MPO\nactor performer\t27\t1\tthe activity notifies is performed by the SP / PU / GO\n\nactor recipient\t3\t5\tthe result of the activity request is received by the MPO\nactor recipient\t24\t2\tthe result of the activity reports is received by the SP / PU / GO"], "original_id": "doc-10.9"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Procedure\n\nLet's solve this task in 6 steps.\n\n1. Write a short list of facts about the process, then add a horizontal line (\"-----\")\n\n2. Detect all relations of type uses and list them in your answer.\n\n3. Detect all relations of type flow and list them in your answer.\n\n4. Detect all relations of type actor performer and actor recipient. In both cases focus on activities and find the actor, that is performing the activity, or is affected by its outcome respectively.\n\n5. Detect all relations of type same gateway and extract them. For this focus on XOR_Gateways and AND_Gateways.\n\n6. Detect all relations of type further specification and extract them. Focus on elements of type Activity and Further_Specification for this task.\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<activity_data id=0> At </activity_data> the beginning <actor id=133> the customer </actor> <activity id=1> perceives </activity> that <activity_data id=2> her subscribed service </activity_data> <further_specification id=3> has degraded </further_specification> . <activity_data id=4> A list with all the problem parameters </activity_data> is then <activity id=5> sent </activity> to <actor id=6> the Customer Service department of TELECO </actor> . At the customer service <actor id=11> an employee </actor> <activity id=12> enters </activity> ( based on the received data ) <activity_data id=13> a problem report </activity_data> into system T . . Then <activity_data id=14> the problem report </activity_data> is <activity id=15> compared </activity> <further_specification id=16> to the customer SLA </further_specification> to <activity id=17> identify </activity> what the extent and <activity_data id=18> the details of the service degradation </activity_data> are . Based on this , <activity_data id=19> the necessary counter measures </activity_data> are <activity id=20> determined </activity> including their respective priorities . <actor id=21> An electronic service </actor> then <activity id=22> determines </activity> <activity_data id=23> the significance of the customer </activity_data> based on information that has been collected during the history of the contractual relationship . <xor_gateway id=24> In case </xor_gateway> <condition_specification id=25> the customer is premium </condition_specification> , the process will link to an extra <activity_data id=51> problem </activity_data> <activity id=26> fix </activity> process ( this process will not be detailed here ) . <xor_gateway id=27> In case </xor_gateway> <condition_specification id=28> the customer is of certain significance </condition_specification> which would affect the counter measures previously decided upon , the process goes back to re-prioritize these measures <xor_gateway id=29> otherwise </xor_gateway> the process continues . Taking together the information ( i.e . contract commitment data + prioritized actions ) <activity_data id=30> a detailed problem report </activity_data> is <activity id=34> created </activity> . <activity_data id=31> The detailed problem report </activity_data> is then <activity id=35> sent </activity> to <actor id=36> Service Management </actor> . <actor id=43> Service Management </actor> <activity id=47> deals </activity> on a first level with <activity_data id=48> violations of quality in services </activity_data> that are provided to customers . After receiving the detailed problem report , <actor id=44> Service management </actor> <activity id=49> investigates </activity> whether <activity_data id=50> the problem </activity_data> is analyzable at the level of their department or whether the problem may be located at Resource Provisioning . <xor_gateway id=52> In case </xor_gateway> <condition_specification id=53> Service Management assesses the problem to be not analyzable by themselves </condition_specification> , <activity_data id=33> the detailed problem report </activity_data> is <activity id=54> sent out </activity> to <actor id=55> Resource Provisioning </actor> . <xor_gateway id=60> If </xor_gateway> <condition_specification id=61> Service Management is sure they can analyze it </condition_specification> , <actor id=46> they </actor> <activity id=62> perform </activity> <activity_data id=63> the analysis </activity_data> and based on the outcome <actor id=45> they </actor> <activity id=64> create </activity> <activity_data id=65> a trouble report </activity_data> that indicates the type of problem . After <actor id=59> Resource Provisioning </actor> <activity id=68> receives </activity> <activity_data id=32> the detailed problem report </activity_data> , <activity_data id=69> it </activity_data> is <activity id=70> checked </activity> whether there are any possible problems . <xor_gateway id=71> If </xor_gateway> <condition_specification id=72> no problems are detected </condition_specification> , <activity_data id=73> a notification </activity_data> about the normal service execution is <activity id=74> created </activity> . <xor_gateway id=75> If </xor_gateway> <condition_specification id=76> a problem is detected </condition_specification> <activity_data id=77> this </activity_data> will be <activity id=78> analyzed </activity> by <actor id=58> Resource Provisioning </actor> and <activity_data id=66> a trouble report </activity_data> is <activity id=79> created </activity> . Either <activity_data id=67> trouble report </activity_data> or <activity_data id=80> the normal execution notification </activity_data> will be <activity id=81> included </activity> in a status report and <activity id=82> sent back </activity> to <actor id=42> Service Management </actor> . <actor id=41> Service Management </actor> then <activity id=83> prepares </activity> <activity_data id=84> the final status report </activity_data> based on the received information . Subsequently it has to be determined what counter measures should be taken depending on the information in the final status report . Three alternative process paths may be taken . <xor_gateway id=85> For the case </xor_gateway> that <condition_specification id=86> no problem was detected at all </condition_specification> , <activity_data id=87> the actual service performance </activity_data> is <activity id=88> sent back </activity> to <actor id=7> the Customer Service </actor> . <xor_gateway id=89> For the case </xor_gateway> that <condition_specification id=90> minor corrective actions are required </condition_specification> , <actor id=40> Service Management </actor> will <activity id=91> undertake </activity> <activity_data id=92> corrective actions </activity_data> by themselves . Subsequently , <activity_data id=93> the problem resolution report </activity_data> is <activity id=96> created </activity> and then <activity id=97> sent out </activity> to <actor id=10> Customer Service </actor> . After sending , this process path of Service Management ends . <xor_gateway id=98> For the case </xor_gateway> that <condition_specification id=99> automatic resource restoration from Resource Provisioning is required </condition_specification> , <actor id=39> Service Management </actor> must <activity id=100> create </activity> <activity_data id=101> a request </activity_data> for automatic resource restoration . <activity_data id=103> This message </activity_data> is then <activity id=104> sent </activity> to <actor id=57> Resource Provisioning </actor> . Resource Provisioning has been on-hold and waiting for a restoration request but this must happen within 2 days after the status report was sent out , otherwise Resource Provisioning terminates the process . After <activity_data id=102> the restoration request </activity_data> is <activity id=105> received </activity> , <activity_data id=106> all possible errors </activity_data> are <activity id=107> tracked </activity> . Based on the tracked errors , all necessary <activity_data id=108> corrective actions </activity_data> are <activity id=109> undertaken </activity> by <actor id=56> Resource Provisioning </actor> . Then <activity_data id=110> a trouble-shooting report </activity_data> is <activity id=113> created </activity> . <activity_data id=111> This report </activity_data> is <activity id=114> sent out </activity> to <actor id=38> Service Management </actor> ; then the process ends . <activity_data id=112> The trouble-shooting report </activity_data> is <activity id=115> received </activity> by <actor id=37> Service Management </actor> and this information goes then into the <activity id=116> creation </activity> of <activity_data id=95> the problem resolution report </activity_data> just as described for ii ) . <actor id=9> Customer Service </actor> either <activity id=117> receives </activity> <activity_data id=118> the actual service performance </activity_data> ( if there was no problem ) or <activity_data id=94> the problem resolution report </activity_data> . Then , <and_gateway id=119> two concurrent activities are triggered </and_gateway> , i.e . i ) <activity_data id=128> a report </activity_data> is <activity id=120> created </activity> for the customer which details the current service performance and the resolution of the problem , and ii ) <activity_data id=121> an SLA violation rebate </activity_data> is <activity id=122> reported </activity> to <actor id=123> Billing & Collections </actor> <actor id=124> who </actor> will <activity id=125> adjust </activity> <activity_data id=126> the billing </activity_data> . <activity_data id=127> The report </activity_data> for the customer is <activity id=130> sent out </activity> to <actor id=132> her </actor> . After all three activities are completed the process ends within Customer Service . After <actor id=131> the customer </actor> then <activity id=134> receives </activity> <activity_data id=129> the report </activity_data> about service performance and problem resolution from <actor id=8> Customer Service </actor> , the process flow at the customer also ends .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_persona.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 3344, "output_tokens": 3015, "total_costs": 0.12389, "answers": ["-----\n\n### uses Relations\n\nuses\t1\t2\tthe activity perceives uses the activity_data her subscribed service\nuses\t5\t4\tthe activity sent uses the activity_data a list with all the problem parameters\nuses\t12\t13\tthe activity enters uses the activity_data a problem report\nuses\t15\t14\tthe activity compared uses the activity_data the problem report\nuses\t15\t16\tthe activity compared uses the further_specification to the customer SLA\nuses\t17\t18\tthe activity identify uses the activity_data the details of the service degradation\nuses\t20\t19\tthe activity determined uses the activity_data the necessary counter measures\nuses\t22\t23\tthe activity determines uses the activity_data the significance of the customer\nuses\t34\t30\tthe activity created uses the activity_data a detailed problem report\nuses\t35\t31\tthe activity sent uses the activity_data The detailed problem report\nuses\t47\t48\tthe activity deals uses the activity_data violations of quality in services\nuses\t49\t50\tthe activity investigates uses the activity_data the problem\nuses\t54\t33\tthe activity sent out uses the activity_data the detailed problem report\nuses\t62\t63\tthe activity perform uses the activity_data the analysis\nuses\t64\t65\tthe activity create uses the activity_data a trouble report\nuses\t70\t32\tthe activity checked uses the activity_data the detailed problem report\nuses\t74\t73\tthe activity created uses the activity_data a notification about the normal service execution\nuses\t78\t77\tthe activity analyzed uses the activity_data this\nuses\t79\t66\tthe activity created uses the activity_data a trouble report\nuses\t81\t67\tthe activity included uses the activity_data trouble report\nuses\t81\t80\tthe activity included uses the activity_data the normal execution notification\nuses\t83\t84\tthe activity prepares uses the activity_data the final status report\nuses\t88\t87\tthe activity sent back uses the activity_data the actual service performance\nuses\t91\t92\tthe activity undertake uses the activity_data corrective actions\nuses\t96\t93\tthe activity created uses the activity_data the problem resolution report\nuses\t97\t93\tthe activity sent out uses the activity_data the problem resolution report\nuses\t100\t101\tthe activity create uses the activity_data a request for automatic resource restoration\nuses\t104\t103\tthe activity sent uses the activity_data This message\nuses\t105\t102\tthe activity received uses the activity_data the restoration request\nuses\t107\t106\tthe activity tracked uses the activity_data all possible errors\nuses\t109\t108\tthe activity undertaken uses the activity_data corrective actions\nuses\t113\t110\tthe activity created uses the activity_data a trouble-shooting report\nuses\t114\t111\tthe activity sent out uses the activity_data This report\nuses\t115\t112\tthe activity received uses the activity_data The trouble-shooting report\nuses\t116\t95\tthe activity creation uses the activity_data the problem resolution report\nuses\t117\t118\tthe activity receives uses the activity_data the actual service performance\nuses\t117\t94\tthe activity receives uses the activity_data the problem resolution report\nuses\t120\t128\tthe activity created uses the activity_data a report\nuses\t122\t121\tthe activity reported uses the activity_data an SLA violation rebate\nuses\t125\t126\tthe activity adjust uses the activity_data the billing\nuses\t130\t127\tthe activity sent out uses the activity_data The report\nuses\t134\t129\tthe activity receives uses the activity_data the report\n\n### flow Relations\n\nflow\t1\t5\tperceives flows to sent as the process describes a sequence of actions\nflow\t5\t12\tsent flows to enters as the process describes a sequence of actions\nflow\t12\t15\tenters flows to compared as the process describes a sequence of actions\nflow\t15\t17\tcompared flows to identify as the process describes a sequence of actions\nflow\t17\t20\tidentify flows to determined as the process describes a sequence of actions\nflow\t20\t22\tdetermined flows to determines as the process describes a sequence of actions\nflow\t22\t24\tdetermines flows to In case as the process describes a sequence of actions\nflow\t24\t25\tIn case flows to the customer is premium as the process describes a sequence of actions\nflow\t25\t26\tthe customer is premium flows to fix as the process describes a sequence of actions\nflow\t26\t27\tfix flows to In case as the process describes a sequence of actions\nflow\t27\t28\tIn case flows to the customer is of certain significance as the process describes a sequence of actions\nflow\t28\t29\tthe customer is of certain significance flows to otherwise as the process describes a sequence of actions\nflow\t29\t34\totherwise flows to created as the process describes a sequence of actions\nflow\t34\t35\tcreated flows to sent as the process describes a sequence of actions\nflow\t35\t47\tsent flows to deals as the process describes a sequence of actions\nflow\t47\t49\tdeals flows to investigates as the process describes a sequence of actions\nflow\t49\t52\tinvestigates flows to In case as the process describes a sequence of actions\nflow\t52\t53\tIn case flows to Service Management assesses the problem to be not analyzable by themselves as the process describes a sequence of actions\nflow\t53\t54\tService Management assesses the problem to be not analyzable by themselves flows to sent out as the process describes a sequence of actions\nflow\t54\t60\tsent out flows to If as the process describes a sequence of actions\nflow\t60\t61\tIf flows to Service Management is sure they can analyze it as the process describes a sequence of actions\nflow\t61\t62\tService Management is sure they can analyze it flows to perform as the process describes a sequence of actions\nflow\t62\t64\tperform flows to create as the process describes a sequence of actions\nflow\t64\t68\tcreate flows to receives as the process describes a sequence of actions\nflow\t68\t70\treceives flows to checked as the process describes a sequence of actions\nflow\t70\t71\tchecked flows to If as the process describes a sequence of actions\nflow\t71\t72\tIf flows to no problems are detected as the process describes a sequence of actions\nflow\t72\t74\tno problems are detected flows to created as the process describes a sequence of actions\nflow\t74\t75\tcreated flows to If as the process describes a sequence of actions\nflow\t75\t76\tIf flows to a problem is detected as the process describes a sequence of actions\nflow\t76\t78\ta problem is detected flows to analyzed as the process describes a sequence of actions\nflow\t78\t79\tanalyzed flows to created as the process describes a sequence of actions\nflow\t79\t81\tcreated flows to included as the process describes a sequence of actions\nflow\t81\t82\tincluded flows to sent back as the process describes a sequence of actions\nflow\t82\t83\tsent back flows to prepares as the process describes a sequence of actions\nflow\t83\t85\tprepares flows to For the case as the process describes a sequence of actions\nflow\t85\t86\tFor the case flows to no problem was detected at all as the process describes a sequence of actions\nflow\t86\t88\tno problem was detected at all flows to sent back as the process describes a sequence of actions\nflow\t88\t89\tsent back flows to For the case as the process describes a sequence of actions\nflow\t89\t90\tFor the case flows to minor corrective actions are required as the process describes a sequence of actions\nflow\t90\t91\tminor corrective actions are required flows to undertake as the process describes a sequence of actions\nflow\t91\t96\tundertake flows to created as the process describes a sequence of actions\nflow\t96\t97\tcreated flows to sent out as the process describes a sequence of actions\nflow\t97\t98\tsent out flows to For the case as the process describes a sequence of actions\nflow\t98\t99\tFor the case flows to automatic resource restoration from Resource Provisioning is required as the process describes a sequence of actions\nflow\t99\t100\tautomatic resource restoration from Resource Provisioning is required flows to create as the process describes a sequence of actions\nflow\t100\t104\tcreate flows to sent as the process describes a sequence of actions\nflow\t104\t105\tsent flows to received as the process describes a sequence of actions\nflow\t105\t107\treceived flows to tracked as the process describes a sequence of actions\nflow\t107\t109\ttracked flows to undertaken as the process describes a sequence of actions\nflow\t109\t113\tundertaken flows to created as the process describes a sequence of actions\nflow\t113\t114\tcreated flows to sent out as the process describes a sequence of actions\nflow\t114\t115\tsent out flows to received as the process describes a sequence of actions\nflow\t115\t116\treceived flows to creation as the process describes a sequence of actions\nflow\t116\t117\tcreation flows to receives as the process describes a sequence of actions\nflow\t117\t119\treceives flows to two concurrent activities are triggered as the process describes a sequence of actions\nflow\t119\t120\ttwo concurrent activities are triggered flows to created as the process describes a sequence of actions\nflow\t119\t122\ttwo concurrent activities are triggered flows to reported as the process describes a sequence of actions\nflow\t122\t125\treported flows to adjust as the process describes a sequence of actions\nflow\t125\t130\tadjust flows to sent out as the process describes a sequence of actions\nflow\t130\t134\tsent out flows to receives as the process describes a sequence of actions\n\n### actor performer Relations\n\nactor performer\t1\t133\tthe activity perceives is performed by the customer\nactor performer\t5\t6\tthe activity sent is performed by the Customer Service department of TELECO\nactor performer\t12\t11\tthe activity enters is performed by an employee\nactor performer\t15\t11\tthe activity compared is performed by an employee\nactor performer\t17\t11\tthe activity identify is performed by an employee\nactor performer\t20\t11\tthe activity determined is performed by an employee\nactor performer\t22\t21\tthe activity determines is performed by An electronic service\nactor performer\t26\t21\tthe activity fix is performed by An electronic service\nactor performer\t34\t21\tthe activity created is performed by An electronic service\nactor performer\t35\t21\tthe activity sent is performed by An electronic service\nactor performer\t47\t43\tthe activity deals is performed by Service Management\nactor performer\t49\t44\tthe activity investigates is performed by Service management\nactor performer\t54\t44\tthe activity sent out is performed by Service management\nactor performer\t62\t46\tthe activity perform is performed by they\nactor performer\t64\t45\tthe activity create is performed by they\nactor performer\t68\t59\tthe activity receives is performed by Resource Provisioning\nactor performer\t70\t59\tthe activity checked is performed by Resource Provisioning\nactor performer\t74\t59\tthe activity created is performed by Resource Provisioning\nactor performer\t78\t58\tthe activity analyzed is performed by Resource Provisioning\nactor performer\t79\t58\tthe activity created is performed by Resource Provisioning\nactor performer\t81\t58\tthe activity included is performed by Resource Provisioning\nactor performer\t82\t42\tthe activity sent back is performed by Service Management\nactor performer\t83\t41\tthe activity prepares is performed by Service Management\nactor performer\t88\t7\tthe activity sent back is performed by the Customer Service\nactor performer\t91\t40\tthe activity undertake is performed by Service Management\nactor performer\t96\t40\tthe activity created is performed by Service Management\nactor performer\t97\t40\tthe activity sent out is performed by Service Management\nactor performer\t100\t39\tthe activity create is performed by Service Management\nactor performer\t104\t39\tthe activity sent is performed by Service Management\nactor performer\t105\t57\tthe activity received is performed by Resource Provisioning\nactor performer\t107\t56\tthe activity tracked is performed by Resource Provisioning\nactor performer\t109\t56\tthe activity undertaken is performed by Resource Provisioning\nactor performer\t113\t56\tthe activity created is performed by Resource Provisioning\nactor performer\t114\t56\tthe activity sent out is performed by Resource Provisioning\nactor performer\t115\t37\tthe activity received is performed by Service Management\nactor performer\t116\t37\tthe activity creation is performed by Service Management\nactor performer\t117\t9\tthe activity receives is performed by Customer Service\nactor performer\t120\t9\tthe activity created is performed by Customer Service\nactor performer\t122\t123\tthe activity reported is performed by Billing & Collections\nactor performer\t125\t124\tthe activity adjust is performed by who\nactor performer\t130\t9\tthe activity sent out is performed by Customer Service\nactor performer\t134\t8\tthe activity receives is performed by Customer Service\n\n### actor recipient Relations\n\nactor recipient\t5\t11\tthe activity sent has the Customer Service department of TELECO as its recipient\nactor recipient\t35\t43\tthe activity sent has Service Management as its recipient\nactor recipient\t54\t55\tthe activity sent out has Resource Provisioning as its recipient\nactor recipient\t82\t42\tthe activity sent back has Service Management as its recipient\nactor recipient\t97\t10\tthe activity sent out has Customer Service as its recipient\nactor recipient\t104\t57\tthe activity sent has Resource Provisioning as its recipient\nactor recipient\t114\t38\tthe activity sent out has Service Management as its recipient\nactor recipient\t130\t132\tthe activity sent out has her as its recipient\n\n### same gateway Relations\n\nsame gateway\t24\t27\tIn case and In case describe the same decision point in the process execution\nsame gateway\t27\t29\tIn case and otherwise describe the same decision point in the process execution\nsame gateway\t52\t60\tIn case and If describe the same decision point in the process execution\nsame gateway\t71\t75\tIf and If describe the same decision point in the process execution\nsame gateway\t85\t89\tFor the case and For the case describe the same decision point in the process execution\nsame gateway\t89\t98\tFor the case and For the case describe the same decision point in the process execution\n\n### further specification Relations\n\nfurther specification\t1\t3\tthe activity perceives is further described by has degraded\nfurther specification\t15\t16\tthe activity compared is further described by to the customer SLA\nfurther specification\t78\t76\tthe activity analyzed is further described by a problem is detected"], "original_id": "doc-2.1"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Procedure\n\nLet's solve this task in 6 steps.\n\n1. Write a short list of facts about the process, then add a horizontal line (\"-----\")\n\n2. Detect all relations of type uses and list them in your answer.\n\n3. Detect all relations of type flow and list them in your answer.\n\n4. Detect all relations of type actor performer and actor recipient. In both cases focus on activities and find the actor, that is performing the activity, or is affected by its outcome respectively.\n\n5. Detect all relations of type same gateway and extract them. For this focus on XOR_Gateways and AND_Gateways.\n\n6. Detect all relations of type further specification and extract them. Focus on elements of type Activity and Further_Specification for this task.\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nThe process of Vacations Request starts when <actor id=0> any employee </actor> of the organization <activity id=2> submits </activity> <activity_data id=3> a vacation request </activity_data> . Once <activity_data id=4> the requirement </activity_data> is <activity id=5> registered </activity> , <activity_data id=6> the request </activity_data> is <activity id=9> received </activity> by <actor id=10> the immediate supervisor </actor> of the employee requesting the vacation . <actor id=11> The supervisor </actor> must <activity id=12> approve or reject </activity> <activity_data id=7> the request </activity_data> . <xor_gateway id=13> If </xor_gateway> <condition_specification id=14> the request is rejected </condition_specification> , <activity_data id=8> the application </activity_data> is <activity id=15> returned </activity> to <actor id=1> the applicant / employee </actor> who can review the rejection reasons . <xor_gateway id=16> If </xor_gateway> <condition_specification id=17> the request is approved </condition_specification> <activity_data id=18> a notification </activity_data> is <activity id=19> generated </activity> to <actor id=20> the Human Resources Representative </actor> , <actor id=21> who </actor> must <activity id=22> complete </activity> <activity_data id=23> the respective management procedures </activity_data> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_persona.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1506, "output_tokens": 489, "total_costs": 0.02973, "answers": ["Facts about the process:\n- The process starts with any employee submitting a vacation request.\n- The requirement is registered, and the request is received by the immediate supervisor.\n- The supervisor must approve or reject the request.\n- If the request is rejected, the application is returned to the applicant/employee.\n- If the request is approved, a notification is generated to the Human Resources Representative, who must complete the respective management procedures.\n\n-----\n\nuses\t2\t3\tthe activity submits uses the vacation request\nuses\t5\t4\tthe activity registered uses the requirement\nuses\t9\t6\tthe activity received uses the request\nuses\t12\t7\tthe activity approve or reject uses the request\nuses\t15\t8\tthe activity returned uses the application\nuses\t19\t18\tthe activity generated uses a notification\nuses\t22\t23\tthe activity complete uses the respective management procedures\n\nflow\t2\t5\tsubmits is followed by registered in the process\nflow\t5\t9\tregistered is followed by received in the process\nflow\t9\t12\treceived is followed by approve or reject in the process\nflow\t12\t13\tapprove or reject is followed by the first XOR gateway in the process\nflow\t13\t14\tthe first XOR gateway is followed by the condition if the request is rejected\nflow\t14\t15\tthe condition if the request is rejected is followed by returned in the process\nflow\t13\t16\tthe first XOR gateway is followed by the second XOR gateway indicating a new condition path\nflow\t16\t17\tthe second XOR gateway is followed by the condition if the request is approved\nflow\t17\t19\tthe condition if the request is approved is followed by generated in the process\nflow\t19\t22\tgenerated is followed by complete in the process\n\nactor performer\t2\t0\tthe activity submits is performed by any employee\nactor performer\t9\t10\tthe activity received is performed by the immediate supervisor\nactor performer\t12\t11\tthe activity approve or reject is performed by the supervisor\nactor performer\t15\t1\tthe activity returned is performed by the applicant / employee\nactor performer\t19\t20\tthe activity generated is performed by the Human Resources Representative\nactor performer\t22\t21\tthe activity complete is performed by who (Human Resources Representative)\n\nactor recipient\t15\t1\tthe activity returned affects the applicant / employee\nactor recipient\t19\t20\tthe activity generated affects the Human Resources Representative"], "original_id": "doc-5.2"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Procedure\n\nLet's solve this task in 6 steps.\n\n1. Write a short list of facts about the process, then add a horizontal line (\"-----\")\n\n2. Detect all relations of type uses and list them in your answer.\n\n3. Detect all relations of type flow and list them in your answer.\n\n4. Detect all relations of type actor performer and actor recipient. In both cases focus on activities and find the actor, that is performing the activity, or is affected by its outcome respectively.\n\n5. Detect all relations of type same gateway and extract them. For this focus on XOR_Gateways and AND_Gateways.\n\n6. Detect all relations of type further specification and extract them. Focus on elements of type Activity and Further_Specification for this task.\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nThe process starts when <actor id=0> a customer </actor> <activity id=2> submits </activity> <activity_data id=3> a claim </activity_data> <further_specification id=7> by sending in relevant documentation </further_specification> . <actor id=8> The Notification department </actor> at the car insurer <activity id=9> checks </activity> <activity_data id=10> the documents </activity_data> <further_specification id=11> upon completeness </further_specification> and <activity id=12> registers </activity> <activity_data id=6> the claim </activity_data> . Then , <actor id=13> the Handling department </actor> <activity id=14> picks up </activity> <activity_data id=5> the claim </activity_data> and <activity id=15> checks </activity> <activity_data id=16> the insurance </activity_data> . Then , <activity_data id=17> an assessment </activity_data> is <activity id=18> performed </activity> . <xor_gateway id=19> If </xor_gateway> <condition_specification id=20> the assessment is positive </condition_specification> , <actor id=21> a garage </actor> is <activity id=22> phoned </activity> <further_specification id=23> to authorise the repairs </further_specification> and <activity_data id=24> the payment </activity_data> is <activity id=25> scheduled </activity> ( in this order ) . <xor_gateway id=26> Otherwise </xor_gateway> , <activity_data id=4> the claim </activity_data> is <activity id=27> rejected </activity> . In any case ( whether the outcome is positive or negative ) , <activity_data id=28> a letter </activity_data> is <activity id=29> sent </activity> to <actor id=1> the customer </actor> and the process is considered to be complete .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_persona.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1601, "output_tokens": 703, "total_costs": 0.037099999999999994, "answers": ["Facts about the process:\n- A customer submits a claim with relevant documentation.\n- The Notification department checks the documents for completeness and registers the claim.\n- The Handling department picks up the claim and checks the insurance.\n- An assessment is performed.\n- If the assessment is positive, a garage is phoned to authorise the repairs, and the payment is scheduled.\n- Otherwise, the claim is rejected.\n- In any case, a letter is sent to the customer, and the process is completed.\n\n-----\n\nactor performer\t2\t0\tthe activity submits is performed by a customer\nactor performer\t9\t8\tthe activity checks is performed by The Notification department\nactor performer\t12\t8\tthe activity registers is performed by The Notification department\nactor performer\t14\t13\tthe activity picks up is performed by the Handling department\nactor performer\t15\t13\tthe activity checks is performed by the Handling department\nactor performer\t18\t13\tthe activity performed is performed by the Handling department\nactor performer\t22\t21\tthe activity phoned is performed by a garage\nactor performer\t25\t21\tthe activity scheduled is performed by a garage\nactor performer\t27\t13\tthe activity rejected is performed by the Handling department\nactor performer\t29\t1\tthe activity sent is performed by the customer\n\nuses\t2\t3\tthis activity_data mention is produced by the activity submits\nuses\t9\t10\tthis activity_data mention is produced by the activity checks\nuses\t12\t6\tthis activity_data mention is produced by the activity registers\nuses\t14\t5\tthis activity_data mention is produced by the activity picks up\nuses\t15\t16\tthis activity_data mention is produced by the activity checks\nuses\t18\t17\tthis activity_data mention is produced by the activity performed\nuses\t22\t24\tthis activity_data mention is produced by the activity phoned\nuses\t25\t24\tthis activity_data mention is produced by the activity scheduled\nuses\t27\t4\tthis activity_data mention is produced by the activity rejected\nuses\t29\t28\tthis activity_data mention is produced by the activity sent\n\nflow\t2\t9\tsubmits is followed by checks in the process\nflow\t9\t12\tchecks is followed by registers in the process\nflow\t12\t14\tregisters is followed by picks up in the process\nflow\t14\t15\tpicks up is followed by checks in the process\nflow\t15\t18\tchecks is followed by performed in the process\nflow\t18\t19\tperformed is followed by If in the process\nflow\t19\t20\tIf is followed by the condition the assessment is positive\nflow\t20\t22\tthe positive assessment leads to phoned\nflow\t22\t25\tphoned is followed by scheduled in the process\nflow\t19\t26\tIf is followed by Otherwise in the process\nflow\t26\t27\tOtherwise leads to rejected\nflow\t27\t29\trejected is followed by sent in the process\nflow\t22\t27\tphoned and scheduled are alternative paths leading to rejected\nflow\t25\t29\tscheduled is followed by sent in the process\n\nsame gateway\t19\t26\tIf and Otherwise describe the same decision point in the process\n\nfurther specification\t2\t7\tsubmits is further specified by by sending in relevant documentation\nfurther specification\t9\t11\tchecks is further specified by upon completeness\nfurther specification\t22\t23\tphoned is further specified by to authorise the repairs"], "original_id": "doc-3.8"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Procedure\n\nLet's solve this task in 6 steps.\n\n1. Write a short list of facts about the process, then add a horizontal line (\"-----\")\n\n2. Detect all relations of type uses and list them in your answer.\n\n3. Detect all relations of type flow and list them in your answer.\n\n4. Detect all relations of type actor performer and actor recipient. In both cases focus on activities and find the actor, that is performing the activity, or is affected by its outcome respectively.\n\n5. Detect all relations of type same gateway and extract them. For this focus on XOR_Gateways and AND_Gateways.\n\n6. Detect all relations of type further specification and extract them. Focus on elements of type Activity and Further_Specification for this task.\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The EC </actor> <activity id=1> tells </activity> <actor id=2> the INQ </actor> <activity_data id=4> about the change of his master data </activity_data> . <actor id=3> The INQ </actor> <activity id=5> notifies </activity> <actor id=6> the IP </actor> of <activity_data id=10> the change </activity_data> . <actor id=8> The IP </actor> <activity id=13> checks </activity> <further_specification id=14> whether the master data can be changed at the desired time </further_specification> . <actor id=7> The IP </actor> <activity id=15> confirmes </activity> <activity_data id=11> the changes of the INQ </activity_data> <xor_gateway id=16> or </xor_gateway> <actor id=9> the IP </actor> <activity id=17> rejectes </activity> <activity_data id=12> the changes of the INQ </activity_data> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_persona.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1410, "output_tokens": 360, "total_costs": 0.0249, "answers": ["Facts about the process:\n- The EC tells the INQ about the change of his master data.\n- The INQ notifies the IP of the change.\n- The IP checks whether the master data can be changed at the desired time.\n- The IP confirms or rejects the changes of the INQ.\n\n-----\n\nactor performer\t1\t0\tThe activity tells is performed by the EC\nactor recipient\t1\t2\tThe activity tells affects the INQ as the recipient of the information\nuses\t1\t4\tThe activity tells uses the information about the change of his master data\nactor performer\t5\t3\tThe activity notifies is performed by the INQ\nactor recipient\t5\t6\tThe activity notifies affects the IP as the recipient of the notification\nuses\t5\t10\tThe activity notifies uses the information about the change\nactor performer\t13\t8\tThe activity checks is performed by the IP\nfurther specification\t13\t14\tThe activity checks is further specified by whether the master data can be changed at the desired time\nactor performer\t15\t7\tThe activity confirms is performed by the IP\nuses\t15\t11\tThe activity confirms uses the information about the changes of the INQ\nactor performer\t17\t9\tThe activity rejects is performed by the IP\nuses\t17\t12\tThe activity rejects uses the information about the changes of the INQ\nflow\t1\t5\tThe activity tells by the EC is followed by the activity notifies by the INQ\nflow\t5\t13\tThe activity notifies by the INQ is followed by the activity checks by the IP\nflow\t13\t15\tThe activity checks by the IP is followed by the activity confirms by the IP\nflow\t13\t17\tThe activity checks by the IP is followed by the activity rejects by the IP"], "original_id": "doc-10.12"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Procedure\n\nLet's solve this task in 6 steps.\n\n1. Write a short list of facts about the process, then add a horizontal line (\"-----\")\n\n2. Detect all relations of type uses and list them in your answer.\n\n3. Detect all relations of type flow and list them in your answer.\n\n4. Detect all relations of type actor performer and actor recipient. In both cases focus on activities and find the actor, that is performing the activity, or is affected by its outcome respectively.\n\n5. Detect all relations of type same gateway and extract them. For this focus on XOR_Gateways and AND_Gateways.\n\n6. Detect all relations of type further specification and extract them. Focus on elements of type Activity and Further_Specification for this task.\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The GO </actor> <activity id=6> requests </activity> <activity_data id=7> the measurements </activity_data> to <actor id=8> the MSP </actor> . <actor id=11> The MSP </actor> <activity id=15> checks </activity> <activity_data id=16> the received request </activity_data> . <actor id=10> The MSP </actor> <activity id=18> denies </activity> <activity_data id=17> the request of the GO </activity_data> <xor_gateway id=19> or </xor_gateway> <actor id=14> the MSP </actor> <activity id=20> performs </activity> <activity_data id=21> the measurement </activity_data> . <actor id=9> The MSP </actor> <activity id=22> informs </activity> <actor id=5> the GO </actor> <activity_data id=23> about the failure of the reading </activity_data> <xor_gateway id=24> or </xor_gateway> <actor id=13> the MSP </actor> <activity id=25> transmits </activity> <activity_data id=26> the measured values </activity_data> to <actor id=4> the GO </actor> . <actor id=3> The GO </actor> <activity id=30> processes </activity> <activity_data id=27> the measured values </activity_data> . <actor id=2> The GO </actor> <activity id=31> sends </activity> <activity_data id=28> the changed values </activity_data> to <actor id=12> the MSP </actor> . <actor id=1> The GO </actor> <activity id=32> transmit </activity> <activity_data id=29> the readings </activity_data> to <actor id=33> the SP </actor> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_persona.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1579, "output_tokens": 619, "total_costs": 0.03436, "answers": ["Facts about the process:\n- The GO requests the measurements to the MSP.\n- The MSP checks the received request.\n- The MSP either denies the request of the GO or performs the measurement.\n- The MSP informs the GO about the failure of the reading or transmits the measured values to the GO.\n- The GO processes the measured values.\n- The GO sends the changed values to the MSP.\n- The GO transmits the readings to the SP.\n\n-----\n\nuses\t6\t7\tthis activity_data mention is produced by the activity requests\nuses\t15\t16\tthis activity_data mention is produced by the activity checks\nuses\t18\t17\tthis activity_data mention is produced by the activity denies\nuses\t20\t21\tthis activity_data mention is produced by the activity performs\nuses\t22\t23\tthis activity_data mention is produced by the activity informs\nuses\t25\t26\tthis activity_data mention is produced by the activity transmits\nuses\t30\t27\tthis activity_data mention is produced by the activity processes\nuses\t31\t28\tthis activity_data mention is produced by the activity sends\nuses\t32\t29\tthis activity_data mention is produced by the activity transmit\n\nflow\t6\t15\tthe activity requests is followed by the activity checks\nflow\t15\t18\tthe activity checks is followed by the activity denies which is one of the options after the check\nflow\t18\t19\tthe activity denies is directly followed by an xor_gateway indicating a decision point\nflow\t19\t20\tthe xor_gateway precedes the activity performs as one of the decision paths\nflow\t20\t22\tthe activity performs is followed by the activity informs\nflow\t22\t24\tthe activity informs is directly followed by an xor_gateway indicating another decision point\nflow\t24\t25\tthe xor_gateway precedes the activity transmits as one of the decision paths\nflow\t25\t30\tthe activity transmits is followed by the activity processes\nflow\t30\t31\tthe activity processes is followed by the activity sends\nflow\t31\t32\tthe activity sends is followed by the activity transmit\n\nactor performer\t6\t0\tthe activity requests is performed by The GO\nactor performer\t15\t11\tthe activity checks is performed by The MSP\nactor performer\t18\t10\tthe activity denies is performed by The MSP\nactor performer\t20\t14\tthe activity performs is performed by The MSP\nactor performer\t22\t9\tthe activity informs is performed by The MSP\nactor performer\t25\t13\tthe activity transmits is performed by The MSP\nactor performer\t30\t3\tthe activity processes is performed by The GO\nactor performer\t31\t2\tthe activity sends is performed by The GO\nactor performer\t32\t1\tthe activity transmit is performed by The GO\n\nactor recipient\t6\t8\tthe activity requests affects the MSP\nactor recipient\t22\t5\tthe activity informs affects the GO\nactor recipient\t25\t4\tthe activity transmits affects the GO\nactor recipient\t31\t12\tthe activity sends affects the MSP\nactor recipient\t32\t33\tthe activity transmit affects the SP"], "original_id": "doc-10.11"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Procedure\n\nLet's solve this task in 6 steps.\n\n1. Write a short list of facts about the process, then add a horizontal line (\"-----\")\n\n2. Detect all relations of type uses and list them in your answer.\n\n3. Detect all relations of type flow and list them in your answer.\n\n4. Detect all relations of type actor performer and actor recipient. In both cases focus on activities and find the actor, that is performing the activity, or is affected by its outcome respectively.\n\n5. Detect all relations of type same gateway and extract them. For this focus on XOR_Gateways and AND_Gateways.\n\n6. Detect all relations of type further specification and extract them. Focus on elements of type Activity and Further_Specification for this task.\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The fault detector </actor> <activity id=1> reports </activity> <activity_data id=2> a failure </activity_data> to <actor id=3> the MPO </actor> <xor_gateway id=13> or </xor_gateway> <actor id=4> MPO </actor> has a <activity id=14> suspicion </activity> <activity_data id=15> of their own fault </activity_data> . <actor id=11> The MPO </actor> shall <activity id=16> examine </activity> <activity_data id=17> the failure </activity_data> . <actor id=10> The MPO </actor> <activity id=21> rejects </activity> <activity_data id=19> the failure of the fault detector </activity_data> <xor_gateway id=22> or </xor_gateway> <actor id=5> the MPO </actor> <activity id=23> confirms </activity> <activity_data id=18> the failure of the fault detector </activity_data> . If the MPO confirms the failure of the fault detector , <actor id=12> he </actor> <activity id=24> informes </activity> <actor id=25> the GO </actor> and <actor id=27> the MSP </actor> . <actor id=9> The MPO </actor> <activity id=29> fixes </activity> <activity_data id=20> the fault at the measuring device </activity_data> . <actor id=8> The MPO </actor> <activity id=30> shares </activity> <activity_data id=31> the results of the repairs </activity_data> <further_specification id=32> carried out with the fault detector </further_specification> . <actor id=7> The MPO </actor> will <activity id=33> inform </activity> <actor id=26> the GO </actor> <activity_data id=34> about the resolution of the interference </activity_data> . <actor id=6> The MPO </actor> will <activity id=36> inform </activity> <actor id=28> the MSP </actor> <activity_data id=35> about the resolution of the interference </activity_data> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_persona.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1659, "output_tokens": 561, "total_costs": 0.033420000000000005, "answers": ["Facts about the process:\n- The fault detector reports a failure to the MPO or MPO has a suspicion of their own fault.\n- The MPO examines the failure.\n- The MPO rejects or confirms the failure of the fault detector.\n- If the MPO confirms the failure, he informs the GO and the MSP.\n- The MPO fixes the fault at the measuring device.\n- The MPO shares the results of the repairs, carried out with the fault detector.\n- The MPO will inform the GO about the resolution of the interference.\n- The MPO will inform the MSP about the resolution of the interference.\n\n-----\n\nactor performer\t1\t0\tthe activity reports is performed by the fault detector\nactor recipient\t1\t3\tthe result of the activity reports is received by the MPO\nuses\t1\t2\tthe activity reports uses the activity_data a failure\nactor performer\t14\t4\tthe activity suspicion is performed by the MPO\nuses\t14\t15\tthe activity suspicion uses the activity_data of their own fault\nactor performer\t16\t11\tthe activity examine is performed by the MPO\nuses\t16\t17\tthe activity examine uses the activity_data the failure\nactor performer\t21\t10\tthe activity rejects is performed by the MPO\nuses\t21\t19\tthe activity rejects uses the activity_data the failure of the fault detector\nactor performer\t23\t5\tthe activity confirms is performed by the MPO\nuses\t23\t18\tthe activity confirms uses the activity_data the failure of the fault detector\nactor performer\t24\t12\tthe activity informes is performed by he\nactor recipient\t24\t25\tthe result of the activity informes is received by the GO\nactor recipient\t24\t27\tthe result of the activity informes is received by the MSP\nactor performer\t29\t9\tthe activity fixes is performed by the MPO\nuses\t29\t20\tthe activity fixes uses the activity_data the fault at the measuring device\nactor performer\t30\t8\tthe activity shares is performed by the MPO\nuses\t30\t31\tthe activity shares uses the activity_data the results of the repairs\nactor performer\t33\t7\tthe activity inform is performed by the MPO\nactor recipient\t33\t26\tthe result of the activity inform is received by the GO\nuses\t33\t34\tthe activity inform uses the activity_data about the resolution of the interference\nactor performer\t36\t6\tthe activity inform is performed by the MPO\nactor recipient\t36\t28\tthe result of the activity inform is received by the MSP\nuses\t36\t35\tthe activity inform uses the activity_data about the resolution of the interference\nfurther_specification\t30\t32\tthe activity shares is further specified by carried out with the fault detector"], "original_id": "doc-10.10"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Procedure\n\nLet's solve this task in 6 steps.\n\n1. Write a short list of facts about the process, then add a horizontal line (\"-----\")\n\n2. Detect all relations of type uses and list them in your answer.\n\n3. Detect all relations of type flow and list them in your answer.\n\n4. Detect all relations of type actor performer and actor recipient. In both cases focus on activities and find the actor, that is performing the activity, or is affected by its outcome respectively.\n\n5. Detect all relations of type same gateway and extract them. For this focus on XOR_Gateways and AND_Gateways.\n\n6. Detect all relations of type further specification and extract them. Focus on elements of type Activity and Further_Specification for this task.\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> A customer </actor> <activity id=2> brings in </activity> <activity_data id=3> a defective computer </activity_data> and <actor id=5> the CRS </actor> <activity id=6> checks </activity> <activity_data id=7> the defect </activity_data> and <activity id=8> hands out </activity> <activity_data id=9> a repair cost calculation </activity_data> back . <xor_gateway id=10> If </xor_gateway> <condition_specification id=11> the customer decides that the costs are acceptable </condition_specification> , the process continues , <xor_gateway id=12> otherwise </xor_gateway> <actor id=1> she </actor> <activity id=13> takes </activity> <activity_data id=4> her computer </activity_data> <further_specification id=14> home unrepaired </further_specification> . The ongoing repair consists of two activities , which are executed , in an arbitrary order . The first activity is to <activity id=15> check </activity> and <activity id=16> repair </activity> <activity_data id=17> the hardware </activity_data> , <and_gateway id=18> whereas </and_gateway> the second activity <activity id=19> checks </activity> and <activity id=20> configures </activity> <activity_data id=21> the software </activity_data> . After each of these activities , <activity_data id=22> the proper system functionality </activity_data> is <activity id=23> tested </activity> . <xor_gateway id=24> If </xor_gateway> <condition_specification id=25> an error is detected </condition_specification> <activity_data id=26> another arbitrary repair activity </activity_data> is <activity id=27> executed </activity> , <xor_gateway id=28> otherwise </xor_gateway> the repair is finished .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_persona.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1587, "output_tokens": 758, "total_costs": 0.03861, "answers": ["Facts about the process:\n- A customer brings in a defective computer.\n- The CRS checks the defect and hands out a repair cost calculation.\n- If the customer decides the costs are acceptable, the process continues; otherwise, she takes her computer home unrepaired.\n- The ongoing repair consists of two activities executed in an arbitrary order: checking and repairing the hardware, and checking and configuring the software.\n- After each of these activities, the proper system functionality is tested.\n- If an error is detected, another arbitrary repair activity is executed; otherwise, the repair is finished.\n\n-----\n\nactor performer\t2\t0\tthe activity brings in is performed by A customer\nactor performer\t6\t5\tthe activity checks is performed by the CRS\nactor performer\t8\t5\tthe activity hands out is performed by the CRS\nactor performer\t13\t1\tthe activity takes is performed by she\nactor performer\t15\t5\tthe activity check is performed by the CRS\nactor performer\t16\t5\tthe activity repair is performed by the CRS\nactor performer\t19\t5\tthe activity checks is performed by the CRS\nactor performer\t20\t5\tthe activity configures is performed by the CRS\nactor performer\t23\t5\tthe activity tested is performed by the CRS\nactor performer\t27\t5\tthe activity executed is performed by the CRS\nuses\t2\t3\tthis activity_data mention is produced by the activity brings in\nuses\t6\t7\tthis activity_data mention is produced by the activity checks\nuses\t8\t9\tthis activity_data mention is produced by the activity hands out\nuses\t15\t17\tthis activity_data mention is produced by the activity check\nuses\t16\t17\tthis activity_data mention is produced by the activity repair\nuses\t19\t21\tthis activity_data mention is produced by the activity checks\nuses\t20\t21\tthis activity_data mention is produced by the activity configures\nuses\t23\t22\tthis activity_data mention is produced by the activity tested\nuses\t27\t26\tthis activity_data mention is produced by the activity executed\nflow\t2\t6\tthe activity brings in is followed by the activity checks\nflow\t6\t8\tthe activity checks is followed by the activity hands out\nflow\t8\t10\tthe activity hands out is followed by the xor_gateway If\nflow\t10\t11\tthe xor_gateway If is followed by the condition_specification the customer decides that the costs are acceptable\nflow\t11\t12\tthe condition_specification the customer decides that the costs are acceptable is followed by the xor_gateway otherwise\nflow\t12\t13\tthe xor_gateway otherwise is followed by the activity takes\nflow\t13\t15\tthe activity takes is followed by the activity check\nflow\t15\t16\tthe activity check is followed by the activity repair\nflow\t16\t18\tthe activity repair is followed by the and_gateway whereas\nflow\t18\t19\tthe and_gateway whereas is followed by the activity checks\nflow\t19\t20\tthe activity checks is followed by the activity configures\nflow\t20\t23\tthe activity configures is followed by the activity tested\nflow\t23\t24\tthe activity tested is followed by the xor_gateway If\nflow\t24\t25\tthe xor_gateway If is followed by the condition_specification an error is detected\nflow\t25\t27\tthe condition_specification an error is detected is followed by the activity executed\nflow\t27\t28\tthe activity executed is followed by the xor_gateway otherwise\nsame gateway\t10\t12\tboth mentions describe the same decision point in the process execution\nsame gateway\t24\t28\tboth mentions describe the same decision point in the process execution\nfurther specification\t13\t14\tthe further_specification home unrepaired describes how the activity takes has to be executed"], "original_id": "doc-1.2"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Procedure\n\nLet's solve this task in 6 steps.\n\n1. Write a short list of facts about the process, then add a horizontal line (\"-----\")\n\n2. Detect all relations of type uses and list them in your answer.\n\n3. Detect all relations of type flow and list them in your answer.\n\n4. Detect all relations of type actor performer and actor recipient. In both cases focus on activities and find the actor, that is performing the activity, or is affected by its outcome respectively.\n\n5. Detect all relations of type same gateway and extract them. For this focus on XOR_Gateways and AND_Gateways.\n\n6. Detect all relations of type further specification and extract them. Focus on elements of type Activity and Further_Specification for this task.\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nFirst , <actor id=0> the Manager </actor> <activity id=5> checks </activity> <activity_data id=6> the open leads </activity_data> . Afterwards , <actor id=1> he </actor> <activity id=7> selects </activity> <activity_data id=8> the top five ones </activity_data> . <actor id=3> He </actor> then <activity id=9> tells </activity> his <actor id=10> Sales Assistant </actor> <activity_data id=14> to call the contact person of the leads </activity_data> . <actor id=13> The Sales Assistant </actor> <activity id=15> calls </activity> <activity_data id=16> each customer </activity_data> . <xor_gateway id=17> If </xor_gateway> <condition_specification id=18> someone is interested </condition_specification> , <actor id=12> he </actor> <activity id=19> sends </activity> <activity_data id=20> a note </activity_data> to <actor id=2> the Manager </actor> . <actor id=4> The Manager </actor> then <activity id=21> processes </activity> <activity_data id=22> the lead </activity_data> . <xor_gateway id=23> Otherwise </xor_gateway> , <actor id=11> he </actor> <activity id=24> calls </activity> <activity_data id=25> the next customer </activity_data> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_persona.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1495, "output_tokens": 486, "total_costs": 0.02953, "answers": ["Facts about the process:\n- The Manager checks the open leads.\n- He selects the top five ones.\n- He tells his Sales Assistant to call the contact person of the leads.\n- The Sales Assistant calls each customer.\n- If someone is interested, a note is sent to the Manager.\n- The Manager processes the lead.\n- Otherwise, the next customer is called.\n\n-----\n\nuses\t5\t6\tthe activity checks uses the open leads\nuses\t7\t8\tthe activity selects uses the top five ones\nuses\t9\t14\tthe activity tells uses to call the contact person of the leads\nuses\t15\t16\tthe activity calls uses each customer\nuses\t19\t20\tthe activity sends uses a note\nuses\t21\t22\tthe activity processes uses the lead\nuses\t24\t25\tthe activity calls uses the next customer\n\nflow\t5\t7\tthe activity checks is followed by the activity selects\nflow\t7\t9\tthe activity selects is followed by the activity tells\nflow\t9\t15\tthe activity tells is followed by the activity calls\nflow\t15\t17\tthe activity calls is followed by the xor_gateway If\nflow\t17\t18\tthe xor_gateway If is followed by the condition_specification someone is interested\nflow\t18\t19\tthe condition_specification someone is interested is followed by the activity sends\nflow\t19\t21\tthe activity sends is followed by the activity processes\nflow\t17\t23\tthe xor_gateway If is followed by the xor_gateway Otherwise\nflow\t23\t24\tthe xor_gateway Otherwise is followed by the activity calls\n\nactor performer\t5\t0\tthe activity checks is performed by the Manager\nactor performer\t7\t1\tthe activity selects is performed by he (the Manager)\nactor performer\t9\t3\tthe activity tells is performed by He (the Manager)\nactor performer\t15\t13\tthe activity calls is performed by The Sales Assistant\nactor performer\t19\t12\tthe activity sends is performed by he (The Sales Assistant or Manager)\nactor performer\t21\t4\tthe activity processes is performed by The Manager\nactor performer\t24\t11\tthe activity calls is performed by he (The Sales Assistant or Manager)\n\nactor recipient\t9\t10\tthe activity tells is received by the Sales Assistant\nactor recipient\t19\t2\tthe activity sends is received by the Manager\n\nsame gateway\t17\t23\tthe xor_gateway If and Otherwise describe the same decision point"], "original_id": "doc-7.1"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Procedure\n\nLet's solve this task in 6 steps.\n\n1. Write a short list of facts about the process, then add a horizontal line (\"-----\")\n\n2. Detect all relations of type uses and list them in your answer.\n\n3. Detect all relations of type flow and list them in your answer.\n\n4. Detect all relations of type actor performer and actor recipient. In both cases focus on activities and find the actor, that is performing the activity, or is affected by its outcome respectively.\n\n5. Detect all relations of type same gateway and extract them. For this focus on XOR_Gateways and AND_Gateways.\n\n6. Detect all relations of type further specification and extract them. Focus on elements of type Activity and Further_Specification for this task.\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nThe process is initiated by a switch-over request . In doing so , <actor id=0> the customer </actor> <activity id=4> transmits </activity> <activity_data id=5> his data </activity_data> to <actor id=8> the customer service department </actor> of the company . Customer service is a shared service center between the departments Sales and Distribution . <activity_data id=6> The customer data </activity_data> is <activity id=13> received </activity> by <actor id=11> customer service </actor> and based on this data <activity_data id=14> a customer data object </activity_data> is <activity id=15> entered </activity> <further_specification id=16> into the CRM system </further_specification> . After customer data has been entered <activity_data id=7> it </activity_data> should then be <activity id=17> compared </activity> with <activity_data id=18> the internal customer data base </activity_data> and <activity id=19> checked </activity> <further_specification id=20> for completeness and plausibility </further_specification> . <xor_gateway id=21> In case of </xor_gateway> <condition_specification id=22> any errors </condition_specification> <activity_data id=23> these </activity_data> should be <activity id=24> corrected </activity> on the basis of a simple error list . The comparison of data is done to prevent individual customer data being stored multiple times . <xor_gateway id=25> In case </xor_gateway> <condition_specification id=26> the customer does not exist in the customer data base </condition_specification> , <activity_data id=27> a new customer object </activity_data> is being <activity id=28> created </activity> which will remain the data object of interest during the rest of the process flow . This object consists of data elements such as the customer's name and address and the assigned power gauge . The generated customer object is then used , in combination with other customer data to <activity id=29> prepare </activity> <activity_data id=30> the contract documents for the power supplier switch </activity_data> ( including data such as bank connection , information on the selected rate , requested date of switch-over ) . In the following an automated <activity id=33> check </activity> of <activity_data id=32> the contract documents </activity_data> is carried out within <actor id=34> the CIS </actor> ( customer information system ) in order to confirm their successful generation . <xor_gateway id=36> In case of </xor_gateway> <condition_specification id=37> a negative response </condition_specification> , i.e . the contract documents are not ( or incorrectly ) generated , <activity_data id=38> the causing issues </activity_data> are being <activity id=39> analyzed </activity> and <activity id=40> resolved </activity> . Subsequently <activity_data id=31> the contract documents </activity_data> are <activity id=41> generated </activity> once again . <xor_gateway id=42> In case of </xor_gateway> <condition_specification id=43> a positive response </condition_specification> <activity_data id=44> a confirmation document </activity_data> is <activity id=45> sent out </activity> to <actor id=2> the customer </actor> stating that the switch-over to the new supplier can be executed . <activity_data id=46> A request </activity_data> to <actor id=48> the grid operator </actor> is automatically <activity id=55> sent out </activity> by <actor id=35> the CIS </actor> . It puts the question whether the customer may be supplied by the selected supplier in the future . <activity_data id=47> The switch-over request </activity_data> is <activity id=56> checked </activity> by <actor id=53> the grid operator </actor> for supplier concurrence , and <actor id=52> the grid operator </actor> <activity id=57> transmits </activity> <activity_data id=58> a response comment </activity_data> . <xor_gateway id=59> In the case of </xor_gateway> <condition_specification id=60> supplier concurrence </condition_specification> <actor id=51> the grid operator </actor> would <activity id=61> inform </activity> <actor id=62> all involved suppliers </actor> and <activity id=63> demand </activity> <activity_data id=64> the resolution of the conflict </activity_data> . <actor id=54> The grid operator </actor> <activity id=65> communicates </activity> with <actor id=66> the old supplier </actor> and <activity id=70> carries out </activity> <activity_data id=71> the termination of the sales agreement </activity_data> between the customer and the old supplier ( i.e . the customer service ( of the new supplier ) does not have to interact with the old supplier regarding termination ) . <xor_gateway id=72> If </xor_gateway> <condition_specification id=73> there are not any objections by the grid operator </condition_specification> ( i.e . no supplier concurrence ) , <actor id=10> customer service </actor> <activity id=74> creates </activity> <activity_data id=75> a CIS contract </activity_data> . <actor id=3> The customer </actor> then has the chance to <activity id=78> check </activity> <activity_data id=79> the contract details </activity_data> and based on this check may decide to <xor_gateway id=80> either </xor_gateway> <activity id=81> withdraw </activity> from <activity_data id=76> the switch contract </activity_data> <xor_gateway id=82> or </xor_gateway> <activity id=83> confirm </activity> <activity_data id=77> it </activity_data> . Depending on the customer's acceptance / rejection the process flow at customer service either ends ( in case of withdrawal ) or continues ( in case of a confirmation ) . An additional constraint is that the customer can only withdraw from the offered contract within 7 days after the 7th day the contract will be regarded as accepted and the process continues . The confirmation message by the customer is therefore not absolutely necessary ( as it will count as accepted after 7 days in any way ) but it can speed up the switch process . On the switch-date , but no later than 10 days after power supply has begun , <actor id=50> the grid operator </actor> <activity id=84> transmits </activity> <activity_data id=85> the power meter data </activity_data> to <actor id=12> the customer service </actor> and <actor id=69> the old supplier </actor> <further_specification id=88> via messages containing a services consumption report </further_specification> . <and_gateway id=89> At the same time </and_gateway> , <actor id=49> the grid operator </actor> <activity id=90> computes </activity> <activity_data id=91> the final billing </activity_data> based on the meter data and <activity id=94> sends </activity> <activity_data id=92> it </activity_data> to <actor id=68> the old supplier </actor> . Likewise <actor id=67> the old supplier </actor> <activity id=95> creates </activity> and <activity id=96> sends </activity> <activity_data id=93> the final billing </activity_data> to <actor id=1> the customer </actor> . For the customer as well as the grid operator the process ends then . After <activity id=97> receiving </activity> <activity_data id=86> the meter data </activity_data> <actor id=9> customer service </actor> <activity id=98> imports </activity> <activity_data id=87> the meter data </activity_data> to systems that require the information . The process of winning a new customer ends here .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_persona.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 2914, "output_tokens": 1392, "total_costs": 0.0709, "answers": ["-----\n\n### Relations of type \"uses\"\n\nuses\t4\t5\tthe activity transmits uses the activity_data his data\nuses\t13\t6\tthe activity received uses the activity_data The customer data\nuses\t15\t14\tthe activity entered uses the activity_data a customer data object\nuses\t17\t7\tthe activity compared uses the activity_data it\nuses\t17\t18\tthe activity compared uses the activity_data the internal customer data base\nuses\t19\t7\tthe activity checked uses the activity_data it\nuses\t19\t18\tthe activity checked uses the activity_data the internal customer data base\nuses\t24\t23\tthe activity corrected uses the activity_data these\nuses\t28\t27\tthe activity created uses the activity_data a new customer object\nuses\t29\t30\tthe activity prepare uses the activity_data the contract documents for the power supplier switch\nuses\t33\t32\tthe activity check uses the activity_data the contract documents\nuses\t39\t38\tthe activity analyzed uses the activity_data the causing issues\nuses\t41\t31\tthe activity generated uses the activity_data the contract documents\nuses\t45\t44\tthe activity sent out uses the activity_data a confirmation document\nuses\t55\t47\tthe activity sent out uses the activity_data The switch-over request\nuses\t56\t47\tthe activity checked uses the activity_data The switch-over request\nuses\t57\t58\tthe activity transmits uses the activity_data a response comment\nuses\t63\t64\tthe activity demand uses the activity_data the resolution of the conflict\nuses\t70\t71\tthe activity carries out uses the activity_data the termination of the sales agreement\nuses\t74\t75\tthe activity creates uses the activity_data a CIS contract\nuses\t78\t79\tthe activity check uses the activity_data the contract details\nuses\t81\t76\tthe activity withdraw uses the activity_data the switch contract\nuses\t83\t77\tthe activity confirm uses the activity_data it\nuses\t84\t85\tthe activity transmits uses the activity_data the power meter data\nuses\t90\t91\tthe activity computes uses the activity_data the final billing\nuses\t94\t92\tthe activity sends uses the activity_data it\nuses\t95\t93\tthe activity creates uses the activity_data the final billing\nuses\t96\t93\tthe activity sends uses the activity_data the final billing\nuses\t98\t87\tthe activity imports uses the activity_data the meter data\n\n### Relations of type \"flow\"\n\nflow\t4\t13\tthe activity transmits is followed by the activity received\nflow\t13\t15\tthe activity received is followed by the activity entered\nflow\t15\t17\tthe activity entered is followed by the activity compared\nflow\t17\t19\tthe activity compared is followed by the activity checked\nflow\t19\t24\tthe activity checked is followed by the activity corrected in case of any errors\nflow\t24\t29\tthe activity corrected is followed by the activity prepare\nflow\t29\t33\tthe activity prepare is followed by the activity check\nflow\t33\t39\tthe activity check is followed by the activity analyzed in case of a negative response\nflow\t39\t40\tthe activity analyzed is followed by the activity resolved\nflow\t40\t41\tthe activity resolved is followed by the activity generated\nflow\t41\t45\tthe activity generated is followed by the activity sent out in case of a positive response\nflow\t45\t55\tthe activity sent out is followed by the activity sent out to the grid operator\nflow\t55\t56\tthe activity sent out is followed by the activity checked by the grid operator\nflow\t56\t57\tthe activity checked is followed by the activity transmits\nflow\t57\t61\tthe activity transmits is followed by the activity inform in case of supplier concurrence\nflow\t61\t63\tthe activity inform is followed by the activity demand\nflow\t63\t65\tthe activity demand is followed by the activity communicates\nflow\t65\t70\tthe activity communicates is followed by the activity carries out\nflow\t70\t74\tthe activity carries out is followed by the activity creates if there are not any objections by the grid operator\nflow\t74\t78\tthe activity creates is followed by the activity check by the customer\nflow\t78\t81\tthe activity check is followed by the activity withdraw or confirm based on the customer's decision\nflow\t81\t83\tthe activity withdraw is followed by the activity confirm as alternative paths\nflow\t83\t84\tthe activity confirm is followed by the activity transmits the power meter data\nflow\t84\t90\tthe activity transmits is followed by the activity computes\nflow\t90\t94\tthe activity computes is followed by the activity sends\nflow\t94\t95\tthe activity sends is followed by the activity creates by the old supplier\nflow\t95\t96\tthe activity creates is followed by the activity sends to the customer\nflow\t96\t97\tthe activity sends is followed by the activity receiving the meter data by customer service\nflow\t97\t98\tthe activity receiving is followed by the activity imports\n\n### Relations of type \"actor performer\" and \"actor recipient\"\n\nactor performer\t4\t0\tthe activity transmits is performed by the customer\nactor recipient\t13\t11\tthe activity received affects the customer service\nactor performer\t55\t35\tthe activity sent out is performed by the CIS\nactor recipient\t45\t2\tthe activity sent out affects the customer\nactor performer\t56\t53\tthe activity checked is performed by the grid operator\nactor performer\t57\t52\tthe activity transmits is performed by the grid operator\nactor recipient\t84\t12\tthe activity transmits affects the customer service\nactor recipient\t84\t69\tthe activity transmits affects the old supplier\nactor performer\t98\t9\tthe activity imports is performed by customer service\n\n### Relations of type \"same gateway\"\n\nsame gateway\t21\t25\tIn case and In case describe the same decision point in the process execution\nsame gateway\t25\t36\tIn case and In case of describe the same decision point in the process execution\nsame gateway\t36\t42\tIn case of and In case of describe the same decision point in the process execution\nsame gateway\t42\t59\tIn case of and In the case of describe the same decision point in the process execution\nsame gateway\t59\t72\tIn the case of and If describe the same decision point in the process execution\nsame gateway\t72\t80\tIf and either describe the same decision point in the process execution\nsame gateway\t80\t82\teither and or describe the same decision point in the process execution\n\n### Relations of type \"further specification\"\n\nfurther specification\t15\t16\tthe activity entered is further specified by into the CRM system\nfurther specification\t19\t20\tthe activity checked is further specified by for completeness and plausibility\nfurther specification\t84\t88\tthe activity transmits is further specified by via messages containing a services consumption report"], "original_id": "doc-2.2"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Procedure\n\nLet's solve this task in 6 steps.\n\n1. Write a short list of facts about the process, then add a horizontal line (\"-----\")\n\n2. Detect all relations of type uses and list them in your answer.\n\n3. Detect all relations of type flow and list them in your answer.\n\n4. Detect all relations of type actor performer and actor recipient. In both cases focus on activities and find the actor, that is performing the activity, or is affected by its outcome respectively.\n\n5. Detect all relations of type same gateway and extract them. For this focus on XOR_Gateways and AND_Gateways.\n\n6. Detect all relations of type further specification and extract them. Focus on elements of type Activity and Further_Specification for this task.\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<xor_gateway id=0> If </xor_gateway> <actor id=1> the MPOO </actor> <activity id=3> sends </activity> <activity_data id=4> the bill for the temporary continuation of the metering point operations </activity_data> to <actor id=6> the GO </actor> , <actor id=11> the GO </actor> <activity id=12> examines </activity> <activity_data id=5> the bill </activity_data> . <xor_gateway id=13> If </xor_gateway> <actor id=14> the MSPO </actor> <activity id=15> sends </activity> <activity_data id=16> the bill for the temporary continuation of the measurement </activity_data> to <actor id=10> the GO </actor> , <actor id=9> the GO </actor> <activity id=18> examines </activity> <activity_data id=17> the bill </activity_data> . <xor_gateway id=19> If </xor_gateway> <actor id=20> the MSPO </actor> <activity id=21> sends </activity> <activity_data id=22> the bill for additional readings </activity_data> to <actor id=8> the GO </actor> , <actor id=7> the GO </actor> <activity id=24> examines </activity> <activity_data id=23> the bill </activity_data> . <xor_gateway id=25> If </xor_gateway> <actor id=2> the MPOO </actor> <activity id=26> sends </activity> <activity_data id=27> the bill for the equipment acquisition </activity_data> to <actor id=29> the MPON or the GO </actor> , <actor id=30> the MPON or the GO </actor> <activity id=33> examines </activity> <activity_data id=28> the bill </activity_data> . <actor id=31> The GO or the MPON </actor> <activity id=34> confirms </activity> <activity_data id=35> the invoice with payment advice </activity_data> to <actor id=37> the MPOO or the MSPO </actor> , <xor_gateway id=38> or </xor_gateway> <actor id=32> the GO or the MPON </actor> <activity id=39> rejects </activity> <activity_data id=36> the invoice of the MPOO or the MSPO </activity_data> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_persona.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1705, "output_tokens": 586, "total_costs": 0.03463, "answers": ["-----\n\n### Relations of type \"uses\"\n\nuses\t3\t4\tthe activity sends uses the bill for the temporary continuation of the metering point operations\nuses\t12\t5\tthe activity examines uses the bill\nuses\t15\t16\tthe activity sends uses the bill for the temporary continuation of the measurement\nuses\t18\t17\tthe activity examines uses the bill\nuses\t21\t22\tthe activity sends uses the bill for additional readings\nuses\t24\t23\tthe activity examines uses the bill\nuses\t26\t27\tthe activity sends uses the bill for the equipment acquisition\nuses\t33\t28\tthe activity examines uses the bill\nuses\t34\t35\tthe activity confirms uses the invoice with payment advice\nuses\t39\t36\tthe activity rejects uses the invoice of the MPOO or the MSPO\n\n### Relations of type \"flow\"\n\nflow\t3\t12\tthe activity sends is followed by the activity examines\nflow\t15\t18\tthe activity sends is followed by the activity examines\nflow\t21\t24\tthe activity sends is followed by the activity examines\nflow\t26\t33\tthe activity sends is followed by the activity examines\nflow\t34\t39\tthe activity confirms is followed by the activity rejects due to the xor_gateway\n\n### Relations of type \"actor performer\" and \"actor recipient\"\n\nactor performer\t3\t1\tthe activity sends is performed by the MPOO\nactor recipient\t3\t6\tthe activity sends is received by the GO\nactor performer\t12\t11\tthe activity examines is performed by the GO\nactor performer\t15\t14\tthe activity sends is performed by the MSPO\nactor recipient\t15\t10\tthe activity sends is received by the GO\nactor performer\t18\t9\tthe activity examines is performed by the GO\nactor performer\t21\t20\tthe activity sends is performed by the MSPO\nactor recipient\t21\t8\tthe activity sends is received by the GO\nactor performer\t24\t7\tthe activity examines is performed by the GO\nactor performer\t26\t2\tthe activity sends is performed by the MPOO\nactor recipient\t26\t29\tthe activity sends is received by the MPON or the GO\nactor performer\t33\t30\tthe activity examines is performed by the MPON or the GO\nactor performer\t34\t31\tthe activity confirms is performed by the GO or the MPON\nactor recipient\t34\t37\tthe activity confirms is received by the MPOO or the MSPO\nactor performer\t39\t32\tthe activity rejects is performed by the GO or the MPON\n\n### Relations of type \"same gateway\"\n\nNo relations of type \"same gateway\" were identified as each gateway mention refers to a distinct decision point in the process.\n\n### Relations of type \"further specification\"\n\nNo relations of type \"further specification\" were identified as there are no mentions of type \"further_specification\" in the text."], "original_id": "doc-10.14"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Procedure\n\nLet's solve this task in 6 steps.\n\n1. Write a short list of facts about the process, then add a horizontal line (\"-----\")\n\n2. Detect all relations of type uses and list them in your answer.\n\n3. Detect all relations of type flow and list them in your answer.\n\n4. Detect all relations of type actor performer and actor recipient. In both cases focus on activities and find the actor, that is performing the activity, or is affected by its outcome respectively.\n\n5. Detect all relations of type same gateway and extract them. For this focus on XOR_Gateways and AND_Gateways.\n\n6. Detect all relations of type further specification and extract them. Focus on elements of type Activity and Further_Specification for this task.\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nThe intake workflow starts with a notice by telephone at the secretarial office of the mental health care institute . <activity_data id=0> This notice </activity_data> is <activity id=1> done </activity> by <actor id=2> the family doctor </actor> of somebody who is in need of mental treatment . <actor id=3> The secretarial worker </actor> <activity id=4> inquires </activity> after <activity_data id=5> the name and residence of the patient </activity_data> . On the basis of this information , <activity_data id=6> the doctor </activity_data> is <activity id=7> put through </activity> to <actor id=8> the nursing officer responsible </actor> <further_specification id=10> for the part of the region that the patient lives in </further_specification> . <actor id=9> The nursing officer </actor> <activity id=11> makes a full inquiry </activity> <further_specification id=12> into the mental , health , and social state of the patient in question </further_specification> . <activity_data id=13> This information </activity_data> is <activity id=14> recorded </activity> <further_specification id=15> on a registration form </further_specification> . At the end of the conversation , <activity_data id=16> this form </activity_data> is <activity id=17> handed in </activity> at <actor id=53> the secretarial office </actor> of the institute . Here , <activity_data id=18> the information on the form </activity_data> is <activity id=19> stored </activity> <further_specification id=20> in the information system </further_specification> and subsequently <activity id=21> printed </activity> . <xor_gateway id=22> For </xor_gateway> <condition_specification id=23> new patients </condition_specification> , <activity_data id=24> a patient file </activity_data> is <activity id=25> created </activity> . <activity_data id=26> The registration form </activity_data> as well as <activity_data id=27> the print from the information system </activity_data> are <activity id=28> stored </activity> <further_specification id=29> in the patient file </further_specification> . Patient files are kept at the secretarial office and may not leave the building . At <actor id=58> the secretarial office </actor> , <activity_data id=30> two registration cards </activity_data> are <activity id=31> produced </activity> <further_specification id=32> for respectively the future first and second intaker of the patient </further_specification> . The registration card contains a set of basic patient data . <activity_data id=33> The new patient </activity_data> is <activity id=34> added </activity> <further_specification id=35> on the list of new notices </further_specification> . Halfway the week , at Wednesday , <activity_data id=36> a staff meeting </activity_data> <further_specification id=37> of the entire medical team </further_specification> <activity id=38> takes place </activity> . The medical team consists of social-medical workers , physicians , and a psychiatrist . At this meeting , <actor id=39> the team-leader </actor> <activity id=40> assigns </activity> <activity_data id=41> all new patients </activity_data> on the list of new notices to <actor id=42> members of the team </actor> . Each patient will be assigned to a social-medical worker , who will act as the first intaker of the patient . One of the physicians will act as the second intaker . In assigning intakers , the teamleader takes into account their expertise , the region they are responsible for , earlier contacts they might have had with the patient , and their case load . <activity_data id=43> The assignments </activity_data> are <activity id=44> recorded </activity> <further_specification id=45> on an assignment list </further_specification> which is handed to <actor id=57> the secretarial office </actor> . For each new assignment , it is also <activity id=46> determined </activity> whether <activity_data id=47> the medical file of the patient </activity_data> is required . <activity_data id=48> This information </activity_data> is <activity id=49> added </activity> <further_specification id=50> to the assignment list </further_specification> . <actor id=51> The secretarial office </actor> <activity id=60> stores </activity> the assignment of each patient of the assignment list <further_specification id=61> in the information system </further_specification> . <actor id=59> It </actor> <activity id=62> passes </activity> <activity_data id=63> the produced registration cards </activity_data> to <actor id=64> the first and second intaker </actor> of each newly assigned patient . An intaker keeps this registration with him at times when visiting the patient and in his close proximity when he is at the office . <xor_gateway id=65> For each patient for which </xor_gateway> <condition_specification id=66> the medical file is required </condition_specification> , <actor id=56> the secretarial office </actor> <activity id=67> prepares </activity> and <activity id=68> sends </activity> <activity_data id=69> a letter </activity_data> to <actor id=70> the family doctor of the patient </actor> , requesting for a copy of the medical file . As soon as <activity_data id=71> this copy </activity_data> is <activity id=72> received </activity> , <actor id=55> the secretarial office </actor> will <activity id=73> inform </activity> <actor id=74> the second intaker </actor> and <activity id=76> add </activity> <activity_data id=77> the copy </activity_data> <further_specification id=78> to the patient file </further_specification> . <actor id=79> The first intaker </actor> <activity id=81> plans </activity> <activity_data id=82> a meeting with the patient </activity_data> as soon as this is possible . During the first meeting , <activity_data id=83> the patient </activity_data> is <activity id=84> examined </activity> using a standard checklist which is filled out . <activity_data id=85> Additional observations </activity_data> are <activity id=86> registered </activity> <further_specification id=87> in a personal notebook </further_specification> . After a visit , <actor id=80> the first intaker </actor> <activity id=88> puts </activity> <activity_data id=89> a copy of these notes </activity_data> <further_specification id=90> in the file of a patient </further_specification> . <activity_data id=91> The standard checklist </activity_data> is also <activity id=92> added </activity> <further_specification id=93> to the patient's file </further_specification> . <actor id=75> The second intaker </actor> <activity id=94> plans </activity> <activity_data id=95> the first meeting </activity_data> only after the medical information of the physician <xor_gateway id=96> if </xor_gateway> <condition_specification id=97> required has been received </condition_specification> . Physicians use dictaphones to record their observations made during meetings with patients . <actor id=52> The secretarial office </actor> <activity id=98> types out </activity> <activity_data id=99> these tapes </activity_data> , after which <activity_data id=100> the information </activity_data> is <activity id=101> added </activity> <further_specification id=102> to the patient file </further_specification> . As soon as the meetings of the first and second intaker with the patient have taken place , <actor id=54> the secretarial office </actor> <activity id=103> puts </activity> the patient <further_specification id=104> on the list of patients that reach this status </further_specification> . For the staff meeting on Wednesday , <actor id=105> they </actor> <activity id=106> provide </activity> <actor id=107> the team-leader </actor> with <activity_data id=108> a list of these patients </activity_data> . For each of these patients , <actor id=109> the first and second intaker together with the team-leader and the attending psychiatrist </actor> <activity id=110> formulate </activity> <activity_data id=111> a treatment plan </activity_data> . This treatment plan formally ends the intake procedure .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_persona.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 3133, "output_tokens": 2208, "total_costs": 0.09757000000000002, "answers": ["Facts about the process:\n- The process describes the intake workflow at a mental health care institute, starting with a notice by telephone.\n- It involves various actors such as the family doctor, secretarial worker, nursing officer, and the medical team including a team-leader.\n- Activities include inquiring after patient details, recording information, creating patient files, and formulating treatment plans.\n- Data elements include notices, patient information, registration forms, patient files, and treatment plans.\n- The process also involves decision points (XOR gateways) for handling new patients and determining if the medical file is required.\n- Further specifications detail how certain activities should be executed, such as the region the patient lives in, the mental health state of the patient, and the use of the information system.\n\n-----\n\nuses\t1\t0\tthis activity_data mention is produced by the activity done\nuses\t4\t5\tthis activity_data mention is produced by the activity inquires\nuses\t7\t6\tthis activity_data mention is produced by the activity put through\nuses\t11\t13\tthis activity_data mention is produced by the activity makes a full inquiry\nuses\t14\t13\tthis activity_data mention is produced by the activity recorded\nuses\t17\t16\tthis activity_data mention is produced by the activity handed in\nuses\t19\t18\tthis activity_data mention is produced by the activity stored\nuses\t21\t18\tthis activity_data mention is produced by the activity printed\nuses\t25\t24\tthis activity_data mention is produced by the activity created\nuses\t28\t26\tthis activity_data mention is produced by the activity stored\nuses\t28\t27\tthis activity_data mention is produced by the activity stored\nuses\t31\t30\tthis activity_data mention is produced by the activity produced\nuses\t34\t33\tthis activity_data mention is produced by the activity added\nuses\t38\t36\tthis activity_data mention is produced by the activity takes place\nuses\t44\t43\tthis activity_data mention is produced by the activity recorded\nuses\t46\t47\tthis activity_data mention is produced by the activity determined\nuses\t49\t48\tthis activity_data mention is produced by the activity added\nuses\t60\t43\tthis activity_data mention is produced by the activity stores\nuses\t62\t63\tthis activity_data mention is produced by the activity passes\nuses\t67\t69\tthis activity_data mention is produced by the activity prepares\nuses\t68\t69\tthis activity_data mention is produced by the activity sends\nuses\t72\t71\tthis activity_data mention is produced by the activity received\nuses\t73\t71\tthis activity_data mention is produced by the activity inform\nuses\t76\t77\tthis activity_data mention is produced by the activity add\nuses\t84\t83\tthis activity_data mention is produced by the activity examined\nuses\t86\t85\tthis activity_data mention is produced by the activity registered\nuses\t88\t89\tthis activity_data mention is produced by the activity puts\nuses\t92\t91\tthis activity_data mention is produced by the activity added\nuses\t98\t99\tthis activity_data mention is produced by the activity types out\nuses\t101\t100\tthis activity_data mention is produced by the activity added\nuses\t103\t108\tthis activity_data mention is produced by the activity puts\nuses\t110\t111\tthis activity_data mention is produced by the activity formulate\n\nflow\t1\t4\tActivity done is followed by activity inquires\nflow\t4\t7\tActivity inquires is followed by activity put through\nflow\t7\t11\tActivity put through is followed by activity makes a full inquiry\nflow\t11\t14\tActivity makes a full inquiry is followed by activity recorded\nflow\t14\t17\tActivity recorded is followed by activity handed in\nflow\t17\t19\tActivity handed in is followed by activity stored\nflow\t19\t21\tActivity stored is followed by activity printed\nflow\t21\t25\tActivity printed is followed by activity created\nflow\t25\t28\tActivity created is followed by activity stored\nflow\t28\t31\tActivity stored is followed by activity produced\nflow\t31\t34\tActivity produced is followed by activity added\nflow\t34\t38\tActivity added is followed by activity takes place\nflow\t38\t44\tActivity takes place is followed by activity recorded\nflow\t44\t46\tActivity recorded is followed by activity determined\nflow\t46\t49\tActivity determined is followed by activity added\nflow\t49\t60\tActivity added is followed by activity stores\nflow\t60\t62\tActivity stores is followed by activity passes\nflow\t62\t67\tActivity passes is followed by activity prepares\nflow\t67\t68\tActivity prepares is followed by activity sends\nflow\t68\t72\tActivity sends is followed by activity received\nflow\t72\t73\tActivity received is followed by activity inform\nflow\t73\t76\tActivity inform is followed by activity add\nflow\t76\t81\tActivity add is followed by activity plans\nflow\t81\t84\tActivity plans is followed by activity examined\nflow\t84\t86\tActivity examined is followed by activity registered\nflow\t86\t88\tActivity registered is followed by activity puts\nflow\t88\t92\tActivity puts is followed by activity added\nflow\t92\t94\tActivity added is followed by activity plans\nflow\t94\t98\tActivity plans is followed by activity types out\nflow\t98\t101\tActivity types out is followed by activity added\nflow\t101\t103\tActivity added is followed by activity puts\nflow\t103\t106\tActivity puts is followed by activity provide\nflow\t106\t110\tActivity provide is followed by activity formulate\n\nactor performer\t1\t2\tthe activity done is performed by the family doctor\nactor performer\t4\t3\tthe activity inquires is performed by the secretarial worker\nactor performer\t7\t3\tthe activity put through is performed by the secretarial worker\nactor performer\t11\t9\tthe activity makes a full inquiry is performed by the nursing officer\nactor performer\t14\t3\tthe activity recorded is performed by the secretarial worker\nactor performer\t17\t3\tthe activity handed in is performed by the secretarial worker\nactor performer\t19\t3\tthe activity stored is performed by the secretarial worker\nactor performer\t21\t3\tthe activity printed is performed by the secretarial worker\nactor performer\t25\t3\tthe activity created is performed by the secretarial worker\nactor performer\t28\t3\tthe activity stored is performed by the secretarial worker\nactor performer\t31\t3\tthe activity produced is performed by the secretarial worker\nactor performer\t34\t3\tthe activity added is performed by the secretarial worker\nactor performer\t38\t39\tthe activity takes place is performed by the team-leader\nactor performer\t44\t39\tthe activity recorded is performed by the team-leader\nactor performer\t46\t39\tthe activity determined is performed by the team-leader\nactor performer\t49\t39\tthe activity added is performed by the team-leader\nactor performer\t60\t51\tthe activity stores is performed by the secretarial office\nactor performer\t62\t59\tthe activity passes is performed by It\nactor performer\t67\t56\tthe activity prepares is performed by the secretarial office\nactor performer\t68\t56\tthe activity sends is performed by the secretarial office\nactor performer\t72\t55\tthe activity received is performed by the secretarial office\nactor performer\t73\t55\tthe activity inform is performed by the secretarial office\nactor performer\t76\t55\tthe activity add is performed by the secretarial office\nactor performer\t81\t79\tthe activity plans is performed by the first intaker\nactor performer\t84\t79\tthe activity examined is performed by the first intaker\nactor performer\t86\t79\tthe activity registered is performed by the first intaker\nactor performer\t88\t80\tthe activity puts is performed by the first intaker\nactor performer\t92\t80\tthe activity added is performed by the first intaker\nactor performer\t94\t75\tthe activity plans is performed by the second intaker\nactor performer\t98\t52\tthe activity types out is performed by the secretarial office\nactor performer\t101\t52\tthe activity added is performed by the secretarial office\nactor performer\t103\t54\tthe activity puts is performed by the secretarial office\nactor performer\t106\t105\tthe activity provide is performed by they\nactor performer\t110\t109\tthe activity formulate is performed by the first and second intaker together with the team-leader and the attending psychiatrist\n\nactor recipient\t17\t53\tthe activity handed in is received by the secretarial office of the institute\nactor recipient\t62\t64\tthe activity passes is received by the first and second intaker of each newly assigned patient\nactor recipient\t68\t70\tthe activity sends is received by the family doctor of the patient\nactor recipient\t73\t74\tthe activity inform is received by the second intaker\nactor recipient\t106\t107\tthe activity provide is received by the team-leader\n\nfurther specification\t7\t10\tthe activity put through is further specified by for the part of the region that the patient lives in\nfurther specification\t11\t12\tthe activity makes a full inquiry is further specified by into the mental, health, and social state of the patient in question\nfurther specification\t14\t15\tthe activity recorded is further specified by on a registration form\nfurther specification\t19\t20\tthe activity stored is further specified by in the information system\nfurther specification\t28\t29\tthe activity stored is further specified by in the patient file\nfurther specification\t31\t32\tthe activity produced is further specified by for respectively the future first and second intaker of the patient\nfurther specification\t34\t35\tthe activity added is further specified by on the list of new notices\nfurther specification\t38\t37\tthe activity takes place is further specified by of the entire medical team\nfurther specification\t44\t45\tthe activity recorded is further specified by on an assignment list\nfurther specification\t49\t50\tthe activity added is further specified by to the assignment list\nfurther specification\t60\t61\tthe activity stores is further specified by in the information system\nfurther specification\t76\t78\tthe activity add is further specified by to the patient file\nfurther specification\t86\t87\tthe activity registered is further specified by in a personal notebook\nfurther specification\t88\t90\tthe activity puts is further specified by in the file of a patient\nfurther specification\t92\t93\tthe activity added is further specified by to the patient's file\nfurther specification\t101\t102\tthe activity added is further specified by to the patient file\nfurther specification\t103\t104\tthe activity puts is further specified by on the list of patients that reach this status"], "original_id": "doc-4.1"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Procedure\n\nLet's solve this task in 6 steps.\n\n1. Write a short list of facts about the process, then add a horizontal line (\"-----\")\n\n2. Detect all relations of type uses and list them in your answer.\n\n3. Detect all relations of type flow and list them in your answer.\n\n4. Detect all relations of type actor performer and actor recipient. In both cases focus on activities and find the actor, that is performing the activity, or is affected by its outcome respectively.\n\n5. Detect all relations of type same gateway and extract them. For this focus on XOR_Gateways and AND_Gateways.\n\n6. Detect all relations of type further specification and extract them. Focus on elements of type Activity and Further_Specification for this task.\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nThe loan approval process starts by <activity id=0> receiving </activity> a customer request for a loan amount . <actor id=1> The risk assessment Web service </actor> is invoked to <activity id=2> assess </activity> <activity_data id=3> the request </activity_data> . <xor_gateway id=5> If </xor_gateway> <condition_specification id=6> the loan is small and the customer is low risk </condition_specification> , <activity_data id=7> the loan </activity_data> is <activity id=9> approved </activity> . <xor_gateway id=10> If </xor_gateway> <condition_specification id=11> the customer is high risk </condition_specification> , <activity_data id=8> the loan </activity_data> is <activity id=12> denied </activity> . <xor_gateway id=13> If </xor_gateway> <condition_specification id=14> the customer needs further review or the loan amount is for $10,000 or more </condition_specification> , <activity_data id=4> the request </activity_data> is <activity id=15> sent </activity> to <actor id=16> the approver Web service </actor> . <actor id=17> The customer </actor> <activity id=18> receives </activity> <activity_data id=19> feedback </activity_data> from <actor id=20> the assessor or approver </actor> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_persona.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1486, "output_tokens": 528, "total_costs": 0.030699999999999998, "answers": ["Facts about the process:\n- The process begins with receiving a customer request for a loan.\n- The risk assessment Web service assesses the request.\n- Based on the assessment, the process can follow three paths:\n  - If the loan is small and the customer is low risk, the loan is approved.\n  - If the customer is high risk, the loan is denied.\n  - If the customer needs further review or the loan amount is $10,000 or more, the request is sent to the approver Web service.\n- The customer receives feedback from the assessor or approver.\n\n-----\n\nuses\t2\t3\tthe activity assess uses the activity_data the request\nuses\t9\t7\tthe activity approved uses the activity_data the loan\nuses\t12\t8\tthe activity denied uses the activity_data the loan\nuses\t15\t4\tthe activity sent uses the activity_data the request\nuses\t18\t19\tthe activity receives uses the activity_data feedback\n\nflow\t0\t2\treceiving the request is the first step, followed by assessing it\nflow\t2\t5\tafter assessing the request, the process reaches a decision point\nflow\t5\t6\tthe decision point leads to evaluating if the loan is small and the customer is low risk\nflow\t5\t10\tif not, another decision point is reached to evaluate if the customer is high risk\nflow\t5\t13\tif neither, another decision point is reached for further review or large loan amounts\nflow\t6\t9\tif the loan is small and the customer is low risk, it is approved\nflow\t10\t11\tif the customer is high risk, the loan is denied\nflow\t11\t12\tthe decision that the customer is high risk leads to denying the loan\nflow\t13\t14\tif the customer needs further review or the loan amount is large, the request is sent for further review\nflow\t15\t18\tafter sending the request for further review, the customer receives feedback\n\nactor performer\t2\t1\tthe activity assess is performed by the risk assessment Web service\nactor performer\t15\t16\tthe activity sent is performed by the approver Web service\nactor recipient\t18\t17\tthe activity receives is received by the customer\n\nsame gateway\t5\t10\tthe XOR gateway at id=5 and id=10 describe the same decision point in the process\nsame gateway\t5\t13\tthe XOR gateway at id=5 and id=13 describe the same decision point in the process\nsame gateway\t10\t13\tthe XOR gateway at id=10 and id=13 describe the same decision point in the process"], "original_id": "doc-5.1"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Procedure\n\nLet's solve this task in 6 steps.\n\n1. Write a short list of facts about the process, then add a horizontal line (\"-----\")\n\n2. Detect all relations of type uses and list them in your answer.\n\n3. Detect all relations of type flow and list them in your answer.\n\n4. Detect all relations of type actor performer and actor recipient. In both cases focus on activities and find the actor, that is performing the activity, or is affected by its outcome respectively.\n\n5. Detect all relations of type same gateway and extract them. For this focus on XOR_Gateways and AND_Gateways.\n\n6. Detect all relations of type further specification and extract them. Focus on elements of type Activity and Further_Specification for this task.\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The MPON </actor> <activity id=7> notifies </activity> <actor id=8> the MPOO </actor> <activity_data id=11> about equipment change intentions </activity_data> . <actor id=10> The MPOO </actor> <activity id=12> announces </activity> <activity_data id=13> self dismounting </activity_data> to <actor id=6> the MPON </actor> <xor_gateway id=14> or </xor_gateway> <actor id=9> the MPOO </actor> shall <activity id=15> notify </activity> <actor id=5> the MPON </actor> <activity_data id=16> about no self-dismounting of the MPOO </activity_data> . <actor id=17> The MPON or the MPOO </actor> <activity id=19> perform </activity> <activity_data id=20> the final reading </activity_data> . <actor id=18> The MPON or the MPOO </actor> <activity id=21> dismount </activity> <activity_data id=22> the old equipment </activity_data> . <actor id=4> The MPON </actor> <activity id=23> mounts </activity> <activity_data id=24> the new device </activity_data> . <actor id=3> The MPON </actor> <activity id=25> reads </activity> <activity_data id=26> the meter count </activity_data> from the installed meter . <actor id=2> The MPON </actor> <activity id=27> sents </activity> <activity_data id=28> the values of the final reading </activity_data> to <actor id=29> the GO </actor> . <actor id=1> The MPON </actor> <activity id=32> tells </activity> <actor id=30> the GO </actor> <activity_data id=33> about the device changes , the master data and the meter count at installation </activity_data> . <actor id=31> The GO </actor> shall <activity id=34> notify </activity> <actor id=35> the MSP </actor> <activity_data id=36> about the device changes , the master data , the meter count at dismounting , and the meter count at installation </activity_data> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_persona.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1688, "output_tokens": 591, "total_costs": 0.03461, "answers": ["-----\n\nactor performer\t7\t0\tthe activity notifies is performed by The MPON\nactor recipient\t7\t8\tthe result of the activity notifies is received by the MPOO\nuses\t7\t11\tthis activity_data mention is produced by the activity notifies\nactor performer\t12\t10\tthe activity announces is performed by The MPOO\nactor recipient\t12\t6\tthe result of the activity announces is received by the MPON\nuses\t12\t13\tthis activity_data mention is produced by the activity announces\nactor performer\t15\t9\tthe activity notify is performed by the MPOO\nactor recipient\t15\t5\tthe result of the activity notify is received by the MPON\nuses\t15\t16\tthis activity_data mention is produced by the activity notify\nactor performer\t19\t17\tthe activity perform is performed by The MPON or the MPOO\nuses\t19\t20\tthis activity_data mention is produced by the activity perform\nactor performer\t21\t18\tthe activity dismount is performed by The MPON or the MPOO\nuses\t21\t22\tthis activity_data mention is produced by the activity dismount\nactor performer\t23\t4\tthe activity mounts is performed by The MPON\nuses\t23\t24\tthis activity_data mention is produced by the activity mounts\nactor performer\t25\t3\tthe activity reads is performed by The MPON\nuses\t25\t26\tthis activity_data mention is produced by the activity reads\nactor performer\t27\t2\tthe activity sents is performed by The MPON\nactor recipient\t27\t29\tthe result of the activity sents is received by the GO\nuses\t27\t28\tthis activity_data mention is produced by the activity sents\nactor performer\t32\t1\tthe activity tells is performed by The MPON\nactor recipient\t32\t30\tthe result of the activity tells is received by the GO\nuses\t32\t33\tthis activity_data mention is produced by the activity tells\nactor performer\t34\t31\tthe activity notify is performed by The GO\nactor recipient\t34\t35\tthe result of the activity notify is received by the MSP\nuses\t34\t36\tthis activity_data mention is produced by the activity notify\n\nflow\t7\t12\tThe activity notifies is followed by the activity announces\nflow\t12\t15\tThe activity announces is followed by the activity notify through an XOR gateway\nflow\t15\t19\tThe activity notify is followed by the activity perform\nflow\t19\t21\tThe activity perform is followed by the activity dismount\nflow\t21\t23\tThe activity dismount is followed by the activity mounts\nflow\t23\t25\tThe activity mounts is followed by the activity reads\nflow\t25\t27\tThe activity reads is followed by the activity sents\nflow\t27\t32\tThe activity sents is followed by the activity tells\nflow\t32\t34\tThe activity tells is followed by the activity notify"], "original_id": "doc-10.4"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Procedure\n\nLet's solve this task in 6 steps.\n\n1. Write a short list of facts about the process, then add a horizontal line (\"-----\")\n\n2. Detect all relations of type uses and list them in your answer.\n\n3. Detect all relations of type flow and list them in your answer.\n\n4. Detect all relations of type actor performer and actor recipient. In both cases focus on activities and find the actor, that is performing the activity, or is affected by its outcome respectively.\n\n5. Detect all relations of type same gateway and extract them. For this focus on XOR_Gateways and AND_Gateways.\n\n6. Detect all relations of type further specification and extract them. Focus on elements of type Activity and Further_Specification for this task.\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The MPOO </actor> <activity id=4> deregisters </activity> at <actor id=7> the GO </actor> . <actor id=5> The GO </actor> <activity id=15> verifies </activity> <activity_data id=16> the deregistration </activity_data> . <actor id=14> The GO </actor> <activity id=19> rejects </activity> <activity_data id=18> the deregistration of the MPOO </activity_data> <xor_gateway id=20> or </xor_gateway> <actor id=6> the GO </actor> <further_specification id=21> preliminarily </further_specification> <activity id=22> confirms </activity> <activity_data id=17> the deregistration of the MPOO </activity_data> . <actor id=13> The GO </actor> <activity id=23> prepares </activity> <activity_data id=24> the readmission of the measuring point </activity_data> . Optionally , the GO may oblige the MPOO to continue the operations . <xor_gateway id=25> If </xor_gateway> <condition_specification id=26> the GO binds the MPOO to continue the operation </condition_specification> , <actor id=3> the MPOO </actor> <activity id=27> confirmes </activity> <activity_data id=28> the continuation </activity_data> to <actor id=2> the MPOO </actor> . <actor id=12> The GO </actor> <activity id=29> performs </activity> <activity_data id=30> the equipment acquisition and / or equipment changes </activity_data> . <actor id=11> The GO </actor> <activity id=31> assigns </activity> <activity_data id=32> the GO as MPO </activity_data> . <actor id=10> The GO </actor> <activity id=33> informs </activity> <actor id=1> the MPOO </actor> <activity_data id=34> about the end of the assignment of the MPOO and the beginning of the assignment of the GO </activity_data> . <actor id=9> The GO </actor> <activity id=35> informs </activity> <actor id=36> the MSPO </actor> <activity_data id=37> about the assignment of the GO </activity_data> . <actor id=8> The GO </actor> <activity id=39> informs </activity> <actor id=40> the SP </actor> <activity_data id=38> about the assignment of the GO </activity_data> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_persona.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1746, "output_tokens": 607, "total_costs": 0.03567, "answers": ["-----\n\nactor performer\t4\t0\tthe activity deregisters is performed by The MPOO\nactor recipient\t4\t7\tthe result of the activity deregisters is received by the GO\nactor performer\t15\t5\tthe activity verifies is performed by The GO\nuses\t15\t16\tthis activity_data mention is produced by the activity verifies\nactor performer\t19\t14\tthe activity rejects is performed by The GO\nuses\t19\t18\tthis activity_data mention is produced by the activity rejects\nactor performer\t22\t6\tthe activity confirms is performed by The GO\nuses\t22\t17\tthis activity_data mention is produced by the activity confirms\nfurther specification\t22\t21\tthe activity confirms is further specified as being done preliminarily\nactor performer\t23\t13\tthe activity prepares is performed by The GO\nuses\t23\t24\tthis activity_data mention is produced by the activity prepares\nactor performer\t27\t3\tthe activity confirmes is performed by the MPOO\nuses\t27\t28\tthis activity_data mention is produced by the activity confirmes\nactor performer\t29\t12\tthe activity performs is performed by The GO\nuses\t29\t30\tthis activity_data mention is produced by the activity performs\nactor performer\t31\t11\tthe activity assigns is performed by The GO\nuses\t31\t32\tthis activity_data mention is produced by the activity assigns\nactor performer\t33\t10\tthe activity informs is performed by The GO\nuses\t33\t34\tthis activity_data mention is produced by the activity informs\nactor recipient\t33\t1\tthe result of the activity informs is received by the MPOO\nactor performer\t35\t9\tthe activity informs is performed by The GO\nuses\t35\t37\tthis activity_data mention is produced by the activity informs\nactor recipient\t35\t36\tthe result of the activity informs is received by the MSPO\nactor performer\t39\t8\tthe activity informs is performed by The GO\nuses\t39\t38\tthis activity_data mention is produced by the activity informs\nactor recipient\t39\t40\tthe result of the activity informs is received by the SP\n\nflow\t4\t15\tThe activity deregisters is followed by the activity verifies\nflow\t15\t19\tThe activity verifies is followed by the activity rejects\nflow\t19\t22\tThe activity rejects is followed by the activity confirms\nflow\t22\t23\tThe activity confirms is followed by the activity prepares\nflow\t23\t29\tThe activity prepares is followed by the activity performs\nflow\t29\t31\tThe activity performs is followed by the activity assigns\nflow\t31\t33\tThe activity assigns is followed by the activity informs\nflow\t33\t35\tThe activity informs is followed by the next activity informs\nflow\t35\t39\tThe activity informs is followed by the next activity informs\nflow\t20\t22\tThe XOR_Gateway leads to the decision of confirming the deregistration\nflow\t25\t27\tThe XOR_Gateway leads to the condition where the MPOO confirms the continuation"], "original_id": "doc-10.3"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Procedure\n\nLet's solve this task in 6 steps.\n\n1. Write a short list of facts about the process, then add a horizontal line (\"-----\")\n\n2. Detect all relations of type uses and list them in your answer.\n\n3. Detect all relations of type flow and list them in your answer.\n\n4. Detect all relations of type actor performer and actor recipient. In both cases focus on activities and find the actor, that is performing the activity, or is affected by its outcome respectively.\n\n5. Detect all relations of type same gateway and extract them. For this focus on XOR_Gateways and AND_Gateways.\n\n6. Detect all relations of type further specification and extract them. Focus on elements of type Activity and Further_Specification for this task.\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> An employee </actor> <activity id=4> purchases </activity> <activity_data id=5> a product or service </activity_data> he requires . For instance , a sales person on a trip rents a car . <actor id=1> The employee </actor> <activity id=6> submits </activity> <activity_data id=7> an expense report </activity_data> with a list of items , along with the receipts for each item . <actor id=13> A supervisor </actor> <activity id=14> reviews </activity> <activity_data id=8> the expense report </activity_data> and <activity id=15> approves or rejects </activity> <activity_data id=9> the report </activity_data> . Since the company has expense rules , there are circumstances where the supervisor can accept or reject the report upon first inspection . These rules could be automated , to reduce the workload on the supervisor . <xor_gateway id=16> If </xor_gateway> <condition_specification id=17> the supervisor rejects the report </condition_specification> , <actor id=3> the employee </actor> , who submitted it , is given a chance to <activity id=18> edit </activity> <activity_data id=12> it </activity_data> , for example to correct errors or better describe an expense . <xor_gateway id=19> If </xor_gateway> <condition_specification id=20> the supervisor approves the report </condition_specification> , <activity_data id=11> it </activity_data> <activity id=21> goes </activity> to <actor id=22> the treasurer </actor> . <actor id=23> The treasurer </actor> <activity id=26> checks </activity> that all <activity_data id=27> the receipts </activity_data> have been submitted and match the items on the list . <xor_gateway id=28> If </xor_gateway> <condition_specification id=29> all is in order </condition_specification> , <actor id=24> the treasurer </actor> <activity id=30> accepts </activity> <activity_data id=31> the expenses </activity_data> for processing ( including , e.g . , payment or refund , and accounting ) . <xor_gateway id=32> If </xor_gateway> <condition_specification id=33> receipts are missing or do not match the report </condition_specification> , <actor id=25> he </actor> <activity id=34> sends </activity> <activity_data id=10> it </activity_data> back to <actor id=2> the employee </actor> . If a report returns to the employee for corrections , it must again go to a supervisor , even if the supervisor previously approved the report . If the treasurer accepts the expenses for processing , the report moves to an automatic activity that links to a payment system . The process waits for the payment confirmation . After <activity_data id=35> the payment </activity_data> is <activity id=36> confirmed </activity> , the process ends .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_persona.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1820, "output_tokens": 729, "total_costs": 0.040069999999999995, "answers": ["Facts about the process:\n- An employee purchases a product or service.\n- The employee submits an expense report with a list of items and receipts.\n- A supervisor reviews and approves or rejects the expense report.\n- If the supervisor rejects the report, the employee can edit it.\n- If the supervisor approves the report, it goes to the treasurer.\n- The treasurer checks the receipts and either accepts the expenses for processing or sends the report back to the employee for corrections.\n- If the treasurer accepts the expenses, the report moves to an automatic activity linked to a payment system.\n- The process waits for payment confirmation.\n- After the payment is confirmed, the process ends.\n\n-----\n\nuses\t4\t5\tthis activity_data mention is produced by the activity purchases\nuses\t6\t7\tthis activity_data mention is produced by the activity submits\nuses\t14\t8\tthis activity_data mention is produced by the activity reviews\nuses\t15\t9\tthis activity_data mention is produced by the activity approves or rejects\nuses\t18\t12\tthis activity_data mention is produced by the activity edit\nuses\t21\t11\tthis activity_data mention is produced by the activity goes\nuses\t26\t27\tthis activity_data mention is produced by the activity checks\nuses\t30\t31\tthis activity_data mention is produced by the activity accepts\nuses\t34\t10\tthis activity_data mention is produced by the activity sends\nuses\t36\t35\tthis activity_data mention is produced by the activity confirmed\n\nflow\t4\t6\tthe activity purchases is performed before the activity submits\nflow\t6\t14\tthe activity submits is performed before the activity reviews\nflow\t14\t15\tthe activity reviews is performed before the activity approves or rejects\nflow\t15\t18\tthe activity approves or rejects is performed before the activity edit, based on the condition of rejection\nflow\t15\t21\tthe activity approves or rejects is performed before the activity goes, based on the condition of approval\nflow\t21\t26\tthe activity goes is performed before the activity checks\nflow\t26\t30\tthe activity checks is performed before the activity accepts, based on the condition of all being in order\nflow\t26\t34\tthe activity checks is performed before the activity sends, based on the condition of discrepancies\nflow\t30\t36\tthe activity accepts is performed before the activity confirmed\n\nactor performer\t4\t0\tthe activity purchases is performed by an employee\nactor performer\t6\t1\tthe activity submits is performed by the employee\nactor performer\t14\t13\tthe activity reviews is performed by a supervisor\nactor performer\t18\t3\tthe activity edit is performed by the employee\nactor performer\t21\t23\tthe activity goes is performed by the treasurer\nactor performer\t26\t23\tthe activity checks is performed by the treasurer\nactor performer\t30\t24\tthe activity accepts is performed by the treasurer\nactor performer\t34\t25\tthe activity sends is performed by he (the treasurer)\n\nactor recipient\t34\t2\tthe activity sends is passively affecting the employee\n\nsame gateway\t16\t19\tboth XOR_Gateways describe different outcomes of the supervisor's decision\nsame gateway\t28\t32\tboth XOR_Gateways describe different outcomes of the treasurer's decision\n\nfurther specification\t14\t17\tthe activity reviews is further specified by the condition of rejection\nfurther specification\t15\t20\tthe activity approves or rejects is further specified by the condition of approval\nfurther specification\t26\t29\tthe activity checks is further specified by the condition of all being in order\nfurther specification\t26\t33\tthe activity checks is further specified by the condition of discrepancies"], "original_id": "doc-5.4"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Procedure\n\nLet's solve this task in 6 steps.\n\n1. Write a short list of facts about the process, then add a horizontal line (\"-----\")\n\n2. Detect all relations of type uses and list them in your answer.\n\n3. Detect all relations of type flow and list them in your answer.\n\n4. Detect all relations of type actor performer and actor recipient. In both cases focus on activities and find the actor, that is performing the activity, or is affected by its outcome respectively.\n\n5. Detect all relations of type same gateway and extract them. For this focus on XOR_Gateways and AND_Gateways.\n\n6. Detect all relations of type further specification and extract them. Focus on elements of type Activity and Further_Specification for this task.\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nI am the HR clerk . When <activity_data id=0> a vacancy </activity_data> is <activity id=1> reported </activity> to <actor id=7> me </actor> , <actor id=2> I </actor> <activity id=8> create </activity> <activity_data id=9> a job description from the information </activity_data> . <xor_gateway id=13> Sometimes </xor_gateway> <condition_specification id=14> there is still confusion in the message </condition_specification> , then <actor id=6> I </actor> must <activity id=15> ask </activity> <actor id=16> the Department </actor> again . <actor id=5> I </actor> am <activity id=17> submitting </activity> <activity_data id=10> the job description </activity_data> for consideration and <activity id=18> waiting </activity> for <activity_data id=19> the approval </activity_data> . But , <xor_gateway id=20> it can also happen that </xor_gateway> <condition_specification id=21> the department does not approve it </condition_specification> , but rejects it , and <activity id=22> requests </activity> <activity_data id=23> a correction </activity_data> . Then <actor id=4> I </actor> <activity id=24> correct </activity> <activity_data id=11> the description </activity_data> and <activity id=25> submit </activity> <activity_data id=12> it </activity_data> again for consideration . <xor_gateway id=26> If </xor_gateway> <condition_specification id=27> the description is finally approved </condition_specification> , <actor id=3> I </actor> <activity id=28> post </activity> <activity_data id=29> the job </activity_data> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_persona.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1576, "output_tokens": 555, "total_costs": 0.03241, "answers": ["Facts about the process:\n- The HR clerk is involved in handling vacancies, creating job descriptions, and submitting them for approval.\n- There can be confusion in the message received, requiring clarification from the department.\n- The job description may not be approved initially, requiring corrections and resubmission.\n- The process involves decision points where the outcome can lead to different actions (asking for clarification, correcting the job description).\n- The final step is posting the job if the description is approved.\n\n-----\n\nuses\t1\t0\tthis activity_data mention is produced by the activity reported\nuses\t8\t9\tthis activity_data mention is produced by the activity create\nuses\t17\t10\tthis activity_data mention is produced by the activity submitting\nuses\t18\t19\tthis activity_data mention is produced by the activity waiting\nuses\t22\t23\tthis activity_data mention is produced by the activity requests\nuses\t24\t11\tthis activity_data mention is produced by the activity correct\nuses\t25\t12\tthis activity_data mention is produced by the activity submit\nuses\t28\t29\tthis activity_data mention is produced by the activity post\n\nflow\t1\t8\tthe activity reported is followed by the activity create\nflow\t8\t17\tthe activity create is followed by the activity submitting\nflow\t17\t18\tthe activity submitting is followed by the activity waiting\nflow\t13\t14\tthe XOR_Gateway sometimes leads to the condition there is still confusion in the message\nflow\t15\t22\tthe activity ask is followed by the activity requests\nflow\t22\t24\tthe activity requests is followed by the activity correct\nflow\t24\t25\tthe activity correct is followed by the activity submit\nflow\t20\t21\tthe XOR_Gateway it can also happen that leads to the condition the department does not approve it\nflow\t26\t27\tthe XOR_Gateway If leads to the condition the description is finally approved\nflow\t25\t28\tthe activity submit is followed by the activity post\n\nactor performer\t1\t7\tthe activity reported is performed by the HR clerk\nactor performer\t8\t2\tthe activity create is performed by the HR clerk\nactor performer\t15\t6\tthe activity ask is performed by the HR clerk\nactor performer\t17\t5\tthe activity submitting is performed by the HR clerk\nactor performer\t22\t4\tthe activity requests is performed by the HR clerk\nactor performer\t24\t4\tthe activity correct is performed by the HR clerk\nactor performer\t25\t4\tthe activity submit is performed by the HR clerk\nactor performer\t28\t3\tthe activity post is performed by the HR clerk\n\nactor recipient\t15\t16\tthe activity ask is directed towards the Department\nactor recipient\t22\t16\tthe activity requests is directed towards the Department"], "original_id": "doc-8.2"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Procedure\n\nLet's solve this task in 6 steps.\n\n1. Write a short list of facts about the process, then add a horizontal line (\"-----\")\n\n2. Detect all relations of type uses and list them in your answer.\n\n3. Detect all relations of type flow and list them in your answer.\n\n4. Detect all relations of type actor performer and actor recipient. In both cases focus on activities and find the actor, that is performing the activity, or is affected by its outcome respectively.\n\n5. Detect all relations of type same gateway and extract them. For this focus on XOR_Gateways and AND_Gateways.\n\n6. Detect all relations of type further specification and extract them. Focus on elements of type Activity and Further_Specification for this task.\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nEach morning , <activity_data id=0> the files which have yet to be processed </activity_data> need to be <activity id=3> checked </activity> , to make sure they are in order for the court hearing that day . <xor_gateway id=4> If </xor_gateway> <condition_specification id=5> some files are missing </condition_specification> , <activity_data id=6> a search </activity_data> is <activity id=7> initiated </activity> , <xor_gateway id=8> otherwise </xor_gateway> <activity_data id=1> the files </activity_data> can be physically <activity id=9> tracked </activity> <further_specification id=10> to the intended location </further_specification> . Once all the files are ready , <activity_data id=2> these </activity_data> are <activity id=11> handed </activity> to <actor id=12> the Associate </actor> , and <and_gateway id=13> meantime </and_gateway> <activity_data id=14> the Judgeis Lawlist </activity_data> is <activity id=15> distributed </activity> to <actor id=16> the relevant people </actor> . Afterwards , <activity_data id=17> the directions hearings </activity_data> are <activity id=18> conducted </activity> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_persona.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1459, "output_tokens": 395, "total_costs": 0.026439999999999998, "answers": ["Facts about the process:\n- Files need to be checked each morning to ensure they are ready for the court hearing.\n- If some files are missing, a search is initiated.\n- If no files are missing, the files can be tracked to their intended location.\n- Once all files are ready, they are handed to the Associate.\n- Meanwhile, the Judge's Lawlist is distributed to the relevant people.\n- Afterwards, the directions hearings are conducted.\n\n-----\n\nuses\t3\t0\tthis activity_data mention is produced by the activity checked\nuses\t7\t6\tthis activity_data mention is produced by the activity initiated\nuses\t9\t1\tthis activity_data mention is produced by the activity tracked\nuses\t11\t2\tthis activity_data mention is produced by the activity handed\nuses\t15\t14\tthis activity_data mention is produced by the activity distributed\nuses\t18\t17\tthis activity_data mention is produced by the activity conducted\n\nflow\t3\t4\tthe activity checked is followed by a decision point\nflow\t4\t5\tthe XOR_Gateway leads to a condition where some files might be missing\nflow\t5\t7\tif the condition is met, the activity initiated follows\nflow\t7\t8\tif the search is initiated, it leads to another decision point\nflow\t4\t9\tif no files are missing, the activity tracked follows the decision point\nflow\t9\t11\tafter tracking the files, they are handed to the Associate\nflow\t11\t13\tafter handing the files, there's a parallel process starting\nflow\t13\t15\tmeantime, the Judge's Lawlist is distributed\nflow\t15\t18\tafter distributing the Judge's Lawlist, the directions hearings are conducted\n\nactor performer\t11\t12\tthe activity handed is performed by the Associate\nactor recipient\t15\t16\tthe activity distributed affects the relevant people\n\nfurther specification\t9\t10\tthe activity tracked is further specified by the intended location"], "original_id": "doc-3.2"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Procedure\n\nLet's solve this task in 6 steps.\n\n1. Write a short list of facts about the process, then add a horizontal line (\"-----\")\n\n2. Detect all relations of type uses and list them in your answer.\n\n3. Detect all relations of type flow and list them in your answer.\n\n4. Detect all relations of type actor performer and actor recipient. In both cases focus on activities and find the actor, that is performing the activity, or is affected by its outcome respectively.\n\n5. Detect all relations of type same gateway and extract them. For this focus on XOR_Gateways and AND_Gateways.\n\n6. Detect all relations of type further specification and extract them. Focus on elements of type Activity and Further_Specification for this task.\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nAs a basic principle , <actor id=0> ACME AG </actor> <activity id=1> receives </activity> <activity_data id=3> invoices </activity_data> on paper or fax . <activity_data id=2> These </activity_data> are <activity id=4> received </activity> by <actor id=5> the Secretariat </actor> in the central inbox and <activity id=6> forwarded </activity> after <further_specification id=7> a short visual </further_specification> <activity id=8> inspection </activity> to <actor id=9> an accounting employee </actor> . In `` ACME Financial Accounting `` , a software specially developed for the ACME AG , <actor id=10> she </actor> <activity id=18> identifies </activity> <activity_data id=19> the charging suppliers </activity_data> and <activity id=20> creates </activity> <activity_data id=21> a new instance </activity_data> ( invoice ) . <actor id=11> She </actor> then <activity id=22> checks </activity> <activity_data id=23> the invoice items </activity_data> and <activity id=24> notes </activity> <activity_data id=25> the corresponding cost center at the ACME AG and the related cost center managers for each position </activity_data> on a separate form ( `` docket `` ) . <activity_data id=26> The docket and the copy of the invoice </activity_data> <activity id=28> go </activity> to the internal mail together and are <activity id=29> sent </activity> to <actor id=30> the first cost center manager </actor> to the list . <actor id=31> He </actor> <activity id=33> reviews </activity> <activity_data id=34> the content </activity_data> <further_specification id=35> for accuracy </further_specification> after <activity id=36> receiving </activity> <activity_data id=37> the copy of the invoice </activity_data> . <xor_gateway id=43> Should </xor_gateway> <condition_specification id=44> everything be in order </condition_specification> , <actor id=32> he </actor> <activity id=45> notes </activity> <activity_data id=46> his code </activity_data> one <further_specification id=47> on the docket </further_specification> ( `` accurate position - AP `` ) and <activity id=48> returns </activity> <activity_data id=42> the copy of the invoice </activity_data> to <actor id=49> the internal mail </actor> . From it , <activity_data id=41> the copy of the invoice </activity_data> is <activity id=50> passed on </activity> to <actor id=51> the next cost center manager </actor> , based on the docket , or <xor_gateway id=52> if </xor_gateway> <condition_specification id=53> all items are marked correct </condition_specification> , <activity id=54> sent back </activity> to <actor id=55> accounting </actor> . Therefore , the copy of invoice and the docket gradually move through the hands of all cost center managers until all positions are marked as completely accurate . However , <xor_gateway id=56> if </xor_gateway> <condition_specification id=57> inconsistencies exist </condition_specification> , e.g . because the ordered product is not of the expected quantity or quality , <actor id=58> the cost center manager </actor> <activity id=59> rejects </activity> <activity_data id=60> the AP </activity_data> with a note and explanatory statement on the docket , and <activity_data id=40> the copy of the invoice </activity_data> is <activity id=61> sent back </activity> to <actor id=62> accounting </actor> directly . Based on the statements of the cost center managers , <actor id=17> she </actor> will <activity id=63> proceede </activity> with <activity_data id=64> the clarification with the vendor </activity_data> , but , <xor_gateway id=65> if </xor_gateway> <condition_specification id=66> necessary </condition_specification> , <actor id=16> she </actor> <activity id=67> consults </activity> <actor id=68> the cost center managers </actor> by telephone or e-mail again . When all inconsistencies are resolved , <activity_data id=39> the copy of the invoice </activity_data> is <activity id=70> sent </activity> to <actor id=69> the cost center managers </actor> again , and the process continues . After all invoice items are AP , <actor id=15> the accounting employee </actor> <activity id=71> forwards </activity> <activity_data id=38> the copy of the invoice </activity_data> to <actor id=72> the commercial manager </actor> . <actor id=73> He </actor> <activity id=74> makes </activity> <activity_data id=75> the commercial audit </activity_data> and <activity id=76> issues </activity> <activity_data id=77> the approval for payment </activity_data> . <xor_gateway id=78> If </xor_gateway> <condition_specification id=79> the bill amount exceeds EUR 20 </condition_specification> , <actor id=80> the Board </actor> wants to <activity id=81> check </activity> <activity_data id=82> it </activity_data> again ( 4 - eyes-principle ) . <activity_data id=27> The copy of the invoice including the docket </activity_data> <activity id=83> moves back </activity> to <actor id=14> the accounting employee </actor> <further_specification id=84> in the appropriate signature file </further_specification> . <xor_gateway id=85> Should </xor_gateway> <condition_specification id=86> there be a complaint during the commercial audit </condition_specification> , <activity_data id=87> it </activity_data> will be <activity id=88> resolved </activity> by <actor id=13> the accounting employee </actor> with the supplier . After the commercial audit is successfully completed , <actor id=12> the accounting employee </actor> <activity id=89> gives </activity> <activity_data id=90> payment instructions </activity_data> and <activity id=91> closes </activity> <activity_data id=92> the instance in `` ACME financial accounting `` </activity_data> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_persona.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 2611, "output_tokens": 1689, "total_costs": 0.07678, "answers": ["-----\n\n### Relations of type \"uses\"\n\nuses\t1\t3\tthe activity receives uses the activity_data invoices\nuses\t4\t2\tthe activity received uses the activity_data These\nuses\t6\t2\tthe activity forwarded uses the activity_data These\nuses\t18\t19\tthe activity identifies uses the activity_data the charging suppliers\nuses\t20\t21\tthe activity creates uses the activity_data a new instance\nuses\t22\t23\tthe activity checks uses the activity_data the invoice items\nuses\t24\t25\tthe activity notes uses the activity_data the corresponding cost center at the ACME AG and the related cost center managers for each position\nuses\t28\t26\tthe activity go uses the activity_data The docket and the copy of the invoice\nuses\t29\t26\tthe activity sent uses the activity_data The docket and the copy of the invoice\nuses\t33\t34\tthe activity reviews uses the activity_data the content\nuses\t36\t37\tthe activity receiving uses the activity_data the copy of the invoice\nuses\t45\t46\tthe activity notes uses the activity_data his code\nuses\t48\t42\tthe activity returns uses the activity_data the copy of the invoice\nuses\t50\t41\tthe activity passed on uses the activity_data the copy of the invoice\nuses\t54\t41\tthe activity sent back uses the activity_data the copy of the invoice\nuses\t59\t60\tthe activity rejects uses the activity_data the AP\nuses\t61\t40\tthe activity sent back uses the activity_data the copy of the invoice\nuses\t63\t64\tthe activity proceede uses the activity_data the clarification with the vendor\nuses\t70\t39\tthe activity sent uses the activity_data the copy of the invoice\nuses\t71\t38\tthe activity forwards uses the activity_data the copy of the invoice\nuses\t74\t75\tthe activity makes uses the activity_data the commercial audit\nuses\t76\t77\tthe activity issues uses the activity_data the approval for payment\nuses\t81\t82\tthe activity check uses the activity_data it\nuses\t83\t27\tthe activity moves back uses the activity_data The copy of the invoice including the docket\nuses\t88\t87\tthe activity resolved uses the activity_data it\nuses\t89\t90\tthe activity gives uses the activity_data payment instructions\nuses\t91\t92\tthe activity closes uses the activity_data the instance in \"ACME financial accounting\"\n\n### Relations of type \"flow\"\n\nflow\t1\t4\tActivity receives is followed by activity received\nflow\t4\t6\tActivity received is followed by activity forwarded\nflow\t6\t8\tActivity forwarded is followed by activity inspection\nflow\t8\t18\tActivity inspection is followed by activity identifies\nflow\t18\t20\tActivity identifies is followed by activity creates\nflow\t20\t22\tActivity creates is followed by activity checks\nflow\t22\t24\tActivity checks is followed by activity notes\nflow\t24\t28\tActivity notes is followed by activity go\nflow\t28\t29\tActivity go is followed by activity sent\nflow\t29\t33\tActivity sent is followed by activity reviews\nflow\t33\t36\tActivity reviews is followed by activity receiving\nflow\t36\t45\tActivity receiving is followed by activity notes\nflow\t45\t48\tActivity notes is followed by activity returns\nflow\t48\t50\tActivity returns is followed by activity passed on\nflow\t50\t54\tActivity passed on is followed by activity sent back\nflow\t54\t59\tActivity sent back is followed by activity rejects\nflow\t59\t61\tActivity rejects is followed by activity sent back\nflow\t61\t63\tActivity sent back is followed by activity proceede\nflow\t63\t67\tActivity proceede is followed by activity consults\nflow\t67\t70\tActivity consults is followed by activity sent\nflow\t70\t71\tActivity sent is followed by activity forwards\nflow\t71\t74\tActivity forwards is followed by activity makes\nflow\t74\t76\tActivity makes is followed by activity issues\nflow\t76\t81\tActivity issues is followed by activity check\nflow\t81\t83\tActivity check is followed by activity moves back\nflow\t83\t88\tActivity moves back is followed by activity resolved\nflow\t88\t89\tActivity resolved is followed by activity gives\nflow\t89\t91\tActivity gives is followed by activity closes\nflow\t43\t44\tXOR_Gateway Should is followed by Condition_Specification everything be in order\nflow\t52\t53\tXOR_Gateway if is followed by Condition_Specification all items are marked correct\nflow\t56\t57\tXOR_Gateway if is followed by Condition_Specification inconsistencies exist\nflow\t78\t79\tXOR_Gateway If is followed by Condition_Specification the bill amount exceeds EUR 20\nflow\t85\t86\tXOR_Gateway Should is followed by Condition_Specification there be a complaint during the commercial audit\n\n### Relations of type \"actor performer\" and \"actor recipient\"\n\nactor performer\t1\t0\tthe activity receives is performed by ACME AG\nactor performer\t4\t5\tthe activity received is performed by the Secretariat\nactor performer\t6\t5\tthe activity forwarded is performed by the Secretariat\nactor performer\t18\t10\tthe activity identifies is performed by she\nactor performer\t20\t10\tthe activity creates is performed by she\nactor performer\t22\t11\tthe activity checks is performed by She\nactor performer\t24\t11\tthe activity notes is performed by She\nactor performer\t28\t11\tthe activity go is performed by She\nactor performer\t29\t11\tthe activity sent is performed by She\nactor performer\t33\t31\tthe activity reviews is performed by He\nactor performer\t36\t31\tthe activity receiving is performed by He\nactor performer\t45\t32\tthe activity notes is performed by he\nactor performer\t48\t32\tthe activity returns is performed by he\nactor performer\t50\t32\tthe activity passed on is performed by he\nactor performer\t54\t32\tthe activity sent back is performed by he\nactor performer\t59\t58\tthe activity rejects is performed by the cost center manager\nactor performer\t61\t58\tthe activity sent back is performed by the cost center manager\nactor performer\t63\t17\tthe activity proceede is performed by she\nactor performer\t67\t16\tthe activity consults is performed by she\nactor performer\t70\t16\tthe activity sent is performed by she\nactor performer\t71\t15\tthe activity forwards is performed by the accounting employee\nactor performer\t74\t73\tthe activity makes is performed by He\nactor performer\t76\t73\tthe activity issues is performed by He\nactor performer\t81\t80\tthe activity check is performed by the Board\nactor performer\t83\t14\tthe activity moves back is performed by the accounting employee\nactor performer\t88\t13\tthe activity resolved is performed by the accounting employee\nactor performer\t89\t12\tthe activity gives is performed by the accounting employee\nactor performer\t91\t12\tthe activity closes is performed by the accounting employee\n\nactor recipient\t29\t30\tthe activity sent is received by the first cost center manager\nactor recipient\t50\t51\tthe activity passed on is received by the next cost center manager\nactor recipient\t54\t55\tthe activity sent back is received by accounting\nactor recipient\t61\t62\tthe activity sent back is received by accounting\nactor recipient\t70\t69\tthe activity sent is received by the cost center managers\nactor recipient\t71\t72\tthe activity forwards is received by the commercial manager\nactor recipient\t83\t14\tthe activity moves back is received by the accounting employee\n\n### Relations of type \"same gateway\"\n\nNo relations of type \"same gateway\" were found as there are no repeated mentions of the same XOR_Gateway or AND_Gateway describing the same decision point.\n\n### Relations of type \"further specification\"\n\nfurther_specification\t6\t7\tthe activity forwarded is further specified by a short visual inspection\nfurther_specification\t33\t35\tthe activity reviews is further specified for accuracy\nfurther_specification\t45\t47\tthe activity notes is further specified on the docket\nfurther_specification\t83\t84\tthe activity moves back is further specified in the appropriate signature file"], "original_id": "doc-6.1"}]}, {"meta": {"num_shots": 0, "model": "gpt-4-0125-preview", "temperature": 0.0}, "results": [{"prompts": ["System: # Context\n\nUse the system prompt when you refer to definitions of these BPMN elements, the task description, and additional requirements. Use the user input as a data source for your task.\n\n# Task Description\n\nYou are tasked with extracting relations between mentions of process relevant elements from a natural language text process description. These mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n## Definition of Relations\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **flow**: Focus on mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". If a condition_specification follows an XOR_Gateway connect the XOR_Gateway (source) to the Condition_Specification (target). If an Activity, XOR_Gateway, or AND_Gateway follows an Activity, connect the one appearing earlier (head) with the latter one (target). If an Activity, XOR_Gateway, AND_Gateway, or Condition_Specification follows an Activity, XOR_Gateway, AND_Gateway, or Condition Specification, connect the earlier one (source) to the latter one (target).\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **same gateway**: Textual descriptions of gateways are often spread over several phrases, especially the different outgoing paths, this relation links these disjointed descriptions together. Look for elements of type \"xor_gateway\" and \"and_gateway\". If you find another mention of the same type, check if they describe the same decision point in the process execution. If they do, extract a relation of type \"same gateway\", with the source mention being the one that appears earlier in the text, and the target mention being the one that appears later.\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n## Procedure\n\nLet's solve this task in 6 steps.\n\n1. Write a short list of facts about the process, then add a horizontal line (\"-----\")\n\n2. Detect all relations of type uses and list them in your answer.\n\n3. Detect all relations of type flow and list them in your answer.\n\n4. Detect all relations of type actor performer and actor recipient. In both cases focus on activities and find the actor, that is performing the activity, or is affected by its outcome respectively.\n\n5. Detect all relations of type same gateway and extract them. For this focus on XOR_Gateways and AND_Gateways.\n\n6. Detect all relations of type further specification and extract them. Focus on elements of type Activity and Further_Specification for this task.\n\n## Explanations\n\nAdditionally, for each relation you extract, please give a short explanation why you extracted it.\n\n# Restrictions\n\n## Additional considerations\n\nOnly extract relations with types, that are defined in chapter **Relation Types**.\n\n## Disambiguation\n\nBe mindful of the direction of relations of type flow. The source Activity is the one that is performed first, and the target the one performed after the first. The occurrence in the text is not enough to determine the direction, you have to reason using the text!\n\nGiven the text \"The LLM extracts mentions after it listed facts about the process.\", this would an incorrect flow relation. source: extracts, target: listed.\n\n## Format\n\nRetrieve a relation by listing the relation type, the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\t<explanation>\n\n### Placeholders\n\n- <relation-type>: the type of the relation, one of the ones listed above\n- <source-mention-index>: index of the source mention as given in its xml-like tag\n- <target-mention-index>: index of the target mention as given in its xml-like tag\n- <explanation>: short explanation why this relation was extracted\n\n### Input Example\n\nSentence 0: the <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\n### Output Example\n\nactor performer\t0\t1\tthe activity extracts is performed by the LLM\nuses\t0\t2\tthis activity_data mention is produced by the activity extracts\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=1> The MSPN </actor> <activity id=2> registers </activity> <activity_data id=3> the measurement </activity_data> at <actor id=4> the GO </actor> . <actor id=10> The GO </actor> <activity id=12> examines </activity> <activity_data id=13> the application of the MSPN </activity_data> . <actor id=9> The GO </actor> <activity id=16> rejects </activity> <activity_data id=15> the application of the MSPN </activity_data> <xor_gateway id=17> or </xor_gateway> <actor id=11> the GO </actor> <activity id=18> confirmes </activity> <activity_data id=14> the application of the MSPN </activity_data> . <actor id=8> The GO </actor> <activity id=19> assigns </activity> <activity_data id=0> the MSPN </activity_data> . <actor id=7> The GO </actor> <activity id=20> informs </activity> <actor id=21> the MSPO </actor> <activity_data id=22> about the assignment of MSPN </activity_data> . <actor id=6> The GO </actor> <activity id=25> informs </activity> <actor id=26> the MPO </actor> <activity_data id=23> about the assignment of the MSPN </activity_data> . <actor id=5> The GO </actor> <activity id=27> informs </activity> <actor id=28> the SP </actor> <activity_data id=24> about the assignment of MSPN </activity_data> .\n\n\n"], "steps": [["relations"]], "formatter_args": [{"prompt": "pet/re/ablation/no_persona.txt", "only_tags": null, "context_tags": null}], "formatters": ["PetRelationListingFormattingStrategy"], "input_tokens": 1537, "output_tokens": 506, "total_costs": 0.03055, "answers": ["-----\n\n### Relations of type \"uses\"\n\nuses\t2\t3\tthe activity_data mention is produced by the activity registers\nuses\t12\t13\tthis activity_data mention is produced by the activity examines\nuses\t16\t15\tthis activity_data mention is produced by the activity rejects\nuses\t18\t14\tthis activity_data mention is produced by the activity confirmes\nuses\t19\t0\tthis activity_data mention is produced by the activity assigns\nuses\t20\t22\tthis activity_data mention is produced by the activity informs\nuses\t25\t23\tthis activity_data mention is produced by the activity informs\nuses\t27\t24\tthis activity_data mention is produced by the activity informs\n\n### Relations of type \"flow\"\n\nflow\t2\t12\tthe activity registers is performed before the activity examines\nflow\t12\t16\tthe activity examines is performed before the activity rejects\nflow\t16\t18\tthe activity rejects is performed before the activity confirmes due to the xor_gateway\nflow\t18\t19\tthe activity confirmes is performed before the activity assigns\nflow\t19\t20\tthe activity assigns is performed before the activity informs (the first instance)\nflow\t20\t25\tthe activity informs (the first instance) is performed before the activity informs (the second instance)\nflow\t25\t27\tthe activity informs (the second instance) is performed before the activity informs (the third instance)\n\n### Relations of type \"actor performer\" and \"actor recipient\"\n\nactor performer\t2\t1\tthe activity registers is performed by The MSPN\nactor performer\t12\t10\tthe activity examines is performed by The GO\nactor performer\t16\t9\tthe activity rejects is performed by The GO\nactor performer\t18\t11\tthe activity confirmes is performed by The GO\nactor performer\t19\t8\tthe activity assigns is performed by The GO\nactor performer\t20\t7\tthe activity informs is performed by The GO\nactor performer\t25\t6\tthe activity informs is performed by The GO\nactor performer\t27\t5\tthe activity informs is performed by The GO\n\nactor recipient\t20\t21\tthe activity informs is received by the MSPO\nactor recipient\t25\t26\tthe activity informs is received by the MPO\nactor recipient\t27\t28\tthe activity informs is received by the SP\n\n### Relations of type \"same gateway\"\n\nNo relations of type \"same gateway\" are present in the text.\n\n### Relations of type \"further specification\"\n\nNo relations of type \"further specification\" are present in the text."], "original_id": "doc-10.7"}]}]