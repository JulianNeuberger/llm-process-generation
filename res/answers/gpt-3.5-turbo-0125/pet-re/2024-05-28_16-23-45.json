[{"meta": {"num_shots": 0, "model": "gpt-3.5-turbo-0125", "temperature": 0.0}, "results": [{"prompts": ["System: # Task\n\nYou are a business process modelling expert, tasked with identifying if two xor_gateways refer to the same decision point, and merely represent two possible paths in the process.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **same gateway**: Focus on XOR_Gateway mentions and their corresponding condition_specification. Find the next XOR_Gateway and its condition_specification in the text. If the two condition specifications describe the same decision, i.e., the first describes what to do in one case and the second in the other case, then extract a relation of type \"same gateway\" for the XOR_Gateways preceding the respective condition_specification.\n\n# Format\n\nDetect that two XOR_Gateways are the same, by listing the type of the relation (always \"same gateway\"), the index of the first one (source mention index), and the one appearing later in the text (target mention index), separated by tabs. List one relation per line.\n\nsame gateway\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\n<xor_gateway id=1> If </xor_gateway> <condition_specification id=0> the LLM finds two gateways that are the same </condition_specification>, <actor id=2> it </actor> <activity id=4> extracts </activity> <activity_data id=3> the relation </activity_data> . <xor_gateway id=5> Otherwise </xor_gateway> , <actor id=6> it </actor> <activity id=7> continues </activity> .\n\nYou will extract these relations\n\nsame gateway\t1\t5\n\n# Restrictions\n\nRule 1. Two XOR_Gateways or two AND_Gateway are only the same gateway, if they describe two paths of the same decision. There may appear multiple XOR_Gateways in the text, that are different decisions, and therefore are not the same gateway.\n\nRule 2. One XOR_Gateway be at most part of one \"same gateway\" relation.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nI am the Head of the functional department . When <actor id=0> I </actor> have <activity id=5> detected </activity> <activity_data id=6> a number of personnel requirements </activity_data> , <actor id=4> I </actor> <activity id=7> report </activity> <activity_data id=8> the vacancy </activity_data> to <actor id=9> the Personnel Department </actor> . Then <actor id=3> I </actor> wait to <activity id=10> get </activity> <activity_data id=12> the job description for review </activity_data> before <activity_data id=11> it </activity_data> is <activity id=14> advertized </activity> . <xor_gateway id=15> Under certain circumstances </xor_gateway> , <actor id=2> I </actor> must <activity id=16> ask </activity> for <activity_data id=17> corrections </activity_data> again , <xor_gateway id=18> otherwise </xor_gateway> <actor id=1> I </actor> <activity id=19> approve </activity> <activity_data id=13> the job description </activity_data> . Sometimes it also happens that the colleague from the HR department still has questions about the tasks and requirements before he can describe the job . Then I am available for clarifications , of course .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying the flow between business process relevant tasks in textual descriptions of business processes.\nThese tasks have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it. There are also some relations already extracted, which you can use for context during extracting flows.\n\n# Definition\n\nFlows are directed and therefore have a source mention and a target mention.\n\n**Flow**: Focus on the behavioural elements, which are mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". Extract the flow between behavioural elements, i.e., extract a relation of type \"flow\", if the text describes that one behavioural element is relevant during the process, before another behavioural element is.\nA flow relation between one behavioural element means, that it is relevant before another behavioural element, when the process is executed, e.g., if there is a flow between an \"XOR_Gateway\" and a \"Condition_Specification\" the XOR_Gateway is visited first (like an exclusive gateway in a BPMN process model), then the condition specification is relevant (like the condition in a BPMN process model). Afterwards there may be a flow between this \"Condition_Specification\" and an \"Activity\", because the condition is relevant first, and if it is fulfilled the employee has to perform the activity.\n\n# Format\n\nRetrieve a relation by listing the type (always \"flow\"), the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\nflow\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> and <activity id=3> sends </activity> <activity_data id=4> it </activity_data> back .\n\nYou will extract these relations\n\nflow\t0\t3\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nI am the Head of the functional department . When <actor id=0> I </actor> have <activity id=5> detected </activity> <activity_data id=6> a number of personnel requirements </activity_data> , <actor id=4> I </actor> <activity id=7> report </activity> <activity_data id=8> the vacancy </activity_data> to <actor id=9> the Personnel Department </actor> . Then <actor id=3> I </actor> wait to <activity id=10> get </activity> <activity_data id=12> the job description for review </activity_data> before <activity_data id=11> it </activity_data> is <activity id=14> advertized </activity> . <xor_gateway id=15> Under certain circumstances </xor_gateway> , <actor id=2> I </actor> must <activity id=16> ask </activity> for <activity_data id=17> corrections </activity_data> again , <xor_gateway id=18> otherwise </xor_gateway> <actor id=1> I </actor> <activity id=19> approve </activity> <activity_data id=13> the job description </activity_data> . Sometimes it also happens that the colleague from the HR department still has questions about the tasks and requirements before he can describe the job . Then I am available for clarifications , of course .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying relations between mentions of business process relevant facts in textual descriptions of business processes.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n# Format\n\nRetrieve a relation by listing the relation type, the source mention index, and the target mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\nYou will extract these relations\n\nactor performer\t0\t1\nuses\t0\t2\n\n# Restrictions\n\nRule 1. Only extract relations with types, that are defined in chapter **Relation Types**.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nI am the Head of the functional department . When <actor id=0> I </actor> have <activity id=5> detected </activity> <activity_data id=6> a number of personnel requirements </activity_data> , <actor id=4> I </actor> <activity id=7> report </activity> <activity_data id=8> the vacancy </activity_data> to <actor id=9> the Personnel Department </actor> . Then <actor id=3> I </actor> wait to <activity id=10> get </activity> <activity_data id=12> the job description for review </activity_data> before <activity_data id=11> it </activity_data> is <activity id=14> advertized </activity> . <xor_gateway id=15> Under certain circumstances </xor_gateway> , <actor id=2> I </actor> must <activity id=16> ask </activity> for <activity_data id=17> corrections </activity_data> again , <xor_gateway id=18> otherwise </xor_gateway> <actor id=1> I </actor> <activity id=19> approve </activity> <activity_data id=13> the job description </activity_data> . Sometimes it also happens that the colleague from the HR department still has questions about the tasks and requirements before he can describe the job . Then I am available for clarifications , of course .\n\nNo relations found.\n"], "steps": [["relations"], ["relations"], ["relations"]], "formatter_args": [{"prompt": "pet/re/iterative/same_gateway.txt", "only_tags": ["same gateway"], "context_tags": null}, {"prompt": "pet/re/iterative/flow.txt", "only_tags": ["flow"], "context_tags": null}, {"prompt": "pet/re/iterative/remaining.txt", "only_tags": ["uses", "actor performer", "actor recipient", "further specification"], "context_tags": null}], "formatters": ["PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy"], "input_tokens": 2351, "output_tokens": 37, "total_costs": 0.0012309999999999999, "answers": ["No relations found.", "flow\t5\t7\nflow\t7\t10\nflow\t10\t14\nflow\t14\t16\nflow\t16\t19", "No relations found."], "original_id": "doc-8.3"}]}, {"meta": {"num_shots": 0, "model": "gpt-3.5-turbo-0125", "temperature": 0.0}, "results": [{"prompts": ["System: # Task\n\nYou are a business process modelling expert, tasked with identifying if two xor_gateways refer to the same decision point, and merely represent two possible paths in the process.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **same gateway**: Focus on XOR_Gateway mentions and their corresponding condition_specification. Find the next XOR_Gateway and its condition_specification in the text. If the two condition specifications describe the same decision, i.e., the first describes what to do in one case and the second in the other case, then extract a relation of type \"same gateway\" for the XOR_Gateways preceding the respective condition_specification.\n\n# Format\n\nDetect that two XOR_Gateways are the same, by listing the type of the relation (always \"same gateway\"), the index of the first one (source mention index), and the one appearing later in the text (target mention index), separated by tabs. List one relation per line.\n\nsame gateway\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\n<xor_gateway id=1> If </xor_gateway> <condition_specification id=0> the LLM finds two gateways that are the same </condition_specification>, <actor id=2> it </actor> <activity id=4> extracts </activity> <activity_data id=3> the relation </activity_data> . <xor_gateway id=5> Otherwise </xor_gateway> , <actor id=6> it </actor> <activity id=7> continues </activity> .\n\nYou will extract these relations\n\nsame gateway\t1\t5\n\n# Restrictions\n\nRule 1. Two XOR_Gateways or two AND_Gateway are only the same gateway, if they describe two paths of the same decision. There may appear multiple XOR_Gateways in the text, that are different decisions, and therefore are not the same gateway.\n\nRule 2. One XOR_Gateway be at most part of one \"same gateway\" relation.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<activity_data id=0> The Police Report </activity_data> related to the car accident is <activity id=1> searched </activity> <further_specification id=2> within the Police Report database </further_specification> and <activity id=3> put </activity> <further_specification id=4> in a file together with the Claim Documentation </further_specification> . This file serves as input to a claims handler <actor id=5> who </actor> <activity id=7> calculates </activity> <activity_data id=8> an initial claim estimate </activity_data> . Then , <actor id=6> the claims handler </actor> <activity id=9> creates </activity> <activity_data id=10> an Action Plan </activity_data> based on an Action Plan Checklist available in the Document Management system . Based on the Action Plan , <actor id=11> a claims manager </actor> tries to <activity id=12> negotiate </activity> <activity_data id=13> a settlement </activity_data> on the claim estimate . <actor id=14> The claimant </actor> is <activity id=15> informed </activity> of <activity_data id=16> the outcome </activity_data> , which ends the process .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying the flow between business process relevant tasks in textual descriptions of business processes.\nThese tasks have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it. There are also some relations already extracted, which you can use for context during extracting flows.\n\n# Definition\n\nFlows are directed and therefore have a source mention and a target mention.\n\n**Flow**: Focus on the behavioural elements, which are mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". Extract the flow between behavioural elements, i.e., extract a relation of type \"flow\", if the text describes that one behavioural element is relevant during the process, before another behavioural element is.\nA flow relation between one behavioural element means, that it is relevant before another behavioural element, when the process is executed, e.g., if there is a flow between an \"XOR_Gateway\" and a \"Condition_Specification\" the XOR_Gateway is visited first (like an exclusive gateway in a BPMN process model), then the condition specification is relevant (like the condition in a BPMN process model). Afterwards there may be a flow between this \"Condition_Specification\" and an \"Activity\", because the condition is relevant first, and if it is fulfilled the employee has to perform the activity.\n\n# Format\n\nRetrieve a relation by listing the type (always \"flow\"), the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\nflow\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> and <activity id=3> sends </activity> <activity_data id=4> it </activity_data> back .\n\nYou will extract these relations\n\nflow\t0\t3\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<activity_data id=0> The Police Report </activity_data> related to the car accident is <activity id=1> searched </activity> <further_specification id=2> within the Police Report database </further_specification> and <activity id=3> put </activity> <further_specification id=4> in a file together with the Claim Documentation </further_specification> . This file serves as input to a claims handler <actor id=5> who </actor> <activity id=7> calculates </activity> <activity_data id=8> an initial claim estimate </activity_data> . Then , <actor id=6> the claims handler </actor> <activity id=9> creates </activity> <activity_data id=10> an Action Plan </activity_data> based on an Action Plan Checklist available in the Document Management system . Based on the Action Plan , <actor id=11> a claims manager </actor> tries to <activity id=12> negotiate </activity> <activity_data id=13> a settlement </activity_data> on the claim estimate . <actor id=14> The claimant </actor> is <activity id=15> informed </activity> of <activity_data id=16> the outcome </activity_data> , which ends the process .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying relations between mentions of business process relevant facts in textual descriptions of business processes.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n# Format\n\nRetrieve a relation by listing the relation type, the source mention index, and the target mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\nYou will extract these relations\n\nactor performer\t0\t1\nuses\t0\t2\n\n# Restrictions\n\nRule 1. Only extract relations with types, that are defined in chapter **Relation Types**.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<activity_data id=0> The Police Report </activity_data> related to the car accident is <activity id=1> searched </activity> <further_specification id=2> within the Police Report database </further_specification> and <activity id=3> put </activity> <further_specification id=4> in a file together with the Claim Documentation </further_specification> . This file serves as input to a claims handler <actor id=5> who </actor> <activity id=7> calculates </activity> <activity_data id=8> an initial claim estimate </activity_data> . Then , <actor id=6> the claims handler </actor> <activity id=9> creates </activity> <activity_data id=10> an Action Plan </activity_data> based on an Action Plan Checklist available in the Document Management system . Based on the Action Plan , <actor id=11> a claims manager </actor> tries to <activity id=12> negotiate </activity> <activity_data id=13> a settlement </activity_data> on the claim estimate . <actor id=14> The claimant </actor> is <activity id=15> informed </activity> of <activity_data id=16> the outcome </activity_data> , which ends the process .\n\nNo relations found.\n"], "steps": [["relations"], ["relations"], ["relations"]], "formatter_args": [{"prompt": "pet/re/iterative/same_gateway.txt", "only_tags": ["same gateway"], "context_tags": null}, {"prompt": "pet/re/iterative/flow.txt", "only_tags": ["flow"], "context_tags": null}, {"prompt": "pet/re/iterative/remaining.txt", "only_tags": ["uses", "actor performer", "actor recipient", "further specification"], "context_tags": null}], "formatters": ["PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy"], "input_tokens": 2282, "output_tokens": 78, "total_costs": 0.001258, "answers": ["No relations found.", "flow\t1\t3\nflow\t3\t7\nflow\t7\t9\nflow\t9\t12\nflow\t12\t15", "actor performer\t7\t5\nuses\t7\t8\nactor performer\t9\t6\nuses\t9\t10\nactor performer\t11\t14\nuses\t11\t13\nactor recipient\t15\t14"], "original_id": "doc-3.7"}]}, {"meta": {"num_shots": 0, "model": "gpt-3.5-turbo-0125", "temperature": 0.0}, "results": [{"prompts": ["System: # Task\n\nYou are a business process modelling expert, tasked with identifying if two xor_gateways refer to the same decision point, and merely represent two possible paths in the process.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **same gateway**: Focus on XOR_Gateway mentions and their corresponding condition_specification. Find the next XOR_Gateway and its condition_specification in the text. If the two condition specifications describe the same decision, i.e., the first describes what to do in one case and the second in the other case, then extract a relation of type \"same gateway\" for the XOR_Gateways preceding the respective condition_specification.\n\n# Format\n\nDetect that two XOR_Gateways are the same, by listing the type of the relation (always \"same gateway\"), the index of the first one (source mention index), and the one appearing later in the text (target mention index), separated by tabs. List one relation per line.\n\nsame gateway\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\n<xor_gateway id=1> If </xor_gateway> <condition_specification id=0> the LLM finds two gateways that are the same </condition_specification>, <actor id=2> it </actor> <activity id=4> extracts </activity> <activity_data id=3> the relation </activity_data> . <xor_gateway id=5> Otherwise </xor_gateway> , <actor id=6> it </actor> <activity id=7> continues </activity> .\n\nYou will extract these relations\n\nsame gateway\t1\t5\n\n# Restrictions\n\nRule 1. Two XOR_Gateways or two AND_Gateway are only the same gateway, if they describe two paths of the same decision. There may appear multiple XOR_Gateways in the text, that are different decisions, and therefore are not the same gateway.\n\nRule 2. One XOR_Gateway be at most part of one \"same gateway\" relation.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nEvery time we <activity id=0> get </activity> <activity_data id=1> a new order </activity_data> from <actor id=3> the sales department </actor> , first , <actor id=4> one of my masters </actor> <activity id=5> determines </activity> <activity_data id=6> the necessary parts and quantities as well as the delivery date </activity_data> . Once that information is present , <activity_data id=7> it </activity_data> has to be <activity id=8> entered </activity> into our production planning system ( PPS ) . It optimizes our production processes and creates possibly uniform work packages so that the setup times are minimized . Besides , <actor id=9> it </actor> <activity id=10> creates </activity> <activity_data id=11> a list of parts </activity_data> to be procured . Unfortunately it is not coupled correctly to our Enterprise Resource Planning system ( ERP ) , so <activity_data id=12> the data </activity_data> must be <activity id=13> transferred </activity> <further_specification id=14> manually </further_specification> . By the way , that is the second step . Once all the data is present , we need to decide whether <condition_specification id=15> any parts are missing </condition_specification> and must be <activity id=16> procured </activity> <xor_gateway id=17> or </xor_gateway> if this is not necessary . Once production is scheduled to start , <actor id=18> we </actor> <activity id=19> receive </activity> <activity_data id=20> a notice </activity_data> from the system and <actor id=21> an employee </actor> <activity id=22> takes care </activity> of <activity_data id=23> the implementation </activity_data> . Finally , <activity_data id=2> the order </activity_data> will be <activity id=24> checked </activity> again <further_specification id=25> for its quality </further_specification> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying the flow between business process relevant tasks in textual descriptions of business processes.\nThese tasks have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it. There are also some relations already extracted, which you can use for context during extracting flows.\n\n# Definition\n\nFlows are directed and therefore have a source mention and a target mention.\n\n**Flow**: Focus on the behavioural elements, which are mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". Extract the flow between behavioural elements, i.e., extract a relation of type \"flow\", if the text describes that one behavioural element is relevant during the process, before another behavioural element is.\nA flow relation between one behavioural element means, that it is relevant before another behavioural element, when the process is executed, e.g., if there is a flow between an \"XOR_Gateway\" and a \"Condition_Specification\" the XOR_Gateway is visited first (like an exclusive gateway in a BPMN process model), then the condition specification is relevant (like the condition in a BPMN process model). Afterwards there may be a flow between this \"Condition_Specification\" and an \"Activity\", because the condition is relevant first, and if it is fulfilled the employee has to perform the activity.\n\n# Format\n\nRetrieve a relation by listing the type (always \"flow\"), the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\nflow\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> and <activity id=3> sends </activity> <activity_data id=4> it </activity_data> back .\n\nYou will extract these relations\n\nflow\t0\t3\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nEvery time we <activity id=0> get </activity> <activity_data id=1> a new order </activity_data> from <actor id=3> the sales department </actor> , first , <actor id=4> one of my masters </actor> <activity id=5> determines </activity> <activity_data id=6> the necessary parts and quantities as well as the delivery date </activity_data> . Once that information is present , <activity_data id=7> it </activity_data> has to be <activity id=8> entered </activity> into our production planning system ( PPS ) . It optimizes our production processes and creates possibly uniform work packages so that the setup times are minimized . Besides , <actor id=9> it </actor> <activity id=10> creates </activity> <activity_data id=11> a list of parts </activity_data> to be procured . Unfortunately it is not coupled correctly to our Enterprise Resource Planning system ( ERP ) , so <activity_data id=12> the data </activity_data> must be <activity id=13> transferred </activity> <further_specification id=14> manually </further_specification> . By the way , that is the second step . Once all the data is present , we need to decide whether <condition_specification id=15> any parts are missing </condition_specification> and must be <activity id=16> procured </activity> <xor_gateway id=17> or </xor_gateway> if this is not necessary . Once production is scheduled to start , <actor id=18> we </actor> <activity id=19> receive </activity> <activity_data id=20> a notice </activity_data> from the system and <actor id=21> an employee </actor> <activity id=22> takes care </activity> of <activity_data id=23> the implementation </activity_data> . Finally , <activity_data id=2> the order </activity_data> will be <activity id=24> checked </activity> again <further_specification id=25> for its quality </further_specification> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying relations between mentions of business process relevant facts in textual descriptions of business processes.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n# Format\n\nRetrieve a relation by listing the relation type, the source mention index, and the target mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\nYou will extract these relations\n\nactor performer\t0\t1\nuses\t0\t2\n\n# Restrictions\n\nRule 1. Only extract relations with types, that are defined in chapter **Relation Types**.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nEvery time we <activity id=0> get </activity> <activity_data id=1> a new order </activity_data> from <actor id=3> the sales department </actor> , first , <actor id=4> one of my masters </actor> <activity id=5> determines </activity> <activity_data id=6> the necessary parts and quantities as well as the delivery date </activity_data> . Once that information is present , <activity_data id=7> it </activity_data> has to be <activity id=8> entered </activity> into our production planning system ( PPS ) . It optimizes our production processes and creates possibly uniform work packages so that the setup times are minimized . Besides , <actor id=9> it </actor> <activity id=10> creates </activity> <activity_data id=11> a list of parts </activity_data> to be procured . Unfortunately it is not coupled correctly to our Enterprise Resource Planning system ( ERP ) , so <activity_data id=12> the data </activity_data> must be <activity id=13> transferred </activity> <further_specification id=14> manually </further_specification> . By the way , that is the second step . Once all the data is present , we need to decide whether <condition_specification id=15> any parts are missing </condition_specification> and must be <activity id=16> procured </activity> <xor_gateway id=17> or </xor_gateway> if this is not necessary . Once production is scheduled to start , <actor id=18> we </actor> <activity id=19> receive </activity> <activity_data id=20> a notice </activity_data> from the system and <actor id=21> an employee </actor> <activity id=22> takes care </activity> of <activity_data id=23> the implementation </activity_data> . Finally , <activity_data id=2> the order </activity_data> will be <activity id=24> checked </activity> again <further_specification id=25> for its quality </further_specification> .\n\nNo relations found.\n"], "steps": [["relations"], ["relations"], ["relations"]], "formatter_args": [{"prompt": "pet/re/iterative/same_gateway.txt", "only_tags": ["same gateway"], "context_tags": null}, {"prompt": "pet/re/iterative/flow.txt", "only_tags": ["flow"], "context_tags": null}, {"prompt": "pet/re/iterative/remaining.txt", "only_tags": ["uses", "actor performer", "actor recipient", "further specification"], "context_tags": null}], "formatters": ["PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy"], "input_tokens": 2816, "output_tokens": 55, "total_costs": 0.0014905, "answers": ["No relations found.", "flow\t0\t5\nflow\t5\t8\nflow\t8\t10\nflow\t10\t13\nflow\t13\t16\nflow\t16\t19\nflow\t19\t22\nflow\t22\t24", "No relations found."], "original_id": "doc-6.3"}]}, {"meta": {"num_shots": 0, "model": "gpt-3.5-turbo-0125", "temperature": 0.0}, "results": [{"prompts": ["System: # Task\n\nYou are a business process modelling expert, tasked with identifying if two xor_gateways refer to the same decision point, and merely represent two possible paths in the process.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **same gateway**: Focus on XOR_Gateway mentions and their corresponding condition_specification. Find the next XOR_Gateway and its condition_specification in the text. If the two condition specifications describe the same decision, i.e., the first describes what to do in one case and the second in the other case, then extract a relation of type \"same gateway\" for the XOR_Gateways preceding the respective condition_specification.\n\n# Format\n\nDetect that two XOR_Gateways are the same, by listing the type of the relation (always \"same gateway\"), the index of the first one (source mention index), and the one appearing later in the text (target mention index), separated by tabs. List one relation per line.\n\nsame gateway\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\n<xor_gateway id=1> If </xor_gateway> <condition_specification id=0> the LLM finds two gateways that are the same </condition_specification>, <actor id=2> it </actor> <activity id=4> extracts </activity> <activity_data id=3> the relation </activity_data> . <xor_gateway id=5> Otherwise </xor_gateway> , <actor id=6> it </actor> <activity id=7> continues </activity> .\n\nYou will extract these relations\n\nsame gateway\t1\t5\n\n# Restrictions\n\nRule 1. Two XOR_Gateways or two AND_Gateway are only the same gateway, if they describe two paths of the same decision. There may appear multiple XOR_Gateways in the text, that are different decisions, and therefore are not the same gateway.\n\nRule 2. One XOR_Gateway be at most part of one \"same gateway\" relation.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nThe process starts periodically on the first of each month , when Assembler AG <activity id=0> places </activity> <activity_data id=1> an order </activity_data> with <actor id=4> the supplier </actor> <further_specification id=8> in order to request more product parts </further_specification> . a ) <actor id=9> Assembler AG </actor> <activity id=12> sends </activity> <activity_data id=2> the order </activity_data> to <actor id=5> the supplier </actor> . b ) <actor id=7> The supplier </actor> <activity id=13> processes </activity> <activity_data id=3> the order </activity_data> . c ) <actor id=6> The supplier </actor> <activity id=14> sends </activity> <activity_data id=15> an invoice </activity_data> to <actor id=11> Assembler AG </actor> . d ) <actor id=10> Assembler AG </actor> <activity id=17> receives </activity> <activity_data id=16> the invoice </activity_data> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying the flow between business process relevant tasks in textual descriptions of business processes.\nThese tasks have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it. There are also some relations already extracted, which you can use for context during extracting flows.\n\n# Definition\n\nFlows are directed and therefore have a source mention and a target mention.\n\n**Flow**: Focus on the behavioural elements, which are mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". Extract the flow between behavioural elements, i.e., extract a relation of type \"flow\", if the text describes that one behavioural element is relevant during the process, before another behavioural element is.\nA flow relation between one behavioural element means, that it is relevant before another behavioural element, when the process is executed, e.g., if there is a flow between an \"XOR_Gateway\" and a \"Condition_Specification\" the XOR_Gateway is visited first (like an exclusive gateway in a BPMN process model), then the condition specification is relevant (like the condition in a BPMN process model). Afterwards there may be a flow between this \"Condition_Specification\" and an \"Activity\", because the condition is relevant first, and if it is fulfilled the employee has to perform the activity.\n\n# Format\n\nRetrieve a relation by listing the type (always \"flow\"), the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\nflow\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> and <activity id=3> sends </activity> <activity_data id=4> it </activity_data> back .\n\nYou will extract these relations\n\nflow\t0\t3\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nThe process starts periodically on the first of each month , when Assembler AG <activity id=0> places </activity> <activity_data id=1> an order </activity_data> with <actor id=4> the supplier </actor> <further_specification id=8> in order to request more product parts </further_specification> . a ) <actor id=9> Assembler AG </actor> <activity id=12> sends </activity> <activity_data id=2> the order </activity_data> to <actor id=5> the supplier </actor> . b ) <actor id=7> The supplier </actor> <activity id=13> processes </activity> <activity_data id=3> the order </activity_data> . c ) <actor id=6> The supplier </actor> <activity id=14> sends </activity> <activity_data id=15> an invoice </activity_data> to <actor id=11> Assembler AG </actor> . d ) <actor id=10> Assembler AG </actor> <activity id=17> receives </activity> <activity_data id=16> the invoice </activity_data> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying relations between mentions of business process relevant facts in textual descriptions of business processes.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n# Format\n\nRetrieve a relation by listing the relation type, the source mention index, and the target mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\nYou will extract these relations\n\nactor performer\t0\t1\nuses\t0\t2\n\n# Restrictions\n\nRule 1. Only extract relations with types, that are defined in chapter **Relation Types**.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nThe process starts periodically on the first of each month , when Assembler AG <activity id=0> places </activity> <activity_data id=1> an order </activity_data> with <actor id=4> the supplier </actor> <further_specification id=8> in order to request more product parts </further_specification> . a ) <actor id=9> Assembler AG </actor> <activity id=12> sends </activity> <activity_data id=2> the order </activity_data> to <actor id=5> the supplier </actor> . b ) <actor id=7> The supplier </actor> <activity id=13> processes </activity> <activity_data id=3> the order </activity_data> . c ) <actor id=6> The supplier </actor> <activity id=14> sends </activity> <activity_data id=15> an invoice </activity_data> to <actor id=11> Assembler AG </actor> . d ) <actor id=10> Assembler AG </actor> <activity id=17> receives </activity> <activity_data id=16> the invoice </activity_data> .\n\nNo relations found.\n"], "steps": [["relations"], ["relations"], ["relations"]], "formatter_args": [{"prompt": "pet/re/iterative/same_gateway.txt", "only_tags": ["same gateway"], "context_tags": null}, {"prompt": "pet/re/iterative/flow.txt", "only_tags": ["flow"], "context_tags": null}, {"prompt": "pet/re/iterative/remaining.txt", "only_tags": ["uses", "actor performer", "actor recipient", "further specification"], "context_tags": null}], "formatters": ["PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy"], "input_tokens": 2210, "output_tokens": 12, "total_costs": 0.0011229999999999999, "answers": ["No relations found.", "No relations found.", "No relations found."], "original_id": "doc-6.2"}]}, {"meta": {"num_shots": 0, "model": "gpt-3.5-turbo-0125", "temperature": 0.0}, "results": [{"prompts": ["System: # Task\n\nYou are a business process modelling expert, tasked with identifying if two xor_gateways refer to the same decision point, and merely represent two possible paths in the process.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **same gateway**: Focus on XOR_Gateway mentions and their corresponding condition_specification. Find the next XOR_Gateway and its condition_specification in the text. If the two condition specifications describe the same decision, i.e., the first describes what to do in one case and the second in the other case, then extract a relation of type \"same gateway\" for the XOR_Gateways preceding the respective condition_specification.\n\n# Format\n\nDetect that two XOR_Gateways are the same, by listing the type of the relation (always \"same gateway\"), the index of the first one (source mention index), and the one appearing later in the text (target mention index), separated by tabs. List one relation per line.\n\nsame gateway\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\n<xor_gateway id=1> If </xor_gateway> <condition_specification id=0> the LLM finds two gateways that are the same </condition_specification>, <actor id=2> it </actor> <activity id=4> extracts </activity> <activity_data id=3> the relation </activity_data> . <xor_gateway id=5> Otherwise </xor_gateway> , <actor id=6> it </actor> <activity id=7> continues </activity> .\n\nYou will extract these relations\n\nsame gateway\t1\t5\n\n# Restrictions\n\nRule 1. Two XOR_Gateways or two AND_Gateway are only the same gateway, if they describe two paths of the same decision. There may appear multiple XOR_Gateways in the text, that are different decisions, and therefore are not the same gateway.\n\nRule 2. One XOR_Gateway be at most part of one \"same gateway\" relation.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nAfter <activity_data id=0> a claim </activity_data> is <activity id=4> registered </activity> , <activity_data id=2> it </activity_data> is <activity id=5> examined </activity> by <actor id=6> a claims officer </actor> . <actor id=7> The claims officer </actor> then <activity id=9> writes </activity> <activity_data id=10> a settlement recommendation </activity_data> . <activity_data id=11> This recommendation </activity_data> is then <activity id=12> checked </activity> by <actor id=13> a senior claims officer </actor> who may <activity id=14> mark </activity> <activity_data id=3> the claim </activity_data> <further_specification id=15> as OK or Not OK </further_specification> . <xor_gateway id=16> If </xor_gateway> <condition_specification id=17> the claim is marked as Not OK </condition_specification> , <activity_data id=1> it </activity_data> is <activity id=18> sent back </activity> to <actor id=8> the claims officer </actor> and the recommendation is repeated . <xor_gateway id=19> If </xor_gateway> <condition_specification id=20> the claim is OK </condition_specification> , <activity_data id=21> the claim handling process </activity_data> <activity id=22> proceeds </activity> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying the flow between business process relevant tasks in textual descriptions of business processes.\nThese tasks have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it. There are also some relations already extracted, which you can use for context during extracting flows.\n\n# Definition\n\nFlows are directed and therefore have a source mention and a target mention.\n\n**Flow**: Focus on the behavioural elements, which are mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". Extract the flow between behavioural elements, i.e., extract a relation of type \"flow\", if the text describes that one behavioural element is relevant during the process, before another behavioural element is.\nA flow relation between one behavioural element means, that it is relevant before another behavioural element, when the process is executed, e.g., if there is a flow between an \"XOR_Gateway\" and a \"Condition_Specification\" the XOR_Gateway is visited first (like an exclusive gateway in a BPMN process model), then the condition specification is relevant (like the condition in a BPMN process model). Afterwards there may be a flow between this \"Condition_Specification\" and an \"Activity\", because the condition is relevant first, and if it is fulfilled the employee has to perform the activity.\n\n# Format\n\nRetrieve a relation by listing the type (always \"flow\"), the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\nflow\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> and <activity id=3> sends </activity> <activity_data id=4> it </activity_data> back .\n\nYou will extract these relations\n\nflow\t0\t3\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nAfter <activity_data id=0> a claim </activity_data> is <activity id=4> registered </activity> , <activity_data id=2> it </activity_data> is <activity id=5> examined </activity> by <actor id=6> a claims officer </actor> . <actor id=7> The claims officer </actor> then <activity id=9> writes </activity> <activity_data id=10> a settlement recommendation </activity_data> . <activity_data id=11> This recommendation </activity_data> is then <activity id=12> checked </activity> by <actor id=13> a senior claims officer </actor> who may <activity id=14> mark </activity> <activity_data id=3> the claim </activity_data> <further_specification id=15> as OK or Not OK </further_specification> . <xor_gateway id=16> If </xor_gateway> <condition_specification id=17> the claim is marked as Not OK </condition_specification> , <activity_data id=1> it </activity_data> is <activity id=18> sent back </activity> to <actor id=8> the claims officer </actor> and the recommendation is repeated . <xor_gateway id=19> If </xor_gateway> <condition_specification id=20> the claim is OK </condition_specification> , <activity_data id=21> the claim handling process </activity_data> <activity id=22> proceeds </activity> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying relations between mentions of business process relevant facts in textual descriptions of business processes.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n# Format\n\nRetrieve a relation by listing the relation type, the source mention index, and the target mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\nYou will extract these relations\n\nactor performer\t0\t1\nuses\t0\t2\n\n# Restrictions\n\nRule 1. Only extract relations with types, that are defined in chapter **Relation Types**.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nAfter <activity_data id=0> a claim </activity_data> is <activity id=4> registered </activity> , <activity_data id=2> it </activity_data> is <activity id=5> examined </activity> by <actor id=6> a claims officer </actor> . <actor id=7> The claims officer </actor> then <activity id=9> writes </activity> <activity_data id=10> a settlement recommendation </activity_data> . <activity_data id=11> This recommendation </activity_data> is then <activity id=12> checked </activity> by <actor id=13> a senior claims officer </actor> who may <activity id=14> mark </activity> <activity_data id=3> the claim </activity_data> <further_specification id=15> as OK or Not OK </further_specification> . <xor_gateway id=16> If </xor_gateway> <condition_specification id=17> the claim is marked as Not OK </condition_specification> , <activity_data id=1> it </activity_data> is <activity id=18> sent back </activity> to <actor id=8> the claims officer </actor> and the recommendation is repeated . <xor_gateway id=19> If </xor_gateway> <condition_specification id=20> the claim is OK </condition_specification> , <activity_data id=21> the claim handling process </activity_data> <activity id=22> proceeds </activity> .\n\nNo relations found.\n"], "steps": [["relations"], ["relations"], ["relations"]], "formatter_args": [{"prompt": "pet/re/iterative/same_gateway.txt", "only_tags": ["same gateway"], "context_tags": null}, {"prompt": "pet/re/iterative/flow.txt", "only_tags": ["flow"], "context_tags": null}, {"prompt": "pet/re/iterative/remaining.txt", "only_tags": ["uses", "actor performer", "actor recipient", "further specification"], "context_tags": null}], "formatters": ["PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy"], "input_tokens": 2420, "output_tokens": 43, "total_costs": 0.0012745, "answers": ["No relations found.", "flow\t4\t5\nflow\t5\t9\nflow\t9\t12\nflow\t12\t14\nflow\t14\t18\nflow\t14\t22", "No relations found."], "original_id": "doc-3.3"}]}, {"meta": {"num_shots": 0, "model": "gpt-3.5-turbo-0125", "temperature": 0.0}, "results": [{"prompts": ["System: # Task\n\nYou are a business process modelling expert, tasked with identifying if two xor_gateways refer to the same decision point, and merely represent two possible paths in the process.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **same gateway**: Focus on XOR_Gateway mentions and their corresponding condition_specification. Find the next XOR_Gateway and its condition_specification in the text. If the two condition specifications describe the same decision, i.e., the first describes what to do in one case and the second in the other case, then extract a relation of type \"same gateway\" for the XOR_Gateways preceding the respective condition_specification.\n\n# Format\n\nDetect that two XOR_Gateways are the same, by listing the type of the relation (always \"same gateway\"), the index of the first one (source mention index), and the one appearing later in the text (target mention index), separated by tabs. List one relation per line.\n\nsame gateway\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\n<xor_gateway id=1> If </xor_gateway> <condition_specification id=0> the LLM finds two gateways that are the same </condition_specification>, <actor id=2> it </actor> <activity id=4> extracts </activity> <activity_data id=3> the relation </activity_data> . <xor_gateway id=5> Otherwise </xor_gateway> , <actor id=6> it </actor> <activity id=7> continues </activity> .\n\nYou will extract these relations\n\nsame gateway\t1\t5\n\n# Restrictions\n\nRule 1. Two XOR_Gateways or two AND_Gateway are only the same gateway, if they describe two paths of the same decision. There may appear multiple XOR_Gateways in the text, that are different decisions, and therefore are not the same gateway.\n\nRule 2. One XOR_Gateway be at most part of one \"same gateway\" relation.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nWhenever <actor id=0> a company </actor> <activity id=1> makes </activity> <activity_data id=2> the decision to go public </activity_data> , its first task is to <activity id=3> select </activity> <activity_data id=4> the underwriters </activity_data> . Underwriters act as financial midwives to a new issue . Usually they play a triple role : First they provide the company with procedural and financial advice , then they buy the issue , and finally they resell it to the public . Established underwriters are careful of their reputation and will not handle a new issue unless they believe the facts have been presented fairly . Thus , in addition to handling the sale of a company \u2019 s issue , the underwriters in effect give their seal of approval to it . <actor id=6> They </actor> <activity id=11> prepare </activity> <activity_data id=12> a registration statement for the approval of the Securities and Exchange Commission ( SEC ) </activity_data> . In addition to registering the issue with the SEC , <actor id=8> they </actor> need to <activity id=13> check </activity> <further_specification id=14> that the issue complies with the so-called blue-sky laws of each state that regulate sales of securities within the state </further_specification> . <and_gateway id=15> While </and_gateway> the registration statement is <activity id=16> awaiting </activity> <activity_data id=17> approval </activity_data> , <actor id=10> underwriters </actor> begin to <activity id=18> firm up </activity> <activity_data id=19> the issue price </activity_data> . <actor id=5> They </actor> <activity id=21> arrange </activity> <activity_data id=22> a road show </activity_data> <further_specification id=23> to talk to potential investors </further_specification> . Immediately after they <activity id=24> receive </activity> <activity_data id=25> clearance </activity_data> from the SEC , <actor id=9> underwriters </actor> <activity id=26> fix </activity> <activity_data id=20> the issue price </activity_data> . After that <actor id=7> they </actor> <activity id=27> enter </activity> <activity_data id=28> into a firm commitment to buy the stock </activity_data> and then <activity id=29> offer </activity> <activity_data id=30> it </activity_data> to <actor id=31> the public </actor> , when they haven \u2019 t still found any reason not to do it .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying the flow between business process relevant tasks in textual descriptions of business processes.\nThese tasks have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it. There are also some relations already extracted, which you can use for context during extracting flows.\n\n# Definition\n\nFlows are directed and therefore have a source mention and a target mention.\n\n**Flow**: Focus on the behavioural elements, which are mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". Extract the flow between behavioural elements, i.e., extract a relation of type \"flow\", if the text describes that one behavioural element is relevant during the process, before another behavioural element is.\nA flow relation between one behavioural element means, that it is relevant before another behavioural element, when the process is executed, e.g., if there is a flow between an \"XOR_Gateway\" and a \"Condition_Specification\" the XOR_Gateway is visited first (like an exclusive gateway in a BPMN process model), then the condition specification is relevant (like the condition in a BPMN process model). Afterwards there may be a flow between this \"Condition_Specification\" and an \"Activity\", because the condition is relevant first, and if it is fulfilled the employee has to perform the activity.\n\n# Format\n\nRetrieve a relation by listing the type (always \"flow\"), the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\nflow\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> and <activity id=3> sends </activity> <activity_data id=4> it </activity_data> back .\n\nYou will extract these relations\n\nflow\t0\t3\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nWhenever <actor id=0> a company </actor> <activity id=1> makes </activity> <activity_data id=2> the decision to go public </activity_data> , its first task is to <activity id=3> select </activity> <activity_data id=4> the underwriters </activity_data> . Underwriters act as financial midwives to a new issue . Usually they play a triple role : First they provide the company with procedural and financial advice , then they buy the issue , and finally they resell it to the public . Established underwriters are careful of their reputation and will not handle a new issue unless they believe the facts have been presented fairly . Thus , in addition to handling the sale of a company \u2019 s issue , the underwriters in effect give their seal of approval to it . <actor id=6> They </actor> <activity id=11> prepare </activity> <activity_data id=12> a registration statement for the approval of the Securities and Exchange Commission ( SEC ) </activity_data> . In addition to registering the issue with the SEC , <actor id=8> they </actor> need to <activity id=13> check </activity> <further_specification id=14> that the issue complies with the so-called blue-sky laws of each state that regulate sales of securities within the state </further_specification> . <and_gateway id=15> While </and_gateway> the registration statement is <activity id=16> awaiting </activity> <activity_data id=17> approval </activity_data> , <actor id=10> underwriters </actor> begin to <activity id=18> firm up </activity> <activity_data id=19> the issue price </activity_data> . <actor id=5> They </actor> <activity id=21> arrange </activity> <activity_data id=22> a road show </activity_data> <further_specification id=23> to talk to potential investors </further_specification> . Immediately after they <activity id=24> receive </activity> <activity_data id=25> clearance </activity_data> from the SEC , <actor id=9> underwriters </actor> <activity id=26> fix </activity> <activity_data id=20> the issue price </activity_data> . After that <actor id=7> they </actor> <activity id=27> enter </activity> <activity_data id=28> into a firm commitment to buy the stock </activity_data> and then <activity id=29> offer </activity> <activity_data id=30> it </activity_data> to <actor id=31> the public </actor> , when they haven \u2019 t still found any reason not to do it .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying relations between mentions of business process relevant facts in textual descriptions of business processes.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n# Format\n\nRetrieve a relation by listing the relation type, the source mention index, and the target mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\nYou will extract these relations\n\nactor performer\t0\t1\nuses\t0\t2\n\n# Restrictions\n\nRule 1. Only extract relations with types, that are defined in chapter **Relation Types**.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nWhenever <actor id=0> a company </actor> <activity id=1> makes </activity> <activity_data id=2> the decision to go public </activity_data> , its first task is to <activity id=3> select </activity> <activity_data id=4> the underwriters </activity_data> . Underwriters act as financial midwives to a new issue . Usually they play a triple role : First they provide the company with procedural and financial advice , then they buy the issue , and finally they resell it to the public . Established underwriters are careful of their reputation and will not handle a new issue unless they believe the facts have been presented fairly . Thus , in addition to handling the sale of a company \u2019 s issue , the underwriters in effect give their seal of approval to it . <actor id=6> They </actor> <activity id=11> prepare </activity> <activity_data id=12> a registration statement for the approval of the Securities and Exchange Commission ( SEC ) </activity_data> . In addition to registering the issue with the SEC , <actor id=8> they </actor> need to <activity id=13> check </activity> <further_specification id=14> that the issue complies with the so-called blue-sky laws of each state that regulate sales of securities within the state </further_specification> . <and_gateway id=15> While </and_gateway> the registration statement is <activity id=16> awaiting </activity> <activity_data id=17> approval </activity_data> , <actor id=10> underwriters </actor> begin to <activity id=18> firm up </activity> <activity_data id=19> the issue price </activity_data> . <actor id=5> They </actor> <activity id=21> arrange </activity> <activity_data id=22> a road show </activity_data> <further_specification id=23> to talk to potential investors </further_specification> . Immediately after they <activity id=24> receive </activity> <activity_data id=25> clearance </activity_data> from the SEC , <actor id=9> underwriters </actor> <activity id=26> fix </activity> <activity_data id=20> the issue price </activity_data> . After that <actor id=7> they </actor> <activity id=27> enter </activity> <activity_data id=28> into a firm commitment to buy the stock </activity_data> and then <activity id=29> offer </activity> <activity_data id=30> it </activity_data> to <actor id=31> the public </actor> , when they haven \u2019 t still found any reason not to do it .\n\nNo relations found.\n"], "steps": [["relations"], ["relations"], ["relations"]], "formatter_args": [{"prompt": "pet/re/iterative/same_gateway.txt", "only_tags": ["same gateway"], "context_tags": null}, {"prompt": "pet/re/iterative/flow.txt", "only_tags": ["flow"], "context_tags": null}, {"prompt": "pet/re/iterative/remaining.txt", "only_tags": ["uses", "actor performer", "actor recipient", "further specification"], "context_tags": null}], "formatters": ["PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy"], "input_tokens": 3197, "output_tokens": 67, "total_costs": 0.001699, "answers": ["No relations found.", "flow\t1\t3\nflow\t4\t11\nflow\t12\t13\nflow\t13\t15\nflow\t16\t18\nflow\t19\t21\nflow\t22\t24\nflow\t25\t26\nflow\t20\t27\nflow\t28\t29", "No relations found."], "original_id": "doc-1.4"}]}, {"meta": {"num_shots": 0, "model": "gpt-3.5-turbo-0125", "temperature": 0.0}, "results": [{"prompts": ["System: # Task\n\nYou are a business process modelling expert, tasked with identifying if two xor_gateways refer to the same decision point, and merely represent two possible paths in the process.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **same gateway**: Focus on XOR_Gateway mentions and their corresponding condition_specification. Find the next XOR_Gateway and its condition_specification in the text. If the two condition specifications describe the same decision, i.e., the first describes what to do in one case and the second in the other case, then extract a relation of type \"same gateway\" for the XOR_Gateways preceding the respective condition_specification.\n\n# Format\n\nDetect that two XOR_Gateways are the same, by listing the type of the relation (always \"same gateway\"), the index of the first one (source mention index), and the one appearing later in the text (target mention index), separated by tabs. List one relation per line.\n\nsame gateway\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\n<xor_gateway id=1> If </xor_gateway> <condition_specification id=0> the LLM finds two gateways that are the same </condition_specification>, <actor id=2> it </actor> <activity id=4> extracts </activity> <activity_data id=3> the relation </activity_data> . <xor_gateway id=5> Otherwise </xor_gateway> , <actor id=6> it </actor> <activity id=7> continues </activity> .\n\nYou will extract these relations\n\nsame gateway\t1\t5\n\n# Restrictions\n\nRule 1. Two XOR_Gateways or two AND_Gateway are only the same gateway, if they describe two paths of the same decision. There may appear multiple XOR_Gateways in the text, that are different decisions, and therefore are not the same gateway.\n\nRule 2. One XOR_Gateway be at most part of one \"same gateway\" relation.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The MSPO </actor> <activity id=2> deregisters </activity> at <actor id=4> the GO </actor> . <actor id=10> The GO </actor> <activity id=12> verifies </activity> <activity_data id=13> the deregistration </activity_data> . <actor id=9> The GO </actor> <activity id=16> rejects </activity> <activity_data id=15> the deregistration of the MSPO </activity_data> <xor_gateway id=17> or </xor_gateway> <actor id=11> the GO </actor> <further_specification id=18> preliminarily </further_specification> <activity id=19> confirms </activity> <activity_data id=14> the deregistration of the MSPO </activity_data> . <actor id=8> The GO </actor> <activity id=20> assigns </activity> <activity_data id=3> himself </activity_data> <further_specification id=21> as MSP </further_specification> . <actor id=7> The GO </actor> <activity id=22> informs </activity> <actor id=1> the MSPO </actor> <activity_data id=23> about the end of the assignment and the beginning of the assignment of the GO </activity_data> . <actor id=6> The GO </actor> <activity id=24> informs </activity> <actor id=25> the MPO </actor> <activity_data id=26> about the assignment of the GO </activity_data> . <actor id=5> The GO </actor> <activity id=27> informs </activity> <actor id=28> the SP </actor> <activity_data id=29> about the assignment of the GO </activity_data> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying the flow between business process relevant tasks in textual descriptions of business processes.\nThese tasks have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it. There are also some relations already extracted, which you can use for context during extracting flows.\n\n# Definition\n\nFlows are directed and therefore have a source mention and a target mention.\n\n**Flow**: Focus on the behavioural elements, which are mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". Extract the flow between behavioural elements, i.e., extract a relation of type \"flow\", if the text describes that one behavioural element is relevant during the process, before another behavioural element is.\nA flow relation between one behavioural element means, that it is relevant before another behavioural element, when the process is executed, e.g., if there is a flow between an \"XOR_Gateway\" and a \"Condition_Specification\" the XOR_Gateway is visited first (like an exclusive gateway in a BPMN process model), then the condition specification is relevant (like the condition in a BPMN process model). Afterwards there may be a flow between this \"Condition_Specification\" and an \"Activity\", because the condition is relevant first, and if it is fulfilled the employee has to perform the activity.\n\n# Format\n\nRetrieve a relation by listing the type (always \"flow\"), the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\nflow\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> and <activity id=3> sends </activity> <activity_data id=4> it </activity_data> back .\n\nYou will extract these relations\n\nflow\t0\t3\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The MSPO </actor> <activity id=2> deregisters </activity> at <actor id=4> the GO </actor> . <actor id=10> The GO </actor> <activity id=12> verifies </activity> <activity_data id=13> the deregistration </activity_data> . <actor id=9> The GO </actor> <activity id=16> rejects </activity> <activity_data id=15> the deregistration of the MSPO </activity_data> <xor_gateway id=17> or </xor_gateway> <actor id=11> the GO </actor> <further_specification id=18> preliminarily </further_specification> <activity id=19> confirms </activity> <activity_data id=14> the deregistration of the MSPO </activity_data> . <actor id=8> The GO </actor> <activity id=20> assigns </activity> <activity_data id=3> himself </activity_data> <further_specification id=21> as MSP </further_specification> . <actor id=7> The GO </actor> <activity id=22> informs </activity> <actor id=1> the MSPO </actor> <activity_data id=23> about the end of the assignment and the beginning of the assignment of the GO </activity_data> . <actor id=6> The GO </actor> <activity id=24> informs </activity> <actor id=25> the MPO </actor> <activity_data id=26> about the assignment of the GO </activity_data> . <actor id=5> The GO </actor> <activity id=27> informs </activity> <actor id=28> the SP </actor> <activity_data id=29> about the assignment of the GO </activity_data> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying relations between mentions of business process relevant facts in textual descriptions of business processes.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n# Format\n\nRetrieve a relation by listing the relation type, the source mention index, and the target mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\nYou will extract these relations\n\nactor performer\t0\t1\nuses\t0\t2\n\n# Restrictions\n\nRule 1. Only extract relations with types, that are defined in chapter **Relation Types**.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The MSPO </actor> <activity id=2> deregisters </activity> at <actor id=4> the GO </actor> . <actor id=10> The GO </actor> <activity id=12> verifies </activity> <activity_data id=13> the deregistration </activity_data> . <actor id=9> The GO </actor> <activity id=16> rejects </activity> <activity_data id=15> the deregistration of the MSPO </activity_data> <xor_gateway id=17> or </xor_gateway> <actor id=11> the GO </actor> <further_specification id=18> preliminarily </further_specification> <activity id=19> confirms </activity> <activity_data id=14> the deregistration of the MSPO </activity_data> . <actor id=8> The GO </actor> <activity id=20> assigns </activity> <activity_data id=3> himself </activity_data> <further_specification id=21> as MSP </further_specification> . <actor id=7> The GO </actor> <activity id=22> informs </activity> <actor id=1> the MSPO </actor> <activity_data id=23> about the end of the assignment and the beginning of the assignment of the GO </activity_data> . <actor id=6> The GO </actor> <activity id=24> informs </activity> <actor id=25> the MPO </actor> <activity_data id=26> about the assignment of the GO </activity_data> . <actor id=5> The GO </actor> <activity id=27> informs </activity> <actor id=28> the SP </actor> <activity_data id=29> about the assignment of the GO </activity_data> .\n\nNo relations found.\n"], "steps": [["relations"], ["relations"], ["relations"]], "formatter_args": [{"prompt": "pet/re/iterative/same_gateway.txt", "only_tags": ["same gateway"], "context_tags": null}, {"prompt": "pet/re/iterative/flow.txt", "only_tags": ["flow"], "context_tags": null}, {"prompt": "pet/re/iterative/remaining.txt", "only_tags": ["uses", "actor performer", "actor recipient", "further specification"], "context_tags": null}], "formatters": ["PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy"], "input_tokens": 2645, "output_tokens": 12, "total_costs": 0.0013405000000000001, "answers": ["No relations found.", "No relations found.", "No relations found."], "original_id": "doc-10.8"}]}, {"meta": {"num_shots": 0, "model": "gpt-3.5-turbo-0125", "temperature": 0.0}, "results": [{"prompts": ["System: # Task\n\nYou are a business process modelling expert, tasked with identifying if two xor_gateways refer to the same decision point, and merely represent two possible paths in the process.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **same gateway**: Focus on XOR_Gateway mentions and their corresponding condition_specification. Find the next XOR_Gateway and its condition_specification in the text. If the two condition specifications describe the same decision, i.e., the first describes what to do in one case and the second in the other case, then extract a relation of type \"same gateway\" for the XOR_Gateways preceding the respective condition_specification.\n\n# Format\n\nDetect that two XOR_Gateways are the same, by listing the type of the relation (always \"same gateway\"), the index of the first one (source mention index), and the one appearing later in the text (target mention index), separated by tabs. List one relation per line.\n\nsame gateway\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\n<xor_gateway id=1> If </xor_gateway> <condition_specification id=0> the LLM finds two gateways that are the same </condition_specification>, <actor id=2> it </actor> <activity id=4> extracts </activity> <activity_data id=3> the relation </activity_data> . <xor_gateway id=5> Otherwise </xor_gateway> , <actor id=6> it </actor> <activity id=7> continues </activity> .\n\nYou will extract these relations\n\nsame gateway\t1\t5\n\n# Restrictions\n\nRule 1. Two XOR_Gateways or two AND_Gateway are only the same gateway, if they describe two paths of the same decision. There may appear multiple XOR_Gateways in the text, that are different decisions, and therefore are not the same gateway.\n\nRule 2. One XOR_Gateway be at most part of one \"same gateway\" relation.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nIn November of each year , <actor id=0> the Coordination Unit at the Town Planning Authority </actor> <activity id=3> drafts </activity> a schedule of meetings for the next calendar year and <activity id=4> adds </activity> <activity_data id=5> draft dates </activity_data> to all calendars . <actor id=6> The Support Officer </actor> then <activity id=7> checks </activity> <activity_data id=8> the dates </activity_data> and <activity id=10> suggests </activity> <activity_data id=11> modifications </activity_data> . <actor id=1> The Coordination Unit </actor> then <activity id=12> rechecks </activity> <activity_data id=9> all dates </activity_data> and <activity id=13> looks for </activity> <activity_data id=14> potential conflicts </activity_data> . <activity_data id=15> The final schedule of meeting dates </activity_data> is <activity id=16> sent </activity> to <actor id=17> all the independent Committee Members </actor> <further_specification id=19> by email </further_specification> , <actor id=18> who </actor> then <activity id=20> check </activity> <activity_data id=21> their diaries </activity_data> and <activity id=22> advise </activity> <actor id=2> the Coordination Unit </actor> of any conflicts .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying the flow between business process relevant tasks in textual descriptions of business processes.\nThese tasks have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it. There are also some relations already extracted, which you can use for context during extracting flows.\n\n# Definition\n\nFlows are directed and therefore have a source mention and a target mention.\n\n**Flow**: Focus on the behavioural elements, which are mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". Extract the flow between behavioural elements, i.e., extract a relation of type \"flow\", if the text describes that one behavioural element is relevant during the process, before another behavioural element is.\nA flow relation between one behavioural element means, that it is relevant before another behavioural element, when the process is executed, e.g., if there is a flow between an \"XOR_Gateway\" and a \"Condition_Specification\" the XOR_Gateway is visited first (like an exclusive gateway in a BPMN process model), then the condition specification is relevant (like the condition in a BPMN process model). Afterwards there may be a flow between this \"Condition_Specification\" and an \"Activity\", because the condition is relevant first, and if it is fulfilled the employee has to perform the activity.\n\n# Format\n\nRetrieve a relation by listing the type (always \"flow\"), the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\nflow\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> and <activity id=3> sends </activity> <activity_data id=4> it </activity_data> back .\n\nYou will extract these relations\n\nflow\t0\t3\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nIn November of each year , <actor id=0> the Coordination Unit at the Town Planning Authority </actor> <activity id=3> drafts </activity> a schedule of meetings for the next calendar year and <activity id=4> adds </activity> <activity_data id=5> draft dates </activity_data> to all calendars . <actor id=6> The Support Officer </actor> then <activity id=7> checks </activity> <activity_data id=8> the dates </activity_data> and <activity id=10> suggests </activity> <activity_data id=11> modifications </activity_data> . <actor id=1> The Coordination Unit </actor> then <activity id=12> rechecks </activity> <activity_data id=9> all dates </activity_data> and <activity id=13> looks for </activity> <activity_data id=14> potential conflicts </activity_data> . <activity_data id=15> The final schedule of meeting dates </activity_data> is <activity id=16> sent </activity> to <actor id=17> all the independent Committee Members </actor> <further_specification id=19> by email </further_specification> , <actor id=18> who </actor> then <activity id=20> check </activity> <activity_data id=21> their diaries </activity_data> and <activity id=22> advise </activity> <actor id=2> the Coordination Unit </actor> of any conflicts .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying relations between mentions of business process relevant facts in textual descriptions of business processes.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n# Format\n\nRetrieve a relation by listing the relation type, the source mention index, and the target mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\nYou will extract these relations\n\nactor performer\t0\t1\nuses\t0\t2\n\n# Restrictions\n\nRule 1. Only extract relations with types, that are defined in chapter **Relation Types**.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nIn November of each year , <actor id=0> the Coordination Unit at the Town Planning Authority </actor> <activity id=3> drafts </activity> a schedule of meetings for the next calendar year and <activity id=4> adds </activity> <activity_data id=5> draft dates </activity_data> to all calendars . <actor id=6> The Support Officer </actor> then <activity id=7> checks </activity> <activity_data id=8> the dates </activity_data> and <activity id=10> suggests </activity> <activity_data id=11> modifications </activity_data> . <actor id=1> The Coordination Unit </actor> then <activity id=12> rechecks </activity> <activity_data id=9> all dates </activity_data> and <activity id=13> looks for </activity> <activity_data id=14> potential conflicts </activity_data> . <activity_data id=15> The final schedule of meeting dates </activity_data> is <activity id=16> sent </activity> to <actor id=17> all the independent Committee Members </actor> <further_specification id=19> by email </further_specification> , <actor id=18> who </actor> then <activity id=20> check </activity> <activity_data id=21> their diaries </activity_data> and <activity id=22> advise </activity> <actor id=2> the Coordination Unit </actor> of any conflicts .\n\nNo relations found.\n"], "steps": [["relations"], ["relations"], ["relations"]], "formatter_args": [{"prompt": "pet/re/iterative/same_gateway.txt", "only_tags": ["same gateway"], "context_tags": null}, {"prompt": "pet/re/iterative/flow.txt", "only_tags": ["flow"], "context_tags": null}, {"prompt": "pet/re/iterative/remaining.txt", "only_tags": ["uses", "actor performer", "actor recipient", "further specification"], "context_tags": null}], "formatters": ["PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy"], "input_tokens": 2423, "output_tokens": 12, "total_costs": 0.0012295000000000001, "answers": ["No relations found.", "No relations found.", "No relations found."], "original_id": "doc-9.3"}]}, {"meta": {"num_shots": 0, "model": "gpt-3.5-turbo-0125", "temperature": 0.0}, "results": [{"prompts": ["System: # Task\n\nYou are a business process modelling expert, tasked with identifying if two xor_gateways refer to the same decision point, and merely represent two possible paths in the process.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **same gateway**: Focus on XOR_Gateway mentions and their corresponding condition_specification. Find the next XOR_Gateway and its condition_specification in the text. If the two condition specifications describe the same decision, i.e., the first describes what to do in one case and the second in the other case, then extract a relation of type \"same gateway\" for the XOR_Gateways preceding the respective condition_specification.\n\n# Format\n\nDetect that two XOR_Gateways are the same, by listing the type of the relation (always \"same gateway\"), the index of the first one (source mention index), and the one appearing later in the text (target mention index), separated by tabs. List one relation per line.\n\nsame gateway\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\n<xor_gateway id=1> If </xor_gateway> <condition_specification id=0> the LLM finds two gateways that are the same </condition_specification>, <actor id=2> it </actor> <activity id=4> extracts </activity> <activity_data id=3> the relation </activity_data> . <xor_gateway id=5> Otherwise </xor_gateway> , <actor id=6> it </actor> <activity id=7> continues </activity> .\n\nYou will extract these relations\n\nsame gateway\t1\t5\n\n# Restrictions\n\nRule 1. Two XOR_Gateways or two AND_Gateway are only the same gateway, if they describe two paths of the same decision. There may appear multiple XOR_Gateways in the text, that are different decisions, and therefore are not the same gateway.\n\nRule 2. One XOR_Gateway be at most part of one \"same gateway\" relation.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nAfter <activity_data id=0> the Expense Report </activity_data> is <activity id=3> received </activity> , <activity_data id=4> a new account </activity_data> must be <activity id=5> created </activity> <xor_gateway id=6> if </xor_gateway> <condition_specification id=7> the employee does not already have one </condition_specification> . <activity_data id=2> The report </activity_data> is then <activity id=8> reviewed </activity> <further_specification id=9> for automatic approval </further_specification> . <condition_specification id=10> Amounts under $200 </condition_specification> are <further_specification id=11> automatically </further_specification> <activity id=12> approved </activity> , <xor_gateway id=13> whereas </xor_gateway> <condition_specification id=14> amounts equal to or over $200 </condition_specification> <activity id=15> require </activity> <activity_data id=16> approval </activity_data> of <actor id=17> the supervisor </actor> . <xor_gateway id=18> In case of </xor_gateway> <condition_specification id=19> rejection </condition_specification> , <actor id=20> the employee </actor> must <activity id=23> receive </activity> <activity_data id=24> a rejection notice </activity_data> <further_specification id=25> by email </further_specification> . <xor_gateway id=26> Otherwise </xor_gateway> , <activity_data id=27> the reimbursement </activity_data> <activity id=28> goes </activity> <further_specification id=29> to the employees direct deposit bank account </further_specification> . <xor_gateway id=30> If </xor_gateway> <condition_specification id=31> the request is not completed in 7 days </condition_specification> , then <actor id=22> the employee </actor> must <activity id=32> receive </activity> <activity_data id=33> an approval in progress email </activity_data> . <xor_gateway id=34> If </xor_gateway> <condition_specification id=35> the request is not finished within 30 days </condition_specification> , then the process is stopped and <actor id=21> the employee </actor> <activity id=36> receives </activity> <activity_data id=37> an email cancellation notice </activity_data> and must <activity id=38> re-submit </activity> <activity_data id=1> the expense report </activity_data> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying the flow between business process relevant tasks in textual descriptions of business processes.\nThese tasks have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it. There are also some relations already extracted, which you can use for context during extracting flows.\n\n# Definition\n\nFlows are directed and therefore have a source mention and a target mention.\n\n**Flow**: Focus on the behavioural elements, which are mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". Extract the flow between behavioural elements, i.e., extract a relation of type \"flow\", if the text describes that one behavioural element is relevant during the process, before another behavioural element is.\nA flow relation between one behavioural element means, that it is relevant before another behavioural element, when the process is executed, e.g., if there is a flow between an \"XOR_Gateway\" and a \"Condition_Specification\" the XOR_Gateway is visited first (like an exclusive gateway in a BPMN process model), then the condition specification is relevant (like the condition in a BPMN process model). Afterwards there may be a flow between this \"Condition_Specification\" and an \"Activity\", because the condition is relevant first, and if it is fulfilled the employee has to perform the activity.\n\n# Format\n\nRetrieve a relation by listing the type (always \"flow\"), the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\nflow\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> and <activity id=3> sends </activity> <activity_data id=4> it </activity_data> back .\n\nYou will extract these relations\n\nflow\t0\t3\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nAfter <activity_data id=0> the Expense Report </activity_data> is <activity id=3> received </activity> , <activity_data id=4> a new account </activity_data> must be <activity id=5> created </activity> <xor_gateway id=6> if </xor_gateway> <condition_specification id=7> the employee does not already have one </condition_specification> . <activity_data id=2> The report </activity_data> is then <activity id=8> reviewed </activity> <further_specification id=9> for automatic approval </further_specification> . <condition_specification id=10> Amounts under $200 </condition_specification> are <further_specification id=11> automatically </further_specification> <activity id=12> approved </activity> , <xor_gateway id=13> whereas </xor_gateway> <condition_specification id=14> amounts equal to or over $200 </condition_specification> <activity id=15> require </activity> <activity_data id=16> approval </activity_data> of <actor id=17> the supervisor </actor> . <xor_gateway id=18> In case of </xor_gateway> <condition_specification id=19> rejection </condition_specification> , <actor id=20> the employee </actor> must <activity id=23> receive </activity> <activity_data id=24> a rejection notice </activity_data> <further_specification id=25> by email </further_specification> . <xor_gateway id=26> Otherwise </xor_gateway> , <activity_data id=27> the reimbursement </activity_data> <activity id=28> goes </activity> <further_specification id=29> to the employees direct deposit bank account </further_specification> . <xor_gateway id=30> If </xor_gateway> <condition_specification id=31> the request is not completed in 7 days </condition_specification> , then <actor id=22> the employee </actor> must <activity id=32> receive </activity> <activity_data id=33> an approval in progress email </activity_data> . <xor_gateway id=34> If </xor_gateway> <condition_specification id=35> the request is not finished within 30 days </condition_specification> , then the process is stopped and <actor id=21> the employee </actor> <activity id=36> receives </activity> <activity_data id=37> an email cancellation notice </activity_data> and must <activity id=38> re-submit </activity> <activity_data id=1> the expense report </activity_data> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying relations between mentions of business process relevant facts in textual descriptions of business processes.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n# Format\n\nRetrieve a relation by listing the relation type, the source mention index, and the target mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\nYou will extract these relations\n\nactor performer\t0\t1\nuses\t0\t2\n\n# Restrictions\n\nRule 1. Only extract relations with types, that are defined in chapter **Relation Types**.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nAfter <activity_data id=0> the Expense Report </activity_data> is <activity id=3> received </activity> , <activity_data id=4> a new account </activity_data> must be <activity id=5> created </activity> <xor_gateway id=6> if </xor_gateway> <condition_specification id=7> the employee does not already have one </condition_specification> . <activity_data id=2> The report </activity_data> is then <activity id=8> reviewed </activity> <further_specification id=9> for automatic approval </further_specification> . <condition_specification id=10> Amounts under $200 </condition_specification> are <further_specification id=11> automatically </further_specification> <activity id=12> approved </activity> , <xor_gateway id=13> whereas </xor_gateway> <condition_specification id=14> amounts equal to or over $200 </condition_specification> <activity id=15> require </activity> <activity_data id=16> approval </activity_data> of <actor id=17> the supervisor </actor> . <xor_gateway id=18> In case of </xor_gateway> <condition_specification id=19> rejection </condition_specification> , <actor id=20> the employee </actor> must <activity id=23> receive </activity> <activity_data id=24> a rejection notice </activity_data> <further_specification id=25> by email </further_specification> . <xor_gateway id=26> Otherwise </xor_gateway> , <activity_data id=27> the reimbursement </activity_data> <activity id=28> goes </activity> <further_specification id=29> to the employees direct deposit bank account </further_specification> . <xor_gateway id=30> If </xor_gateway> <condition_specification id=31> the request is not completed in 7 days </condition_specification> , then <actor id=22> the employee </actor> must <activity id=32> receive </activity> <activity_data id=33> an approval in progress email </activity_data> . <xor_gateway id=34> If </xor_gateway> <condition_specification id=35> the request is not finished within 30 days </condition_specification> , then the process is stopped and <actor id=21> the employee </actor> <activity id=36> receives </activity> <activity_data id=37> an email cancellation notice </activity_data> and must <activity id=38> re-submit </activity> <activity_data id=1> the expense report </activity_data> .\n\nNo relations found.\n"], "steps": [["relations"], ["relations"], ["relations"]], "formatter_args": [{"prompt": "pet/re/iterative/same_gateway.txt", "only_tags": ["same gateway"], "context_tags": null}, {"prompt": "pet/re/iterative/flow.txt", "only_tags": ["flow"], "context_tags": null}, {"prompt": "pet/re/iterative/remaining.txt", "only_tags": ["uses", "actor performer", "actor recipient", "further specification"], "context_tags": null}], "formatters": ["PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy"], "input_tokens": 3161, "output_tokens": 12, "total_costs": 0.0015985, "answers": ["No relations found.", "No relations found.", "No relations found."], "original_id": "doc-9.5"}]}, {"meta": {"num_shots": 0, "model": "gpt-3.5-turbo-0125", "temperature": 0.0}, "results": [{"prompts": ["System: # Task\n\nYou are a business process modelling expert, tasked with identifying if two xor_gateways refer to the same decision point, and merely represent two possible paths in the process.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **same gateway**: Focus on XOR_Gateway mentions and their corresponding condition_specification. Find the next XOR_Gateway and its condition_specification in the text. If the two condition specifications describe the same decision, i.e., the first describes what to do in one case and the second in the other case, then extract a relation of type \"same gateway\" for the XOR_Gateways preceding the respective condition_specification.\n\n# Format\n\nDetect that two XOR_Gateways are the same, by listing the type of the relation (always \"same gateway\"), the index of the first one (source mention index), and the one appearing later in the text (target mention index), separated by tabs. List one relation per line.\n\nsame gateway\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\n<xor_gateway id=1> If </xor_gateway> <condition_specification id=0> the LLM finds two gateways that are the same </condition_specification>, <actor id=2> it </actor> <activity id=4> extracts </activity> <activity_data id=3> the relation </activity_data> . <xor_gateway id=5> Otherwise </xor_gateway> , <actor id=6> it </actor> <activity id=7> continues </activity> .\n\nYou will extract these relations\n\nsame gateway\t1\t5\n\n# Restrictions\n\nRule 1. Two XOR_Gateways or two AND_Gateway are only the same gateway, if they describe two paths of the same decision. There may appear multiple XOR_Gateways in the text, that are different decisions, and therefore are not the same gateway.\n\nRule 2. One XOR_Gateway be at most part of one \"same gateway\" relation.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The MPON </actor> <activity id=9> reports </activity> <activity_data id=10> the meter operation </activity_data> to <actor id=19> the GO </actor> . <actor id=11> The GO </actor> <activity id=28> examines </activity> <activity_data id=31> the application </activity_data> of <actor id=8> the MPON </actor> . <actor id=27> The GO </actor> <activity id=29> rejects </activity> <activity_data id=30> the application of the MPON </activity_data> <xor_gateway id=33> or </xor_gateway> <actor id=18> the GO </actor> <activity id=34> confirmes </activity> <activity_data id=32> the application of the MPON </activity_data> . <actor id=26> The GO </actor> <activity id=35> informs </activity> <actor id=36> the MPOO </actor> <activity_data id=40> about the registration confirmation of the MPON </activity_data> . <actor id=25> The GO </actor> <activity id=42> informs </activity> <actor id=43> the MSPO </actor> <activity_data id=41> about the registration confirmation of the MPON </activity_data> . <actor id=2> The MPON </actor> and <actor id=39> the MPOO </actor> <activity id=46> perform </activity> <activity_data id=47> the equipment acquisition and / or equipment changes </activity_data> . <actor id=1> The MPON </actor> <activity id=48> informs </activity> <actor id=17> the GO </actor> <activity_data id=49> about the failure of the entire process </activity_data> <xor_gateway id=50> or </xor_gateway> <actor id=7> the MPON </actor> <activity id=51> informs </activity> <actor id=16> the GO </actor> <activity_data id=52> about the successful completion of the entire process </activity_data> . <actor id=24> The GO </actor> <activity id=53> informs </activity> <actor id=6> the MPON </actor> <activity_data id=54> about the failure of the overall transaction by deadline </activity_data> <xor_gateway id=55> if </xor_gateway> <condition_specification id=56> after a maximum time limit no message of the MPON is present at the GO </condition_specification> . <xor_gateway id=57> If </xor_gateway> <condition_specification id=58> the MPON informs the GO about the failure of the entire process </condition_specification> , <actor id=15> the GO </actor> <activity id=59> confirms </activity> <activity_data id=60> the failure of the assignment </activity_data> to <actor id=5> the MPON </actor> . <xor_gateway id=61> If </xor_gateway> <condition_specification id=62> the MPON informs the GO about the successful completion of the overall process </condition_specification> , <actor id=14> the GO </actor> <activity id=63> assigns </activity> <actor id=4> the MPON </actor> . <actor id=23> The GO </actor> <activity id=64> confirms </activity> <activity_data id=65> the assignment </activity_data> to <actor id=3> the MPON </actor> . <actor id=22> The GO </actor> <activity id=66> informs </activity> <actor id=38> the MPOO </actor> <activity_data id=67> about the failure of the assignment of the MPON </activity_data> or <actor id=13> the GO </actor> <activity id=68> informs </activity> <actor id=37> the MPOO </actor> <activity_data id=69> about the assignment of the MPON </activity_data> . <actor id=21> The GO </actor> <activity id=70> informs </activity> <actor id=45> the MSPO </actor> <activity_data id=71> about the failure of the assignment of the MPON </activity_data> or <actor id=12> the GO </actor> <activity id=72> informs </activity> <actor id=44> the MSPO </actor> <activity_data id=73> about the assignment of the MPON </activity_data> . <actor id=20> The GO </actor> <activity id=74> informs </activity> <actor id=75> the SP </actor> <activity_data id=76> about the assignment of the MPON </activity_data> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying the flow between business process relevant tasks in textual descriptions of business processes.\nThese tasks have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it. There are also some relations already extracted, which you can use for context during extracting flows.\n\n# Definition\n\nFlows are directed and therefore have a source mention and a target mention.\n\n**Flow**: Focus on the behavioural elements, which are mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". Extract the flow between behavioural elements, i.e., extract a relation of type \"flow\", if the text describes that one behavioural element is relevant during the process, before another behavioural element is.\nA flow relation between one behavioural element means, that it is relevant before another behavioural element, when the process is executed, e.g., if there is a flow between an \"XOR_Gateway\" and a \"Condition_Specification\" the XOR_Gateway is visited first (like an exclusive gateway in a BPMN process model), then the condition specification is relevant (like the condition in a BPMN process model). Afterwards there may be a flow between this \"Condition_Specification\" and an \"Activity\", because the condition is relevant first, and if it is fulfilled the employee has to perform the activity.\n\n# Format\n\nRetrieve a relation by listing the type (always \"flow\"), the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\nflow\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> and <activity id=3> sends </activity> <activity_data id=4> it </activity_data> back .\n\nYou will extract these relations\n\nflow\t0\t3\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The MPON </actor> <activity id=9> reports </activity> <activity_data id=10> the meter operation </activity_data> to <actor id=19> the GO </actor> . <actor id=11> The GO </actor> <activity id=28> examines </activity> <activity_data id=31> the application </activity_data> of <actor id=8> the MPON </actor> . <actor id=27> The GO </actor> <activity id=29> rejects </activity> <activity_data id=30> the application of the MPON </activity_data> <xor_gateway id=33> or </xor_gateway> <actor id=18> the GO </actor> <activity id=34> confirmes </activity> <activity_data id=32> the application of the MPON </activity_data> . <actor id=26> The GO </actor> <activity id=35> informs </activity> <actor id=36> the MPOO </actor> <activity_data id=40> about the registration confirmation of the MPON </activity_data> . <actor id=25> The GO </actor> <activity id=42> informs </activity> <actor id=43> the MSPO </actor> <activity_data id=41> about the registration confirmation of the MPON </activity_data> . <actor id=2> The MPON </actor> and <actor id=39> the MPOO </actor> <activity id=46> perform </activity> <activity_data id=47> the equipment acquisition and / or equipment changes </activity_data> . <actor id=1> The MPON </actor> <activity id=48> informs </activity> <actor id=17> the GO </actor> <activity_data id=49> about the failure of the entire process </activity_data> <xor_gateway id=50> or </xor_gateway> <actor id=7> the MPON </actor> <activity id=51> informs </activity> <actor id=16> the GO </actor> <activity_data id=52> about the successful completion of the entire process </activity_data> . <actor id=24> The GO </actor> <activity id=53> informs </activity> <actor id=6> the MPON </actor> <activity_data id=54> about the failure of the overall transaction by deadline </activity_data> <xor_gateway id=55> if </xor_gateway> <condition_specification id=56> after a maximum time limit no message of the MPON is present at the GO </condition_specification> . <xor_gateway id=57> If </xor_gateway> <condition_specification id=58> the MPON informs the GO about the failure of the entire process </condition_specification> , <actor id=15> the GO </actor> <activity id=59> confirms </activity> <activity_data id=60> the failure of the assignment </activity_data> to <actor id=5> the MPON </actor> . <xor_gateway id=61> If </xor_gateway> <condition_specification id=62> the MPON informs the GO about the successful completion of the overall process </condition_specification> , <actor id=14> the GO </actor> <activity id=63> assigns </activity> <actor id=4> the MPON </actor> . <actor id=23> The GO </actor> <activity id=64> confirms </activity> <activity_data id=65> the assignment </activity_data> to <actor id=3> the MPON </actor> . <actor id=22> The GO </actor> <activity id=66> informs </activity> <actor id=38> the MPOO </actor> <activity_data id=67> about the failure of the assignment of the MPON </activity_data> or <actor id=13> the GO </actor> <activity id=68> informs </activity> <actor id=37> the MPOO </actor> <activity_data id=69> about the assignment of the MPON </activity_data> . <actor id=21> The GO </actor> <activity id=70> informs </activity> <actor id=45> the MSPO </actor> <activity_data id=71> about the failure of the assignment of the MPON </activity_data> or <actor id=12> the GO </actor> <activity id=72> informs </activity> <actor id=44> the MSPO </actor> <activity_data id=73> about the assignment of the MPON </activity_data> . <actor id=20> The GO </actor> <activity id=74> informs </activity> <actor id=75> the SP </actor> <activity_data id=76> about the assignment of the MPON </activity_data> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying relations between mentions of business process relevant facts in textual descriptions of business processes.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n# Format\n\nRetrieve a relation by listing the relation type, the source mention index, and the target mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\nYou will extract these relations\n\nactor performer\t0\t1\nuses\t0\t2\n\n# Restrictions\n\nRule 1. Only extract relations with types, that are defined in chapter **Relation Types**.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The MPON </actor> <activity id=9> reports </activity> <activity_data id=10> the meter operation </activity_data> to <actor id=19> the GO </actor> . <actor id=11> The GO </actor> <activity id=28> examines </activity> <activity_data id=31> the application </activity_data> of <actor id=8> the MPON </actor> . <actor id=27> The GO </actor> <activity id=29> rejects </activity> <activity_data id=30> the application of the MPON </activity_data> <xor_gateway id=33> or </xor_gateway> <actor id=18> the GO </actor> <activity id=34> confirmes </activity> <activity_data id=32> the application of the MPON </activity_data> . <actor id=26> The GO </actor> <activity id=35> informs </activity> <actor id=36> the MPOO </actor> <activity_data id=40> about the registration confirmation of the MPON </activity_data> . <actor id=25> The GO </actor> <activity id=42> informs </activity> <actor id=43> the MSPO </actor> <activity_data id=41> about the registration confirmation of the MPON </activity_data> . <actor id=2> The MPON </actor> and <actor id=39> the MPOO </actor> <activity id=46> perform </activity> <activity_data id=47> the equipment acquisition and / or equipment changes </activity_data> . <actor id=1> The MPON </actor> <activity id=48> informs </activity> <actor id=17> the GO </actor> <activity_data id=49> about the failure of the entire process </activity_data> <xor_gateway id=50> or </xor_gateway> <actor id=7> the MPON </actor> <activity id=51> informs </activity> <actor id=16> the GO </actor> <activity_data id=52> about the successful completion of the entire process </activity_data> . <actor id=24> The GO </actor> <activity id=53> informs </activity> <actor id=6> the MPON </actor> <activity_data id=54> about the failure of the overall transaction by deadline </activity_data> <xor_gateway id=55> if </xor_gateway> <condition_specification id=56> after a maximum time limit no message of the MPON is present at the GO </condition_specification> . <xor_gateway id=57> If </xor_gateway> <condition_specification id=58> the MPON informs the GO about the failure of the entire process </condition_specification> , <actor id=15> the GO </actor> <activity id=59> confirms </activity> <activity_data id=60> the failure of the assignment </activity_data> to <actor id=5> the MPON </actor> . <xor_gateway id=61> If </xor_gateway> <condition_specification id=62> the MPON informs the GO about the successful completion of the overall process </condition_specification> , <actor id=14> the GO </actor> <activity id=63> assigns </activity> <actor id=4> the MPON </actor> . <actor id=23> The GO </actor> <activity id=64> confirms </activity> <activity_data id=65> the assignment </activity_data> to <actor id=3> the MPON </actor> . <actor id=22> The GO </actor> <activity id=66> informs </activity> <actor id=38> the MPOO </actor> <activity_data id=67> about the failure of the assignment of the MPON </activity_data> or <actor id=13> the GO </actor> <activity id=68> informs </activity> <actor id=37> the MPOO </actor> <activity_data id=69> about the assignment of the MPON </activity_data> . <actor id=21> The GO </actor> <activity id=70> informs </activity> <actor id=45> the MSPO </actor> <activity_data id=71> about the failure of the assignment of the MPON </activity_data> or <actor id=12> the GO </actor> <activity id=72> informs </activity> <actor id=44> the MSPO </actor> <activity_data id=73> about the assignment of the MPON </activity_data> . <actor id=20> The GO </actor> <activity id=74> informs </activity> <actor id=75> the SP </actor> <activity_data id=76> about the assignment of the MPON </activity_data> .\n\nNo relations found.\n"], "steps": [["relations"], ["relations"], ["relations"]], "formatter_args": [{"prompt": "pet/re/iterative/same_gateway.txt", "only_tags": ["same gateway"], "context_tags": null}, {"prompt": "pet/re/iterative/flow.txt", "only_tags": ["flow"], "context_tags": null}, {"prompt": "pet/re/iterative/remaining.txt", "only_tags": ["uses", "actor performer", "actor recipient", "further specification"], "context_tags": null}], "formatters": ["PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy"], "input_tokens": 4586, "output_tokens": 12, "total_costs": 0.002311, "answers": ["No relations found.", "No relations found.", "No relations found."], "original_id": "doc-10.2"}]}, {"meta": {"num_shots": 0, "model": "gpt-3.5-turbo-0125", "temperature": 0.0}, "results": [{"prompts": ["System: # Task\n\nYou are a business process modelling expert, tasked with identifying if two xor_gateways refer to the same decision point, and merely represent two possible paths in the process.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **same gateway**: Focus on XOR_Gateway mentions and their corresponding condition_specification. Find the next XOR_Gateway and its condition_specification in the text. If the two condition specifications describe the same decision, i.e., the first describes what to do in one case and the second in the other case, then extract a relation of type \"same gateway\" for the XOR_Gateways preceding the respective condition_specification.\n\n# Format\n\nDetect that two XOR_Gateways are the same, by listing the type of the relation (always \"same gateway\"), the index of the first one (source mention index), and the one appearing later in the text (target mention index), separated by tabs. List one relation per line.\n\nsame gateway\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\n<xor_gateway id=1> If </xor_gateway> <condition_specification id=0> the LLM finds two gateways that are the same </condition_specification>, <actor id=2> it </actor> <activity id=4> extracts </activity> <activity_data id=3> the relation </activity_data> . <xor_gateway id=5> Otherwise </xor_gateway> , <actor id=6> it </actor> <activity id=7> continues </activity> .\n\nYou will extract these relations\n\nsame gateway\t1\t5\n\n# Restrictions\n\nRule 1. Two XOR_Gateways or two AND_Gateway are only the same gateway, if they describe two paths of the same decision. There may appear multiple XOR_Gateways in the text, that are different decisions, and therefore are not the same gateway.\n\nRule 2. One XOR_Gateway be at most part of one \"same gateway\" relation.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nThe Evanstonian is an upscale independent hotel . When <actor id=0> a guest </actor> <activity id=1> calls </activity> <actor id=2> room service </actor> at The Evanstonian , <actor id=3> the room-service manager </actor> <activity id=7> takes down </activity> <activity_data id=8> the order </activity_data> . <actor id=5> She </actor> then <activity id=10> submits </activity> <activity_data id=11> an order ticket </activity_data> to <actor id=12> the kitchen </actor> <further_specification id=14> to begin preparing the food </further_specification> . <actor id=4> She </actor> also <activity id=15> gives </activity> <activity_data id=16> an order </activity_data> to <actor id=17> the sommelier </actor> ( i.e . , the wine waiter ) <further_specification id=19> to fetch wine from the cellar and to prepare any other alcoholic beverages </further_specification> . Eighty percent of room-service orders include wine or some other alcoholic beverage . Finally , <actor id=6> she </actor> <activity id=20> assigns </activity> <activity_data id=9> the order </activity_data> to <actor id=21> the waiter </actor> . <and_gateway id=26> While </and_gateway> <actor id=13> the kitchen </actor> and <actor id=18> the sommelier </actor> are <activity id=27> doing </activity> <activity_data id=28> their tasks </activity_data> , <actor id=24> the waiter </actor> <activity id=29> readies </activity> <activity_data id=30> a cart </activity_data> ( i.e . , puts a tablecloth on the cart and gathers silverware ) . The waiter is also responsible for nonalcoholic drinks . Once the food , wine , and cart are ready , <actor id=23> the waiter </actor> <activity id=32> delivers </activity> <activity_data id=31> it </activity_data> to <actor id=33> the guest \u2019 s room </actor> . After <activity id=34> returning </activity> <further_specification id=35> to the room-service station </further_specification> , <actor id=22> the waiter </actor> <activity id=36> debits </activity> <activity_data id=37> the guest \u2019 s account </activity_data> . <actor id=25> The waiter </actor> may <activity id=38> wait </activity> <activity_data id=39> to do the billing </activity_data> <xor_gateway id=40> if </xor_gateway> <condition_specification id=41> he has another order to prepare or deliver </condition_specification> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying the flow between business process relevant tasks in textual descriptions of business processes.\nThese tasks have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it. There are also some relations already extracted, which you can use for context during extracting flows.\n\n# Definition\n\nFlows are directed and therefore have a source mention and a target mention.\n\n**Flow**: Focus on the behavioural elements, which are mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". Extract the flow between behavioural elements, i.e., extract a relation of type \"flow\", if the text describes that one behavioural element is relevant during the process, before another behavioural element is.\nA flow relation between one behavioural element means, that it is relevant before another behavioural element, when the process is executed, e.g., if there is a flow between an \"XOR_Gateway\" and a \"Condition_Specification\" the XOR_Gateway is visited first (like an exclusive gateway in a BPMN process model), then the condition specification is relevant (like the condition in a BPMN process model). Afterwards there may be a flow between this \"Condition_Specification\" and an \"Activity\", because the condition is relevant first, and if it is fulfilled the employee has to perform the activity.\n\n# Format\n\nRetrieve a relation by listing the type (always \"flow\"), the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\nflow\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> and <activity id=3> sends </activity> <activity_data id=4> it </activity_data> back .\n\nYou will extract these relations\n\nflow\t0\t3\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nThe Evanstonian is an upscale independent hotel . When <actor id=0> a guest </actor> <activity id=1> calls </activity> <actor id=2> room service </actor> at The Evanstonian , <actor id=3> the room-service manager </actor> <activity id=7> takes down </activity> <activity_data id=8> the order </activity_data> . <actor id=5> She </actor> then <activity id=10> submits </activity> <activity_data id=11> an order ticket </activity_data> to <actor id=12> the kitchen </actor> <further_specification id=14> to begin preparing the food </further_specification> . <actor id=4> She </actor> also <activity id=15> gives </activity> <activity_data id=16> an order </activity_data> to <actor id=17> the sommelier </actor> ( i.e . , the wine waiter ) <further_specification id=19> to fetch wine from the cellar and to prepare any other alcoholic beverages </further_specification> . Eighty percent of room-service orders include wine or some other alcoholic beverage . Finally , <actor id=6> she </actor> <activity id=20> assigns </activity> <activity_data id=9> the order </activity_data> to <actor id=21> the waiter </actor> . <and_gateway id=26> While </and_gateway> <actor id=13> the kitchen </actor> and <actor id=18> the sommelier </actor> are <activity id=27> doing </activity> <activity_data id=28> their tasks </activity_data> , <actor id=24> the waiter </actor> <activity id=29> readies </activity> <activity_data id=30> a cart </activity_data> ( i.e . , puts a tablecloth on the cart and gathers silverware ) . The waiter is also responsible for nonalcoholic drinks . Once the food , wine , and cart are ready , <actor id=23> the waiter </actor> <activity id=32> delivers </activity> <activity_data id=31> it </activity_data> to <actor id=33> the guest \u2019 s room </actor> . After <activity id=34> returning </activity> <further_specification id=35> to the room-service station </further_specification> , <actor id=22> the waiter </actor> <activity id=36> debits </activity> <activity_data id=37> the guest \u2019 s account </activity_data> . <actor id=25> The waiter </actor> may <activity id=38> wait </activity> <activity_data id=39> to do the billing </activity_data> <xor_gateway id=40> if </xor_gateway> <condition_specification id=41> he has another order to prepare or deliver </condition_specification> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying relations between mentions of business process relevant facts in textual descriptions of business processes.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n# Format\n\nRetrieve a relation by listing the relation type, the source mention index, and the target mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\nYou will extract these relations\n\nactor performer\t0\t1\nuses\t0\t2\n\n# Restrictions\n\nRule 1. Only extract relations with types, that are defined in chapter **Relation Types**.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nThe Evanstonian is an upscale independent hotel . When <actor id=0> a guest </actor> <activity id=1> calls </activity> <actor id=2> room service </actor> at The Evanstonian , <actor id=3> the room-service manager </actor> <activity id=7> takes down </activity> <activity_data id=8> the order </activity_data> . <actor id=5> She </actor> then <activity id=10> submits </activity> <activity_data id=11> an order ticket </activity_data> to <actor id=12> the kitchen </actor> <further_specification id=14> to begin preparing the food </further_specification> . <actor id=4> She </actor> also <activity id=15> gives </activity> <activity_data id=16> an order </activity_data> to <actor id=17> the sommelier </actor> ( i.e . , the wine waiter ) <further_specification id=19> to fetch wine from the cellar and to prepare any other alcoholic beverages </further_specification> . Eighty percent of room-service orders include wine or some other alcoholic beverage . Finally , <actor id=6> she </actor> <activity id=20> assigns </activity> <activity_data id=9> the order </activity_data> to <actor id=21> the waiter </actor> . <and_gateway id=26> While </and_gateway> <actor id=13> the kitchen </actor> and <actor id=18> the sommelier </actor> are <activity id=27> doing </activity> <activity_data id=28> their tasks </activity_data> , <actor id=24> the waiter </actor> <activity id=29> readies </activity> <activity_data id=30> a cart </activity_data> ( i.e . , puts a tablecloth on the cart and gathers silverware ) . The waiter is also responsible for nonalcoholic drinks . Once the food , wine , and cart are ready , <actor id=23> the waiter </actor> <activity id=32> delivers </activity> <activity_data id=31> it </activity_data> to <actor id=33> the guest \u2019 s room </actor> . After <activity id=34> returning </activity> <further_specification id=35> to the room-service station </further_specification> , <actor id=22> the waiter </actor> <activity id=36> debits </activity> <activity_data id=37> the guest \u2019 s account </activity_data> . <actor id=25> The waiter </actor> may <activity id=38> wait </activity> <activity_data id=39> to do the billing </activity_data> <xor_gateway id=40> if </xor_gateway> <condition_specification id=41> he has another order to prepare or deliver </condition_specification> .\n\nNo relations found.\n"], "steps": [["relations"], ["relations"], ["relations"]], "formatter_args": [{"prompt": "pet/re/iterative/same_gateway.txt", "only_tags": ["same gateway"], "context_tags": null}, {"prompt": "pet/re/iterative/flow.txt", "only_tags": ["flow"], "context_tags": null}, {"prompt": "pet/re/iterative/remaining.txt", "only_tags": ["uses", "actor performer", "actor recipient", "further specification"], "context_tags": null}], "formatters": ["PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy"], "input_tokens": 3362, "output_tokens": 12, "total_costs": 0.001699, "answers": ["No relations found.", "No relations found.", "No relations found."], "original_id": "doc-1.3"}]}, {"meta": {"num_shots": 0, "model": "gpt-3.5-turbo-0125", "temperature": 0.0}, "results": [{"prompts": ["System: # Task\n\nYou are a business process modelling expert, tasked with identifying if two xor_gateways refer to the same decision point, and merely represent two possible paths in the process.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **same gateway**: Focus on XOR_Gateway mentions and their corresponding condition_specification. Find the next XOR_Gateway and its condition_specification in the text. If the two condition specifications describe the same decision, i.e., the first describes what to do in one case and the second in the other case, then extract a relation of type \"same gateway\" for the XOR_Gateways preceding the respective condition_specification.\n\n# Format\n\nDetect that two XOR_Gateways are the same, by listing the type of the relation (always \"same gateway\"), the index of the first one (source mention index), and the one appearing later in the text (target mention index), separated by tabs. List one relation per line.\n\nsame gateway\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\n<xor_gateway id=1> If </xor_gateway> <condition_specification id=0> the LLM finds two gateways that are the same </condition_specification>, <actor id=2> it </actor> <activity id=4> extracts </activity> <activity_data id=3> the relation </activity_data> . <xor_gateway id=5> Otherwise </xor_gateway> , <actor id=6> it </actor> <activity id=7> continues </activity> .\n\nYou will extract these relations\n\nsame gateway\t1\t5\n\n# Restrictions\n\nRule 1. Two XOR_Gateways or two AND_Gateway are only the same gateway, if they describe two paths of the same decision. There may appear multiple XOR_Gateways in the text, that are different decisions, and therefore are not the same gateway.\n\nRule 2. One XOR_Gateway be at most part of one \"same gateway\" relation.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<activity_data id=0> Mail from the party </activity_data> is <activity id=5> collected </activity> on a daily basis by <actor id=6> the Mail Processing Unit </actor> . Within this unit , <actor id=7> the Mail Clerk </actor> <activity id=8> sorts </activity> <activity_data id=1> the unopened mail </activity_data> <further_specification id=9> into the various business areas </further_specification> . <activity_data id=2> The mail </activity_data> is then <activity id=10> distributed </activity> . When <activity_data id=3> the mail </activity_data> is <activity id=11> received </activity> by <actor id=12> the Registry </actor> , <activity_data id=4> it </activity_data> is <activity id=13> opened </activity> and <activity id=14> sorted </activity> into groups for distribution , and thus <activity id=15> registered </activity> <further_specification id=16> in a manual incoming Mail Register </further_specification> . Afterwards , <actor id=17> the Assistant Registry Manager </actor> within the Registry <activity id=19> performs a quality check </activity> . <xor_gateway id=20> If </xor_gateway> <condition_specification id=21> the mail is not compliant </condition_specification> , <activity_data id=22> a list of requisition </activity_data> explaining the reason for rejection is <activity id=23> compiled </activity> and <activity id=24> sent back </activity> to <actor id=25> the party </actor> . <xor_gateway id=27> Otherwise </xor_gateway> , <activity_data id=28> the matter details </activity_data> ( types of action ) are <activity id=29> captured </activity> and <activity id=30> provided </activity> to <actor id=31> the Cashier </actor> , <actor id=32> who </actor> <activity id=34> takes </activity> the applicable fees attached to the mail . At this point , <actor id=18> the Assistant Registry Manager </actor> <activity id=35> puts </activity> <activity_data id=36> the receipt and copied documents </activity_data> <further_specification id=38> into an envelope </further_specification> and <activity id=39> posts </activity> <activity_data id=37> it </activity_data> to <actor id=26> the party </actor> . <and_gateway id=40> Meantime </and_gateway> , <actor id=33> the Cashier </actor> <activity id=41> captures </activity> <activity_data id=42> the Party Details </activity_data> and <activity id=43> prints </activity> <activity_data id=44> the Physical Court File </activity_data> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying the flow between business process relevant tasks in textual descriptions of business processes.\nThese tasks have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it. There are also some relations already extracted, which you can use for context during extracting flows.\n\n# Definition\n\nFlows are directed and therefore have a source mention and a target mention.\n\n**Flow**: Focus on the behavioural elements, which are mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". Extract the flow between behavioural elements, i.e., extract a relation of type \"flow\", if the text describes that one behavioural element is relevant during the process, before another behavioural element is.\nA flow relation between one behavioural element means, that it is relevant before another behavioural element, when the process is executed, e.g., if there is a flow between an \"XOR_Gateway\" and a \"Condition_Specification\" the XOR_Gateway is visited first (like an exclusive gateway in a BPMN process model), then the condition specification is relevant (like the condition in a BPMN process model). Afterwards there may be a flow between this \"Condition_Specification\" and an \"Activity\", because the condition is relevant first, and if it is fulfilled the employee has to perform the activity.\n\n# Format\n\nRetrieve a relation by listing the type (always \"flow\"), the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\nflow\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> and <activity id=3> sends </activity> <activity_data id=4> it </activity_data> back .\n\nYou will extract these relations\n\nflow\t0\t3\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<activity_data id=0> Mail from the party </activity_data> is <activity id=5> collected </activity> on a daily basis by <actor id=6> the Mail Processing Unit </actor> . Within this unit , <actor id=7> the Mail Clerk </actor> <activity id=8> sorts </activity> <activity_data id=1> the unopened mail </activity_data> <further_specification id=9> into the various business areas </further_specification> . <activity_data id=2> The mail </activity_data> is then <activity id=10> distributed </activity> . When <activity_data id=3> the mail </activity_data> is <activity id=11> received </activity> by <actor id=12> the Registry </actor> , <activity_data id=4> it </activity_data> is <activity id=13> opened </activity> and <activity id=14> sorted </activity> into groups for distribution , and thus <activity id=15> registered </activity> <further_specification id=16> in a manual incoming Mail Register </further_specification> . Afterwards , <actor id=17> the Assistant Registry Manager </actor> within the Registry <activity id=19> performs a quality check </activity> . <xor_gateway id=20> If </xor_gateway> <condition_specification id=21> the mail is not compliant </condition_specification> , <activity_data id=22> a list of requisition </activity_data> explaining the reason for rejection is <activity id=23> compiled </activity> and <activity id=24> sent back </activity> to <actor id=25> the party </actor> . <xor_gateway id=27> Otherwise </xor_gateway> , <activity_data id=28> the matter details </activity_data> ( types of action ) are <activity id=29> captured </activity> and <activity id=30> provided </activity> to <actor id=31> the Cashier </actor> , <actor id=32> who </actor> <activity id=34> takes </activity> the applicable fees attached to the mail . At this point , <actor id=18> the Assistant Registry Manager </actor> <activity id=35> puts </activity> <activity_data id=36> the receipt and copied documents </activity_data> <further_specification id=38> into an envelope </further_specification> and <activity id=39> posts </activity> <activity_data id=37> it </activity_data> to <actor id=26> the party </actor> . <and_gateway id=40> Meantime </and_gateway> , <actor id=33> the Cashier </actor> <activity id=41> captures </activity> <activity_data id=42> the Party Details </activity_data> and <activity id=43> prints </activity> <activity_data id=44> the Physical Court File </activity_data> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying relations between mentions of business process relevant facts in textual descriptions of business processes.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n# Format\n\nRetrieve a relation by listing the relation type, the source mention index, and the target mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\nYou will extract these relations\n\nactor performer\t0\t1\nuses\t0\t2\n\n# Restrictions\n\nRule 1. Only extract relations with types, that are defined in chapter **Relation Types**.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<activity_data id=0> Mail from the party </activity_data> is <activity id=5> collected </activity> on a daily basis by <actor id=6> the Mail Processing Unit </actor> . Within this unit , <actor id=7> the Mail Clerk </actor> <activity id=8> sorts </activity> <activity_data id=1> the unopened mail </activity_data> <further_specification id=9> into the various business areas </further_specification> . <activity_data id=2> The mail </activity_data> is then <activity id=10> distributed </activity> . When <activity_data id=3> the mail </activity_data> is <activity id=11> received </activity> by <actor id=12> the Registry </actor> , <activity_data id=4> it </activity_data> is <activity id=13> opened </activity> and <activity id=14> sorted </activity> into groups for distribution , and thus <activity id=15> registered </activity> <further_specification id=16> in a manual incoming Mail Register </further_specification> . Afterwards , <actor id=17> the Assistant Registry Manager </actor> within the Registry <activity id=19> performs a quality check </activity> . <xor_gateway id=20> If </xor_gateway> <condition_specification id=21> the mail is not compliant </condition_specification> , <activity_data id=22> a list of requisition </activity_data> explaining the reason for rejection is <activity id=23> compiled </activity> and <activity id=24> sent back </activity> to <actor id=25> the party </actor> . <xor_gateway id=27> Otherwise </xor_gateway> , <activity_data id=28> the matter details </activity_data> ( types of action ) are <activity id=29> captured </activity> and <activity id=30> provided </activity> to <actor id=31> the Cashier </actor> , <actor id=32> who </actor> <activity id=34> takes </activity> the applicable fees attached to the mail . At this point , <actor id=18> the Assistant Registry Manager </actor> <activity id=35> puts </activity> <activity_data id=36> the receipt and copied documents </activity_data> <further_specification id=38> into an envelope </further_specification> and <activity id=39> posts </activity> <activity_data id=37> it </activity_data> to <actor id=26> the party </actor> . <and_gateway id=40> Meantime </and_gateway> , <actor id=33> the Cashier </actor> <activity id=41> captures </activity> <activity_data id=42> the Party Details </activity_data> and <activity id=43> prints </activity> <activity_data id=44> the Physical Court File </activity_data> .\n\nNo relations found.\n"], "steps": [["relations"], ["relations"], ["relations"]], "formatter_args": [{"prompt": "pet/re/iterative/same_gateway.txt", "only_tags": ["same gateway"], "context_tags": null}, {"prompt": "pet/re/iterative/flow.txt", "only_tags": ["flow"], "context_tags": null}, {"prompt": "pet/re/iterative/remaining.txt", "only_tags": ["uses", "actor performer", "actor recipient", "further specification"], "context_tags": null}], "formatters": ["PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy"], "input_tokens": 3371, "output_tokens": 12, "total_costs": 0.0017035000000000002, "answers": ["No relations found.", "No relations found.", "No relations found."], "original_id": "doc-3.5"}]}, {"meta": {"num_shots": 0, "model": "gpt-3.5-turbo-0125", "temperature": 0.0}, "results": [{"prompts": ["System: # Task\n\nYou are a business process modelling expert, tasked with identifying if two xor_gateways refer to the same decision point, and merely represent two possible paths in the process.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **same gateway**: Focus on XOR_Gateway mentions and their corresponding condition_specification. Find the next XOR_Gateway and its condition_specification in the text. If the two condition specifications describe the same decision, i.e., the first describes what to do in one case and the second in the other case, then extract a relation of type \"same gateway\" for the XOR_Gateways preceding the respective condition_specification.\n\n# Format\n\nDetect that two XOR_Gateways are the same, by listing the type of the relation (always \"same gateway\"), the index of the first one (source mention index), and the one appearing later in the text (target mention index), separated by tabs. List one relation per line.\n\nsame gateway\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\n<xor_gateway id=1> If </xor_gateway> <condition_specification id=0> the LLM finds two gateways that are the same </condition_specification>, <actor id=2> it </actor> <activity id=4> extracts </activity> <activity_data id=3> the relation </activity_data> . <xor_gateway id=5> Otherwise </xor_gateway> , <actor id=6> it </actor> <activity id=7> continues </activity> .\n\nYou will extract these relations\n\nsame gateway\t1\t5\n\n# Restrictions\n\nRule 1. Two XOR_Gateways or two AND_Gateway are only the same gateway, if they describe two paths of the same decision. There may appear multiple XOR_Gateways in the text, that are different decisions, and therefore are not the same gateway.\n\nRule 2. One XOR_Gateway be at most part of one \"same gateway\" relation.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nEvery weekday morning , <activity_data id=0> the database </activity_data> is <activity id=2> backed up </activity> and then <activity_data id=1> it </activity_data> is <activity id=3> checked </activity> <further_specification id=4> to see whether the Account Defaulter table has new records </further_specification> . <xor_gateway id=5> If </xor_gateway> <condition_specification id=6> no new records are found </condition_specification> , then the process should <activity id=7> check </activity> <activity_data id=8> the CRM system </activity_data> <further_specification id=10> to see whether new returns have been filed </further_specification> . <xor_gateway id=11> If </xor_gateway> <condition_specification id=12> new returns exist </condition_specification> , then <activity id=13> register </activity> <activity_data id=14> all defaulting accounts and customers </activity_data> . <xor_gateway id=15> If </xor_gateway> <condition_specification id=16> the defaulting client codes have not been previously advised </condition_specification> , <activity id=17> produce </activity> <activity_data id=18> another table of defaulting accounts </activity_data> and <activity id=19> send </activity> to <actor id=20> account management </actor> . All of this must be <condition_specification id=21> completed by 2 : 30 pm </condition_specification> , <xor_gateway id=22> if </xor_gateway> <condition_specification id=23> it is not </condition_specification> , then <activity_data id=24> an alert </activity_data> should be <activity id=25> sent </activity> to <actor id=26> the supervisor </actor> . Once the new defaulting account report has been completed , <activity id=28> check </activity> <activity_data id=9> the CRM system </activity_data> <further_specification id=29> to see whether new returns have been filed </further_specification> . <xor_gateway id=30> If </xor_gateway> <condition_specification id=31> new returns have been filed </condition_specification> , <activity id=32> reconcile with </activity> <activity_data id=33> the existing account defaulters table </activity_data> . This must be <condition_specification id=34> completed by 4 : 0 pm </condition_specification> <xor_gateway id=35> otherwise </xor_gateway> <actor id=27> a supervisor </actor> should be <activity id=36> sent </activity> <activity_data id=37> a message </activity_data> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying the flow between business process relevant tasks in textual descriptions of business processes.\nThese tasks have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it. There are also some relations already extracted, which you can use for context during extracting flows.\n\n# Definition\n\nFlows are directed and therefore have a source mention and a target mention.\n\n**Flow**: Focus on the behavioural elements, which are mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". Extract the flow between behavioural elements, i.e., extract a relation of type \"flow\", if the text describes that one behavioural element is relevant during the process, before another behavioural element is.\nA flow relation between one behavioural element means, that it is relevant before another behavioural element, when the process is executed, e.g., if there is a flow between an \"XOR_Gateway\" and a \"Condition_Specification\" the XOR_Gateway is visited first (like an exclusive gateway in a BPMN process model), then the condition specification is relevant (like the condition in a BPMN process model). Afterwards there may be a flow between this \"Condition_Specification\" and an \"Activity\", because the condition is relevant first, and if it is fulfilled the employee has to perform the activity.\n\n# Format\n\nRetrieve a relation by listing the type (always \"flow\"), the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\nflow\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> and <activity id=3> sends </activity> <activity_data id=4> it </activity_data> back .\n\nYou will extract these relations\n\nflow\t0\t3\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nEvery weekday morning , <activity_data id=0> the database </activity_data> is <activity id=2> backed up </activity> and then <activity_data id=1> it </activity_data> is <activity id=3> checked </activity> <further_specification id=4> to see whether the Account Defaulter table has new records </further_specification> . <xor_gateway id=5> If </xor_gateway> <condition_specification id=6> no new records are found </condition_specification> , then the process should <activity id=7> check </activity> <activity_data id=8> the CRM system </activity_data> <further_specification id=10> to see whether new returns have been filed </further_specification> . <xor_gateway id=11> If </xor_gateway> <condition_specification id=12> new returns exist </condition_specification> , then <activity id=13> register </activity> <activity_data id=14> all defaulting accounts and customers </activity_data> . <xor_gateway id=15> If </xor_gateway> <condition_specification id=16> the defaulting client codes have not been previously advised </condition_specification> , <activity id=17> produce </activity> <activity_data id=18> another table of defaulting accounts </activity_data> and <activity id=19> send </activity> to <actor id=20> account management </actor> . All of this must be <condition_specification id=21> completed by 2 : 30 pm </condition_specification> , <xor_gateway id=22> if </xor_gateway> <condition_specification id=23> it is not </condition_specification> , then <activity_data id=24> an alert </activity_data> should be <activity id=25> sent </activity> to <actor id=26> the supervisor </actor> . Once the new defaulting account report has been completed , <activity id=28> check </activity> <activity_data id=9> the CRM system </activity_data> <further_specification id=29> to see whether new returns have been filed </further_specification> . <xor_gateway id=30> If </xor_gateway> <condition_specification id=31> new returns have been filed </condition_specification> , <activity id=32> reconcile with </activity> <activity_data id=33> the existing account defaulters table </activity_data> . This must be <condition_specification id=34> completed by 4 : 0 pm </condition_specification> <xor_gateway id=35> otherwise </xor_gateway> <actor id=27> a supervisor </actor> should be <activity id=36> sent </activity> <activity_data id=37> a message </activity_data> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying relations between mentions of business process relevant facts in textual descriptions of business processes.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n# Format\n\nRetrieve a relation by listing the relation type, the source mention index, and the target mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\nYou will extract these relations\n\nactor performer\t0\t1\nuses\t0\t2\n\n# Restrictions\n\nRule 1. Only extract relations with types, that are defined in chapter **Relation Types**.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nEvery weekday morning , <activity_data id=0> the database </activity_data> is <activity id=2> backed up </activity> and then <activity_data id=1> it </activity_data> is <activity id=3> checked </activity> <further_specification id=4> to see whether the Account Defaulter table has new records </further_specification> . <xor_gateway id=5> If </xor_gateway> <condition_specification id=6> no new records are found </condition_specification> , then the process should <activity id=7> check </activity> <activity_data id=8> the CRM system </activity_data> <further_specification id=10> to see whether new returns have been filed </further_specification> . <xor_gateway id=11> If </xor_gateway> <condition_specification id=12> new returns exist </condition_specification> , then <activity id=13> register </activity> <activity_data id=14> all defaulting accounts and customers </activity_data> . <xor_gateway id=15> If </xor_gateway> <condition_specification id=16> the defaulting client codes have not been previously advised </condition_specification> , <activity id=17> produce </activity> <activity_data id=18> another table of defaulting accounts </activity_data> and <activity id=19> send </activity> to <actor id=20> account management </actor> . All of this must be <condition_specification id=21> completed by 2 : 30 pm </condition_specification> , <xor_gateway id=22> if </xor_gateway> <condition_specification id=23> it is not </condition_specification> , then <activity_data id=24> an alert </activity_data> should be <activity id=25> sent </activity> to <actor id=26> the supervisor </actor> . Once the new defaulting account report has been completed , <activity id=28> check </activity> <activity_data id=9> the CRM system </activity_data> <further_specification id=29> to see whether new returns have been filed </further_specification> . <xor_gateway id=30> If </xor_gateway> <condition_specification id=31> new returns have been filed </condition_specification> , <activity id=32> reconcile with </activity> <activity_data id=33> the existing account defaulters table </activity_data> . This must be <condition_specification id=34> completed by 4 : 0 pm </condition_specification> <xor_gateway id=35> otherwise </xor_gateway> <actor id=27> a supervisor </actor> should be <activity id=36> sent </activity> <activity_data id=37> a message </activity_data> .\n\nNo relations found.\n"], "steps": [["relations"], ["relations"], ["relations"]], "formatter_args": [{"prompt": "pet/re/iterative/same_gateway.txt", "only_tags": ["same gateway"], "context_tags": null}, {"prompt": "pet/re/iterative/flow.txt", "only_tags": ["flow"], "context_tags": null}, {"prompt": "pet/re/iterative/remaining.txt", "only_tags": ["uses", "actor performer", "actor recipient", "further specification"], "context_tags": null}], "formatters": ["PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy"], "input_tokens": 3257, "output_tokens": 73, "total_costs": 0.0017380000000000002, "answers": ["No relations found.", "flow\t2\t3\nflow\t3\t7\nflow\t7\t13\nflow\t13\t17\nflow\t17\t19\nflow\t19\t20\nflow\t20\t21\nflow\t21\t25\nflow\t25\t28\nflow\t28\t32\nflow\t32\t36", "No relations found."], "original_id": "doc-9.1"}]}, {"meta": {"num_shots": 0, "model": "gpt-3.5-turbo-0125", "temperature": 0.0}, "results": [{"prompts": ["System: # Task\n\nYou are a business process modelling expert, tasked with identifying if two xor_gateways refer to the same decision point, and merely represent two possible paths in the process.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **same gateway**: Focus on XOR_Gateway mentions and their corresponding condition_specification. Find the next XOR_Gateway and its condition_specification in the text. If the two condition specifications describe the same decision, i.e., the first describes what to do in one case and the second in the other case, then extract a relation of type \"same gateway\" for the XOR_Gateways preceding the respective condition_specification.\n\n# Format\n\nDetect that two XOR_Gateways are the same, by listing the type of the relation (always \"same gateway\"), the index of the first one (source mention index), and the one appearing later in the text (target mention index), separated by tabs. List one relation per line.\n\nsame gateway\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\n<xor_gateway id=1> If </xor_gateway> <condition_specification id=0> the LLM finds two gateways that are the same </condition_specification>, <actor id=2> it </actor> <activity id=4> extracts </activity> <activity_data id=3> the relation </activity_data> . <xor_gateway id=5> Otherwise </xor_gateway> , <actor id=6> it </actor> <activity id=7> continues </activity> .\n\nYou will extract these relations\n\nsame gateway\t1\t5\n\n# Restrictions\n\nRule 1. Two XOR_Gateways or two AND_Gateway are only the same gateway, if they describe two paths of the same decision. There may appear multiple XOR_Gateways in the text, that are different decisions, and therefore are not the same gateway.\n\nRule 2. One XOR_Gateway be at most part of one \"same gateway\" relation.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nThe process of an Office Supply Request starts when <actor id=0> any employee </actor> of the organization <activity id=3> submits </activity> <activity_data id=4> an office supply request </activity_data> . Once <activity_data id=9> the requirement </activity_data> is <activity id=10> registered </activity> , <activity_data id=5> the request </activity_data> is <activity id=11> received </activity> by <actor id=12> the immediate supervisor of the employee </actor> requesting the office supplies . <actor id=13> The supervisor </actor> must <activity id=14> approve or ask for a change , or reject </activity> <activity_data id=6> the request </activity_data> . <xor_gateway id=15> If </xor_gateway> <condition_specification id=16> the request is rejected </condition_specification> the process will end . <xor_gateway id=17> If </xor_gateway> <condition_specification id=18> the request is asked to make a change </condition_specification> then <activity_data id=8> it </activity_data> is <activity id=19> returned </activity> to <actor id=1> the petitioner / employee </actor> who can <activity id=20> review </activity> <activity_data id=21> the comments for the change request </activity_data> . <xor_gateway id=22> If </xor_gateway> <condition_specification id=23> the request is approved </condition_specification> <activity_data id=7> it </activity_data> will <activity id=24> go </activity> to <actor id=25> the purchase department </actor> that will be in charge of <activity id=27> making </activity> <activity_data id=28> quotations </activity_data> ( using a subprocess ) and <activity id=29> select </activity> <activity_data id=30> a vendor </activity_data> . <xor_gateway id=31> If </xor_gateway> <condition_specification id=32> the vendor is not valid in the system </condition_specification> <actor id=26> the purchase department </actor> will have to <activity id=33> choose </activity> <activity_data id=34> a different vendor </activity_data> . After <activity_data id=35> a vendor </activity_data> is <activity id=36> selected </activity> and <activity id=37> confirmed </activity> , <actor id=38> the system </actor> will <activity id=39> generate </activity> and <activity id=40> send </activity> <activity_data id=41> a purchase order </activity_data> and <activity id=42> wait for </activity> <activity_data id=43> the product to be delivered </activity_data> and <activity_data id=44> the invoice received </activity_data> . In any case the system will send a notification to let the user know what the result was . In any of the cases , approval , rejection or change required <actor id=45> the system </actor> will <activity id=46> send </activity> <actor id=2> the user </actor> <activity_data id=47> a notification </activity_data> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying the flow between business process relevant tasks in textual descriptions of business processes.\nThese tasks have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it. There are also some relations already extracted, which you can use for context during extracting flows.\n\n# Definition\n\nFlows are directed and therefore have a source mention and a target mention.\n\n**Flow**: Focus on the behavioural elements, which are mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". Extract the flow between behavioural elements, i.e., extract a relation of type \"flow\", if the text describes that one behavioural element is relevant during the process, before another behavioural element is.\nA flow relation between one behavioural element means, that it is relevant before another behavioural element, when the process is executed, e.g., if there is a flow between an \"XOR_Gateway\" and a \"Condition_Specification\" the XOR_Gateway is visited first (like an exclusive gateway in a BPMN process model), then the condition specification is relevant (like the condition in a BPMN process model). Afterwards there may be a flow between this \"Condition_Specification\" and an \"Activity\", because the condition is relevant first, and if it is fulfilled the employee has to perform the activity.\n\n# Format\n\nRetrieve a relation by listing the type (always \"flow\"), the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\nflow\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> and <activity id=3> sends </activity> <activity_data id=4> it </activity_data> back .\n\nYou will extract these relations\n\nflow\t0\t3\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nThe process of an Office Supply Request starts when <actor id=0> any employee </actor> of the organization <activity id=3> submits </activity> <activity_data id=4> an office supply request </activity_data> . Once <activity_data id=9> the requirement </activity_data> is <activity id=10> registered </activity> , <activity_data id=5> the request </activity_data> is <activity id=11> received </activity> by <actor id=12> the immediate supervisor of the employee </actor> requesting the office supplies . <actor id=13> The supervisor </actor> must <activity id=14> approve or ask for a change , or reject </activity> <activity_data id=6> the request </activity_data> . <xor_gateway id=15> If </xor_gateway> <condition_specification id=16> the request is rejected </condition_specification> the process will end . <xor_gateway id=17> If </xor_gateway> <condition_specification id=18> the request is asked to make a change </condition_specification> then <activity_data id=8> it </activity_data> is <activity id=19> returned </activity> to <actor id=1> the petitioner / employee </actor> who can <activity id=20> review </activity> <activity_data id=21> the comments for the change request </activity_data> . <xor_gateway id=22> If </xor_gateway> <condition_specification id=23> the request is approved </condition_specification> <activity_data id=7> it </activity_data> will <activity id=24> go </activity> to <actor id=25> the purchase department </actor> that will be in charge of <activity id=27> making </activity> <activity_data id=28> quotations </activity_data> ( using a subprocess ) and <activity id=29> select </activity> <activity_data id=30> a vendor </activity_data> . <xor_gateway id=31> If </xor_gateway> <condition_specification id=32> the vendor is not valid in the system </condition_specification> <actor id=26> the purchase department </actor> will have to <activity id=33> choose </activity> <activity_data id=34> a different vendor </activity_data> . After <activity_data id=35> a vendor </activity_data> is <activity id=36> selected </activity> and <activity id=37> confirmed </activity> , <actor id=38> the system </actor> will <activity id=39> generate </activity> and <activity id=40> send </activity> <activity_data id=41> a purchase order </activity_data> and <activity id=42> wait for </activity> <activity_data id=43> the product to be delivered </activity_data> and <activity_data id=44> the invoice received </activity_data> . In any case the system will send a notification to let the user know what the result was . In any of the cases , approval , rejection or change required <actor id=45> the system </actor> will <activity id=46> send </activity> <actor id=2> the user </actor> <activity_data id=47> a notification </activity_data> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying relations between mentions of business process relevant facts in textual descriptions of business processes.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n# Format\n\nRetrieve a relation by listing the relation type, the source mention index, and the target mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\nYou will extract these relations\n\nactor performer\t0\t1\nuses\t0\t2\n\n# Restrictions\n\nRule 1. Only extract relations with types, that are defined in chapter **Relation Types**.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nThe process of an Office Supply Request starts when <actor id=0> any employee </actor> of the organization <activity id=3> submits </activity> <activity_data id=4> an office supply request </activity_data> . Once <activity_data id=9> the requirement </activity_data> is <activity id=10> registered </activity> , <activity_data id=5> the request </activity_data> is <activity id=11> received </activity> by <actor id=12> the immediate supervisor of the employee </actor> requesting the office supplies . <actor id=13> The supervisor </actor> must <activity id=14> approve or ask for a change , or reject </activity> <activity_data id=6> the request </activity_data> . <xor_gateway id=15> If </xor_gateway> <condition_specification id=16> the request is rejected </condition_specification> the process will end . <xor_gateway id=17> If </xor_gateway> <condition_specification id=18> the request is asked to make a change </condition_specification> then <activity_data id=8> it </activity_data> is <activity id=19> returned </activity> to <actor id=1> the petitioner / employee </actor> who can <activity id=20> review </activity> <activity_data id=21> the comments for the change request </activity_data> . <xor_gateway id=22> If </xor_gateway> <condition_specification id=23> the request is approved </condition_specification> <activity_data id=7> it </activity_data> will <activity id=24> go </activity> to <actor id=25> the purchase department </actor> that will be in charge of <activity id=27> making </activity> <activity_data id=28> quotations </activity_data> ( using a subprocess ) and <activity id=29> select </activity> <activity_data id=30> a vendor </activity_data> . <xor_gateway id=31> If </xor_gateway> <condition_specification id=32> the vendor is not valid in the system </condition_specification> <actor id=26> the purchase department </actor> will have to <activity id=33> choose </activity> <activity_data id=34> a different vendor </activity_data> . After <activity_data id=35> a vendor </activity_data> is <activity id=36> selected </activity> and <activity id=37> confirmed </activity> , <actor id=38> the system </actor> will <activity id=39> generate </activity> and <activity id=40> send </activity> <activity_data id=41> a purchase order </activity_data> and <activity id=42> wait for </activity> <activity_data id=43> the product to be delivered </activity_data> and <activity_data id=44> the invoice received </activity_data> . In any case the system will send a notification to let the user know what the result was . In any of the cases , approval , rejection or change required <actor id=45> the system </actor> will <activity id=46> send </activity> <actor id=2> the user </actor> <activity_data id=47> a notification </activity_data> .\n\nNo relations found.\n"], "steps": [["relations"], ["relations"], ["relations"]], "formatter_args": [{"prompt": "pet/re/iterative/same_gateway.txt", "only_tags": ["same gateway"], "context_tags": null}, {"prompt": "pet/re/iterative/flow.txt", "only_tags": ["flow"], "context_tags": null}, {"prompt": "pet/re/iterative/remaining.txt", "only_tags": ["uses", "actor performer", "actor recipient", "further specification"], "context_tags": null}], "formatters": ["PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy"], "input_tokens": 3569, "output_tokens": 175, "total_costs": 0.002047, "answers": ["No relations found.", "flow\t3\t10\nflow\t10\t11\nflow\t11\t12\nflow\t12\t14\nflow\t14\t15\nflow\t15\t16\nflow\t16\t17\nflow\t17\t18\nflow\t18\t19\nflow\t19\t1\nflow\t19\t22\nflow\t22\t23\nflow\t23\t24\nflow\t24\t25\nflow\t25\t27\nflow\t27\t29\nflow\t29\t31\nflow\t31\t32\nflow\t32\t26\nflow\t32\t33\nflow\t33\t36\nflow\t36\t37\nflow\t37\t38\nflow\t38\t39\nflow\t39\t40\nflow\t40\t42\nflow\t42\t46\nflow\t46\t2", "No relations found."], "original_id": "doc-5.3"}]}, {"meta": {"num_shots": 0, "model": "gpt-3.5-turbo-0125", "temperature": 0.0}, "results": [{"prompts": ["System: # Task\n\nYou are a business process modelling expert, tasked with identifying if two xor_gateways refer to the same decision point, and merely represent two possible paths in the process.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **same gateway**: Focus on XOR_Gateway mentions and their corresponding condition_specification. Find the next XOR_Gateway and its condition_specification in the text. If the two condition specifications describe the same decision, i.e., the first describes what to do in one case and the second in the other case, then extract a relation of type \"same gateway\" for the XOR_Gateways preceding the respective condition_specification.\n\n# Format\n\nDetect that two XOR_Gateways are the same, by listing the type of the relation (always \"same gateway\"), the index of the first one (source mention index), and the one appearing later in the text (target mention index), separated by tabs. List one relation per line.\n\nsame gateway\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\n<xor_gateway id=1> If </xor_gateway> <condition_specification id=0> the LLM finds two gateways that are the same </condition_specification>, <actor id=2> it </actor> <activity id=4> extracts </activity> <activity_data id=3> the relation </activity_data> . <xor_gateway id=5> Otherwise </xor_gateway> , <actor id=6> it </actor> <activity id=7> continues </activity> .\n\nYou will extract these relations\n\nsame gateway\t1\t5\n\n# Restrictions\n\nRule 1. Two XOR_Gateways or two AND_Gateway are only the same gateway, if they describe two paths of the same decision. There may appear multiple XOR_Gateways in the text, that are different decisions, and therefore are not the same gateway.\n\nRule 2. One XOR_Gateway be at most part of one \"same gateway\" relation.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The MPON </actor> <activity id=1> sents </activity> <activity_data id=2> the dismissal </activity_data> to <actor id=6> the MPOO </actor> . <actor id=8> The MPOO </actor> <activity id=10> reviews </activity> <activity_data id=5> the dismissal </activity_data> . <actor id=7> The MPOO </actor> <activity id=11> opposes </activity> <activity_data id=4> the dismissal </activity_data> of MPON <xor_gateway id=12> or </xor_gateway> <actor id=9> the MPOO </actor> <activity id=13> confirmes </activity> <activity_data id=3> the dismissal </activity_data> of the MPON .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying the flow between business process relevant tasks in textual descriptions of business processes.\nThese tasks have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it. There are also some relations already extracted, which you can use for context during extracting flows.\n\n# Definition\n\nFlows are directed and therefore have a source mention and a target mention.\n\n**Flow**: Focus on the behavioural elements, which are mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". Extract the flow between behavioural elements, i.e., extract a relation of type \"flow\", if the text describes that one behavioural element is relevant during the process, before another behavioural element is.\nA flow relation between one behavioural element means, that it is relevant before another behavioural element, when the process is executed, e.g., if there is a flow between an \"XOR_Gateway\" and a \"Condition_Specification\" the XOR_Gateway is visited first (like an exclusive gateway in a BPMN process model), then the condition specification is relevant (like the condition in a BPMN process model). Afterwards there may be a flow between this \"Condition_Specification\" and an \"Activity\", because the condition is relevant first, and if it is fulfilled the employee has to perform the activity.\n\n# Format\n\nRetrieve a relation by listing the type (always \"flow\"), the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\nflow\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> and <activity id=3> sends </activity> <activity_data id=4> it </activity_data> back .\n\nYou will extract these relations\n\nflow\t0\t3\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The MPON </actor> <activity id=1> sents </activity> <activity_data id=2> the dismissal </activity_data> to <actor id=6> the MPOO </actor> . <actor id=8> The MPOO </actor> <activity id=10> reviews </activity> <activity_data id=5> the dismissal </activity_data> . <actor id=7> The MPOO </actor> <activity id=11> opposes </activity> <activity_data id=4> the dismissal </activity_data> of MPON <xor_gateway id=12> or </xor_gateway> <actor id=9> the MPOO </actor> <activity id=13> confirmes </activity> <activity_data id=3> the dismissal </activity_data> of the MPON .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying relations between mentions of business process relevant facts in textual descriptions of business processes.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n# Format\n\nRetrieve a relation by listing the relation type, the source mention index, and the target mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\nYou will extract these relations\n\nactor performer\t0\t1\nuses\t0\t2\n\n# Restrictions\n\nRule 1. Only extract relations with types, that are defined in chapter **Relation Types**.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The MPON </actor> <activity id=1> sents </activity> <activity_data id=2> the dismissal </activity_data> to <actor id=6> the MPOO </actor> . <actor id=8> The MPOO </actor> <activity id=10> reviews </activity> <activity_data id=5> the dismissal </activity_data> . <actor id=7> The MPOO </actor> <activity id=11> opposes </activity> <activity_data id=4> the dismissal </activity_data> of MPON <xor_gateway id=12> or </xor_gateway> <actor id=9> the MPOO </actor> <activity id=13> confirmes </activity> <activity_data id=3> the dismissal </activity_data> of the MPON .\n\nNo relations found.\n"], "steps": [["relations"], ["relations"], ["relations"]], "formatter_args": [{"prompt": "pet/re/iterative/same_gateway.txt", "only_tags": ["same gateway"], "context_tags": null}, {"prompt": "pet/re/iterative/flow.txt", "only_tags": ["flow"], "context_tags": null}, {"prompt": "pet/re/iterative/remaining.txt", "only_tags": ["uses", "actor performer", "actor recipient", "further specification"], "context_tags": null}], "formatters": ["PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy"], "input_tokens": 2009, "output_tokens": 25, "total_costs": 0.001042, "answers": ["No relations found.", "flow\t1\t10\nflow\t10\t11\nflow\t11\t13", "No relations found."], "original_id": "doc-10.1"}]}, {"meta": {"num_shots": 0, "model": "gpt-3.5-turbo-0125", "temperature": 0.0}, "results": [{"prompts": ["System: # Task\n\nYou are a business process modelling expert, tasked with identifying if two xor_gateways refer to the same decision point, and merely represent two possible paths in the process.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **same gateway**: Focus on XOR_Gateway mentions and their corresponding condition_specification. Find the next XOR_Gateway and its condition_specification in the text. If the two condition specifications describe the same decision, i.e., the first describes what to do in one case and the second in the other case, then extract a relation of type \"same gateway\" for the XOR_Gateways preceding the respective condition_specification.\n\n# Format\n\nDetect that two XOR_Gateways are the same, by listing the type of the relation (always \"same gateway\"), the index of the first one (source mention index), and the one appearing later in the text (target mention index), separated by tabs. List one relation per line.\n\nsame gateway\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\n<xor_gateway id=1> If </xor_gateway> <condition_specification id=0> the LLM finds two gateways that are the same </condition_specification>, <actor id=2> it </actor> <activity id=4> extracts </activity> <activity_data id=3> the relation </activity_data> . <xor_gateway id=5> Otherwise </xor_gateway> , <actor id=6> it </actor> <activity id=7> continues </activity> .\n\nYou will extract these relations\n\nsame gateway\t1\t5\n\n# Restrictions\n\nRule 1. Two XOR_Gateways or two AND_Gateway are only the same gateway, if they describe two paths of the same decision. There may appear multiple XOR_Gateways in the text, that are different decisions, and therefore are not the same gateway.\n\nRule 2. One XOR_Gateway be at most part of one \"same gateway\" relation.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nThe first step is to <activity id=0> determine </activity> <activity_data id=1> contact details </activity_data> of potential customers . This can be achieved in several ways . <xor_gateway id=2> Sometimes </xor_gateway> , <actor id=3> we </actor> <activity id=6> buy </activity> <activity_data id=7> details for cold calls </activity_data> , <xor_gateway id=8> sometimes </xor_gateway> , <actor id=9> our marketing staff </actor> <activity id=10> participates </activity> in exhibitions and <xor_gateway id=11> sometimes </xor_gateway> , <actor id=5> you </actor> just happen to <activity id=12> know </activity> <activity_data id=13> somebody , who is interested in the product </activity_data> . Then <actor id=4> we </actor> start <activity id=14> calling </activity> <actor id=17> the customer </actor> . That is done by the call center staff . <actor id=20> They </actor> are <activity id=21> determining </activity> <activity_data id=22> the contact person </activity_data> and <activity_data id=23> the budget </activity_data> which would be available for the project . Of course , <activity id=24> asking </activity> <actor id=19> the customer </actor> whether he is generally interested is also important . <xor_gateway id=25> If </xor_gateway> <condition_specification id=26> this is not the case </condition_specification> , we <activity id=27> leave </activity> <activity_data id=15> him </activity_data> alone , except <xor_gateway id=28> if </xor_gateway> <condition_specification id=29> the potential project budget is huge </condition_specification> . Then <actor id=30> the head of development </actor> personally tries to <activity id=31> acquire </activity> <activity_data id=16> the customer </activity_data> . <xor_gateway id=32> If </xor_gateway> <condition_specification id=33> the customer is interested in the end </condition_specification> , the next step is <activity_data id=34> a detailed online presentation </activity_data> . It is <activity id=35> given </activity> either by a sales representative or by a pre-sales employee in case of a more technical presentation . Afterwards we are <activity id=36> waiting for </activity> <activity_data id=37> the customer to come back to us </activity_data> . <xor_gateway id=38> If </xor_gateway> <condition_specification id=39> we are not contacted within 2 weeks </condition_specification> , <actor id=40> a sales representative </actor> is <activity id=41> calling </activity> <actor id=18> the customer </actor> . The last phase is the <activity id=42> creation </activity> of <activity_data id=43> a quotation </activity_data> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying the flow between business process relevant tasks in textual descriptions of business processes.\nThese tasks have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it. There are also some relations already extracted, which you can use for context during extracting flows.\n\n# Definition\n\nFlows are directed and therefore have a source mention and a target mention.\n\n**Flow**: Focus on the behavioural elements, which are mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". Extract the flow between behavioural elements, i.e., extract a relation of type \"flow\", if the text describes that one behavioural element is relevant during the process, before another behavioural element is.\nA flow relation between one behavioural element means, that it is relevant before another behavioural element, when the process is executed, e.g., if there is a flow between an \"XOR_Gateway\" and a \"Condition_Specification\" the XOR_Gateway is visited first (like an exclusive gateway in a BPMN process model), then the condition specification is relevant (like the condition in a BPMN process model). Afterwards there may be a flow between this \"Condition_Specification\" and an \"Activity\", because the condition is relevant first, and if it is fulfilled the employee has to perform the activity.\n\n# Format\n\nRetrieve a relation by listing the type (always \"flow\"), the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\nflow\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> and <activity id=3> sends </activity> <activity_data id=4> it </activity_data> back .\n\nYou will extract these relations\n\nflow\t0\t3\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nThe first step is to <activity id=0> determine </activity> <activity_data id=1> contact details </activity_data> of potential customers . This can be achieved in several ways . <xor_gateway id=2> Sometimes </xor_gateway> , <actor id=3> we </actor> <activity id=6> buy </activity> <activity_data id=7> details for cold calls </activity_data> , <xor_gateway id=8> sometimes </xor_gateway> , <actor id=9> our marketing staff </actor> <activity id=10> participates </activity> in exhibitions and <xor_gateway id=11> sometimes </xor_gateway> , <actor id=5> you </actor> just happen to <activity id=12> know </activity> <activity_data id=13> somebody , who is interested in the product </activity_data> . Then <actor id=4> we </actor> start <activity id=14> calling </activity> <actor id=17> the customer </actor> . That is done by the call center staff . <actor id=20> They </actor> are <activity id=21> determining </activity> <activity_data id=22> the contact person </activity_data> and <activity_data id=23> the budget </activity_data> which would be available for the project . Of course , <activity id=24> asking </activity> <actor id=19> the customer </actor> whether he is generally interested is also important . <xor_gateway id=25> If </xor_gateway> <condition_specification id=26> this is not the case </condition_specification> , we <activity id=27> leave </activity> <activity_data id=15> him </activity_data> alone , except <xor_gateway id=28> if </xor_gateway> <condition_specification id=29> the potential project budget is huge </condition_specification> . Then <actor id=30> the head of development </actor> personally tries to <activity id=31> acquire </activity> <activity_data id=16> the customer </activity_data> . <xor_gateway id=32> If </xor_gateway> <condition_specification id=33> the customer is interested in the end </condition_specification> , the next step is <activity_data id=34> a detailed online presentation </activity_data> . It is <activity id=35> given </activity> either by a sales representative or by a pre-sales employee in case of a more technical presentation . Afterwards we are <activity id=36> waiting for </activity> <activity_data id=37> the customer to come back to us </activity_data> . <xor_gateway id=38> If </xor_gateway> <condition_specification id=39> we are not contacted within 2 weeks </condition_specification> , <actor id=40> a sales representative </actor> is <activity id=41> calling </activity> <actor id=18> the customer </actor> . The last phase is the <activity id=42> creation </activity> of <activity_data id=43> a quotation </activity_data> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying relations between mentions of business process relevant facts in textual descriptions of business processes.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n# Format\n\nRetrieve a relation by listing the relation type, the source mention index, and the target mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\nYou will extract these relations\n\nactor performer\t0\t1\nuses\t0\t2\n\n# Restrictions\n\nRule 1. Only extract relations with types, that are defined in chapter **Relation Types**.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nThe first step is to <activity id=0> determine </activity> <activity_data id=1> contact details </activity_data> of potential customers . This can be achieved in several ways . <xor_gateway id=2> Sometimes </xor_gateway> , <actor id=3> we </actor> <activity id=6> buy </activity> <activity_data id=7> details for cold calls </activity_data> , <xor_gateway id=8> sometimes </xor_gateway> , <actor id=9> our marketing staff </actor> <activity id=10> participates </activity> in exhibitions and <xor_gateway id=11> sometimes </xor_gateway> , <actor id=5> you </actor> just happen to <activity id=12> know </activity> <activity_data id=13> somebody , who is interested in the product </activity_data> . Then <actor id=4> we </actor> start <activity id=14> calling </activity> <actor id=17> the customer </actor> . That is done by the call center staff . <actor id=20> They </actor> are <activity id=21> determining </activity> <activity_data id=22> the contact person </activity_data> and <activity_data id=23> the budget </activity_data> which would be available for the project . Of course , <activity id=24> asking </activity> <actor id=19> the customer </actor> whether he is generally interested is also important . <xor_gateway id=25> If </xor_gateway> <condition_specification id=26> this is not the case </condition_specification> , we <activity id=27> leave </activity> <activity_data id=15> him </activity_data> alone , except <xor_gateway id=28> if </xor_gateway> <condition_specification id=29> the potential project budget is huge </condition_specification> . Then <actor id=30> the head of development </actor> personally tries to <activity id=31> acquire </activity> <activity_data id=16> the customer </activity_data> . <xor_gateway id=32> If </xor_gateway> <condition_specification id=33> the customer is interested in the end </condition_specification> , the next step is <activity_data id=34> a detailed online presentation </activity_data> . It is <activity id=35> given </activity> either by a sales representative or by a pre-sales employee in case of a more technical presentation . Afterwards we are <activity id=36> waiting for </activity> <activity_data id=37> the customer to come back to us </activity_data> . <xor_gateway id=38> If </xor_gateway> <condition_specification id=39> we are not contacted within 2 weeks </condition_specification> , <actor id=40> a sales representative </actor> is <activity id=41> calling </activity> <actor id=18> the customer </actor> . The last phase is the <activity id=42> creation </activity> of <activity_data id=43> a quotation </activity_data> .\n\nNo relations found.\n"], "steps": [["relations"], ["relations"], ["relations"]], "formatter_args": [{"prompt": "pet/re/iterative/same_gateway.txt", "only_tags": ["same gateway"], "context_tags": null}, {"prompt": "pet/re/iterative/flow.txt", "only_tags": ["flow"], "context_tags": null}, {"prompt": "pet/re/iterative/remaining.txt", "only_tags": ["uses", "actor performer", "actor recipient", "further specification"], "context_tags": null}], "formatters": ["PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy"], "input_tokens": 3452, "output_tokens": 12, "total_costs": 0.0017440000000000003, "answers": ["No relations found.", "No relations found.", "No relations found."], "original_id": "doc-6.4"}]}, {"meta": {"num_shots": 0, "model": "gpt-3.5-turbo-0125", "temperature": 0.0}, "results": [{"prompts": ["System: # Task\n\nYou are a business process modelling expert, tasked with identifying if two xor_gateways refer to the same decision point, and merely represent two possible paths in the process.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **same gateway**: Focus on XOR_Gateway mentions and their corresponding condition_specification. Find the next XOR_Gateway and its condition_specification in the text. If the two condition specifications describe the same decision, i.e., the first describes what to do in one case and the second in the other case, then extract a relation of type \"same gateway\" for the XOR_Gateways preceding the respective condition_specification.\n\n# Format\n\nDetect that two XOR_Gateways are the same, by listing the type of the relation (always \"same gateway\"), the index of the first one (source mention index), and the one appearing later in the text (target mention index), separated by tabs. List one relation per line.\n\nsame gateway\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\n<xor_gateway id=1> If </xor_gateway> <condition_specification id=0> the LLM finds two gateways that are the same </condition_specification>, <actor id=2> it </actor> <activity id=4> extracts </activity> <activity_data id=3> the relation </activity_data> . <xor_gateway id=5> Otherwise </xor_gateway> , <actor id=6> it </actor> <activity id=7> continues </activity> .\n\nYou will extract these relations\n\nsame gateway\t1\t5\n\n# Restrictions\n\nRule 1. Two XOR_Gateways or two AND_Gateway are only the same gateway, if they describe two paths of the same decision. There may appear multiple XOR_Gateways in the text, that are different decisions, and therefore are not the same gateway.\n\nRule 2. One XOR_Gateway be at most part of one \"same gateway\" relation.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nA small company manufactures customized bicycles . Whenever <actor id=0> the sales department </actor> <activity id=2> receives </activity> <activity_data id=3> an order </activity_data> , a new process instance is created . A member of the sales department can then <activity id=5> reject </activity> <xor_gateway id=6> or </xor_gateway> <activity id=7> accept </activity> <activity_data id=4> the order </activity_data> for a customized bike . In the former case , the process instance is finished . In the latter case , <actor id=8> the storehouse </actor> and <actor id=10> the engineering department </actor> are <activity id=13> informed </activity> . <actor id=9> The storehouse </actor> immediately <activity id=14> processes </activity> <activity_data id=15> the part list of the order </activity_data> and <activity id=16> checks </activity> <activity_data id=17> the required quantity of each part </activity_data> . <xor_gateway id=18> If </xor_gateway> <condition_specification id=19> the part is available in-house </condition_specification> , <activity_data id=20> it </activity_data> is <activity id=22> reserved </activity> . <xor_gateway id=23> If </xor_gateway> <condition_specification id=24> it is not available </condition_specification> , <activity_data id=21> it </activity_data> is <activity id=25> back-ordered </activity> . This procedure is repeated for each item on the part list . <and_gateway id=26> In the meantime </and_gateway> , <actor id=12> the engineering department </actor> <activity id=27> prepares </activity> <activity_data id=28> everything </activity_data> for the assembling of the ordered bicycle . <xor_gateway id=29> If </xor_gateway> <condition_specification id=30> the storehouse has successfully reserved or back-ordered every item of the part list </condition_specification> and the preparation activity has finished , <actor id=11> the engineering department </actor> <activity id=31> assembles </activity> <activity_data id=32> the bicycle </activity_data> . Afterwards , <actor id=1> the sales department </actor> <activity id=34> ships </activity> <activity_data id=33> the bicycle </activity_data> to <actor id=35> the customer </actor> and finishes the process instance .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying the flow between business process relevant tasks in textual descriptions of business processes.\nThese tasks have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it. There are also some relations already extracted, which you can use for context during extracting flows.\n\n# Definition\n\nFlows are directed and therefore have a source mention and a target mention.\n\n**Flow**: Focus on the behavioural elements, which are mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". Extract the flow between behavioural elements, i.e., extract a relation of type \"flow\", if the text describes that one behavioural element is relevant during the process, before another behavioural element is.\nA flow relation between one behavioural element means, that it is relevant before another behavioural element, when the process is executed, e.g., if there is a flow between an \"XOR_Gateway\" and a \"Condition_Specification\" the XOR_Gateway is visited first (like an exclusive gateway in a BPMN process model), then the condition specification is relevant (like the condition in a BPMN process model). Afterwards there may be a flow between this \"Condition_Specification\" and an \"Activity\", because the condition is relevant first, and if it is fulfilled the employee has to perform the activity.\n\n# Format\n\nRetrieve a relation by listing the type (always \"flow\"), the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\nflow\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> and <activity id=3> sends </activity> <activity_data id=4> it </activity_data> back .\n\nYou will extract these relations\n\nflow\t0\t3\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nA small company manufactures customized bicycles . Whenever <actor id=0> the sales department </actor> <activity id=2> receives </activity> <activity_data id=3> an order </activity_data> , a new process instance is created . A member of the sales department can then <activity id=5> reject </activity> <xor_gateway id=6> or </xor_gateway> <activity id=7> accept </activity> <activity_data id=4> the order </activity_data> for a customized bike . In the former case , the process instance is finished . In the latter case , <actor id=8> the storehouse </actor> and <actor id=10> the engineering department </actor> are <activity id=13> informed </activity> . <actor id=9> The storehouse </actor> immediately <activity id=14> processes </activity> <activity_data id=15> the part list of the order </activity_data> and <activity id=16> checks </activity> <activity_data id=17> the required quantity of each part </activity_data> . <xor_gateway id=18> If </xor_gateway> <condition_specification id=19> the part is available in-house </condition_specification> , <activity_data id=20> it </activity_data> is <activity id=22> reserved </activity> . <xor_gateway id=23> If </xor_gateway> <condition_specification id=24> it is not available </condition_specification> , <activity_data id=21> it </activity_data> is <activity id=25> back-ordered </activity> . This procedure is repeated for each item on the part list . <and_gateway id=26> In the meantime </and_gateway> , <actor id=12> the engineering department </actor> <activity id=27> prepares </activity> <activity_data id=28> everything </activity_data> for the assembling of the ordered bicycle . <xor_gateway id=29> If </xor_gateway> <condition_specification id=30> the storehouse has successfully reserved or back-ordered every item of the part list </condition_specification> and the preparation activity has finished , <actor id=11> the engineering department </actor> <activity id=31> assembles </activity> <activity_data id=32> the bicycle </activity_data> . Afterwards , <actor id=1> the sales department </actor> <activity id=34> ships </activity> <activity_data id=33> the bicycle </activity_data> to <actor id=35> the customer </actor> and finishes the process instance .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying relations between mentions of business process relevant facts in textual descriptions of business processes.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n# Format\n\nRetrieve a relation by listing the relation type, the source mention index, and the target mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\nYou will extract these relations\n\nactor performer\t0\t1\nuses\t0\t2\n\n# Restrictions\n\nRule 1. Only extract relations with types, that are defined in chapter **Relation Types**.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nA small company manufactures customized bicycles . Whenever <actor id=0> the sales department </actor> <activity id=2> receives </activity> <activity_data id=3> an order </activity_data> , a new process instance is created . A member of the sales department can then <activity id=5> reject </activity> <xor_gateway id=6> or </xor_gateway> <activity id=7> accept </activity> <activity_data id=4> the order </activity_data> for a customized bike . In the former case , the process instance is finished . In the latter case , <actor id=8> the storehouse </actor> and <actor id=10> the engineering department </actor> are <activity id=13> informed </activity> . <actor id=9> The storehouse </actor> immediately <activity id=14> processes </activity> <activity_data id=15> the part list of the order </activity_data> and <activity id=16> checks </activity> <activity_data id=17> the required quantity of each part </activity_data> . <xor_gateway id=18> If </xor_gateway> <condition_specification id=19> the part is available in-house </condition_specification> , <activity_data id=20> it </activity_data> is <activity id=22> reserved </activity> . <xor_gateway id=23> If </xor_gateway> <condition_specification id=24> it is not available </condition_specification> , <activity_data id=21> it </activity_data> is <activity id=25> back-ordered </activity> . This procedure is repeated for each item on the part list . <and_gateway id=26> In the meantime </and_gateway> , <actor id=12> the engineering department </actor> <activity id=27> prepares </activity> <activity_data id=28> everything </activity_data> for the assembling of the ordered bicycle . <xor_gateway id=29> If </xor_gateway> <condition_specification id=30> the storehouse has successfully reserved or back-ordered every item of the part list </condition_specification> and the preparation activity has finished , <actor id=11> the engineering department </actor> <activity id=31> assembles </activity> <activity_data id=32> the bicycle </activity_data> . Afterwards , <actor id=1> the sales department </actor> <activity id=34> ships </activity> <activity_data id=33> the bicycle </activity_data> to <actor id=35> the customer </actor> and finishes the process instance .\n\nNo relations found.\n"], "steps": [["relations"], ["relations"], ["relations"]], "formatter_args": [{"prompt": "pet/re/iterative/same_gateway.txt", "only_tags": ["same gateway"], "context_tags": null}, {"prompt": "pet/re/iterative/flow.txt", "only_tags": ["flow"], "context_tags": null}, {"prompt": "pet/re/iterative/remaining.txt", "only_tags": ["uses", "actor performer", "actor recipient", "further specification"], "context_tags": null}], "formatters": ["PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy"], "input_tokens": 3122, "output_tokens": 73, "total_costs": 0.0016705000000000003, "answers": ["No relations found.", "flow\t2\t5\nflow\t7\t13\nflow\t13\t14\nflow\t14\t16\nflow\t16\t18\nflow\t18\t20\nflow\t20\t22\nflow\t22\t26\nflow\t26\t27\nflow\t27\t31\nflow\t31\t34", "No relations found."], "original_id": "doc-1.1"}]}, {"meta": {"num_shots": 0, "model": "gpt-3.5-turbo-0125", "temperature": 0.0}, "results": [{"prompts": ["System: # Task\n\nYou are a business process modelling expert, tasked with identifying if two xor_gateways refer to the same decision point, and merely represent two possible paths in the process.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **same gateway**: Focus on XOR_Gateway mentions and their corresponding condition_specification. Find the next XOR_Gateway and its condition_specification in the text. If the two condition specifications describe the same decision, i.e., the first describes what to do in one case and the second in the other case, then extract a relation of type \"same gateway\" for the XOR_Gateways preceding the respective condition_specification.\n\n# Format\n\nDetect that two XOR_Gateways are the same, by listing the type of the relation (always \"same gateway\"), the index of the first one (source mention index), and the one appearing later in the text (target mention index), separated by tabs. List one relation per line.\n\nsame gateway\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\n<xor_gateway id=1> If </xor_gateway> <condition_specification id=0> the LLM finds two gateways that are the same </condition_specification>, <actor id=2> it </actor> <activity id=4> extracts </activity> <activity_data id=3> the relation </activity_data> . <xor_gateway id=5> Otherwise </xor_gateway> , <actor id=6> it </actor> <activity id=7> continues </activity> .\n\nYou will extract these relations\n\nsame gateway\t1\t5\n\n# Restrictions\n\nRule 1. Two XOR_Gateways or two AND_Gateway are only the same gateway, if they describe two paths of the same decision. There may appear multiple XOR_Gateways in the text, that are different decisions, and therefore are not the same gateway.\n\nRule 2. One XOR_Gateway be at most part of one \"same gateway\" relation.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The INQ </actor> <activity id=1> transmits </activity> <activity_data id=7> the transaction data request </activity_data> to <actor id=2> the IP </actor> . <actor id=4> The IP </actor> <activity id=5> checks </activity> <activity_data id=6> the request of the INQ </activity_data> . <actor id=3> The IP </actor> <activity id=8> answers </activity> <activity_data id=9> the question of the INQ </activity_data> <further_specification id=10> depending on the outcome of the examination </further_specification> , i.e . Transmission of data or rejection .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying the flow between business process relevant tasks in textual descriptions of business processes.\nThese tasks have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it. There are also some relations already extracted, which you can use for context during extracting flows.\n\n# Definition\n\nFlows are directed and therefore have a source mention and a target mention.\n\n**Flow**: Focus on the behavioural elements, which are mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". Extract the flow between behavioural elements, i.e., extract a relation of type \"flow\", if the text describes that one behavioural element is relevant during the process, before another behavioural element is.\nA flow relation between one behavioural element means, that it is relevant before another behavioural element, when the process is executed, e.g., if there is a flow between an \"XOR_Gateway\" and a \"Condition_Specification\" the XOR_Gateway is visited first (like an exclusive gateway in a BPMN process model), then the condition specification is relevant (like the condition in a BPMN process model). Afterwards there may be a flow between this \"Condition_Specification\" and an \"Activity\", because the condition is relevant first, and if it is fulfilled the employee has to perform the activity.\n\n# Format\n\nRetrieve a relation by listing the type (always \"flow\"), the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\nflow\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> and <activity id=3> sends </activity> <activity_data id=4> it </activity_data> back .\n\nYou will extract these relations\n\nflow\t0\t3\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The INQ </actor> <activity id=1> transmits </activity> <activity_data id=7> the transaction data request </activity_data> to <actor id=2> the IP </actor> . <actor id=4> The IP </actor> <activity id=5> checks </activity> <activity_data id=6> the request of the INQ </activity_data> . <actor id=3> The IP </actor> <activity id=8> answers </activity> <activity_data id=9> the question of the INQ </activity_data> <further_specification id=10> depending on the outcome of the examination </further_specification> , i.e . Transmission of data or rejection .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying relations between mentions of business process relevant facts in textual descriptions of business processes.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n# Format\n\nRetrieve a relation by listing the relation type, the source mention index, and the target mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\nYou will extract these relations\n\nactor performer\t0\t1\nuses\t0\t2\n\n# Restrictions\n\nRule 1. Only extract relations with types, that are defined in chapter **Relation Types**.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The INQ </actor> <activity id=1> transmits </activity> <activity_data id=7> the transaction data request </activity_data> to <actor id=2> the IP </actor> . <actor id=4> The IP </actor> <activity id=5> checks </activity> <activity_data id=6> the request of the INQ </activity_data> . <actor id=3> The IP </actor> <activity id=8> answers </activity> <activity_data id=9> the question of the INQ </activity_data> <further_specification id=10> depending on the outcome of the examination </further_specification> , i.e . Transmission of data or rejection .\n\nNo relations found.\n"], "steps": [["relations"], ["relations"], ["relations"]], "formatter_args": [{"prompt": "pet/re/iterative/same_gateway.txt", "only_tags": ["same gateway"], "context_tags": null}, {"prompt": "pet/re/iterative/flow.txt", "only_tags": ["flow"], "context_tags": null}, {"prompt": "pet/re/iterative/remaining.txt", "only_tags": ["uses", "actor performer", "actor recipient", "further specification"], "context_tags": null}], "formatters": ["PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy"], "input_tokens": 1946, "output_tokens": 19, "total_costs": 0.0010015, "answers": ["No relations found.", "flow\t1\t5\nflow\t5\t8", "No relations found."], "original_id": "doc-10.13"}]}, {"meta": {"num_shots": 0, "model": "gpt-3.5-turbo-0125", "temperature": 0.0}, "results": [{"prompts": ["System: # Task\n\nYou are a business process modelling expert, tasked with identifying if two xor_gateways refer to the same decision point, and merely represent two possible paths in the process.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **same gateway**: Focus on XOR_Gateway mentions and their corresponding condition_specification. Find the next XOR_Gateway and its condition_specification in the text. If the two condition specifications describe the same decision, i.e., the first describes what to do in one case and the second in the other case, then extract a relation of type \"same gateway\" for the XOR_Gateways preceding the respective condition_specification.\n\n# Format\n\nDetect that two XOR_Gateways are the same, by listing the type of the relation (always \"same gateway\"), the index of the first one (source mention index), and the one appearing later in the text (target mention index), separated by tabs. List one relation per line.\n\nsame gateway\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\n<xor_gateway id=1> If </xor_gateway> <condition_specification id=0> the LLM finds two gateways that are the same </condition_specification>, <actor id=2> it </actor> <activity id=4> extracts </activity> <activity_data id=3> the relation </activity_data> . <xor_gateway id=5> Otherwise </xor_gateway> , <actor id=6> it </actor> <activity id=7> continues </activity> .\n\nYou will extract these relations\n\nsame gateway\t1\t5\n\n# Restrictions\n\nRule 1. Two XOR_Gateways or two AND_Gateway are only the same gateway, if they describe two paths of the same decision. There may appear multiple XOR_Gateways in the text, that are different decisions, and therefore are not the same gateway.\n\nRule 2. One XOR_Gateway be at most part of one \"same gateway\" relation.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The MSPN </actor> <activity id=1> sents </activity> <activity_data id=2> a dismissal </activity_data> to <actor id=6> the MSPO </actor> . <actor id=9> The MSPO </actor> <activity id=10> reviews </activity> <activity_data id=3> the dismissal </activity_data> . <actor id=8> The MSPO </actor> <activity id=11> rejects </activity> <activity_data id=5> the dismissal of the MSPN </activity_data> <xor_gateway id=12> or </xor_gateway> <actor id=7> The MSPO </actor> <activity id=13> confirms </activity> <activity_data id=4> the dismissal of the MSPN </activity_data> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying the flow between business process relevant tasks in textual descriptions of business processes.\nThese tasks have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it. There are also some relations already extracted, which you can use for context during extracting flows.\n\n# Definition\n\nFlows are directed and therefore have a source mention and a target mention.\n\n**Flow**: Focus on the behavioural elements, which are mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". Extract the flow between behavioural elements, i.e., extract a relation of type \"flow\", if the text describes that one behavioural element is relevant during the process, before another behavioural element is.\nA flow relation between one behavioural element means, that it is relevant before another behavioural element, when the process is executed, e.g., if there is a flow between an \"XOR_Gateway\" and a \"Condition_Specification\" the XOR_Gateway is visited first (like an exclusive gateway in a BPMN process model), then the condition specification is relevant (like the condition in a BPMN process model). Afterwards there may be a flow between this \"Condition_Specification\" and an \"Activity\", because the condition is relevant first, and if it is fulfilled the employee has to perform the activity.\n\n# Format\n\nRetrieve a relation by listing the type (always \"flow\"), the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\nflow\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> and <activity id=3> sends </activity> <activity_data id=4> it </activity_data> back .\n\nYou will extract these relations\n\nflow\t0\t3\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The MSPN </actor> <activity id=1> sents </activity> <activity_data id=2> a dismissal </activity_data> to <actor id=6> the MSPO </actor> . <actor id=9> The MSPO </actor> <activity id=10> reviews </activity> <activity_data id=3> the dismissal </activity_data> . <actor id=8> The MSPO </actor> <activity id=11> rejects </activity> <activity_data id=5> the dismissal of the MSPN </activity_data> <xor_gateway id=12> or </xor_gateway> <actor id=7> The MSPO </actor> <activity id=13> confirms </activity> <activity_data id=4> the dismissal of the MSPN </activity_data> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying relations between mentions of business process relevant facts in textual descriptions of business processes.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n# Format\n\nRetrieve a relation by listing the relation type, the source mention index, and the target mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\nYou will extract these relations\n\nactor performer\t0\t1\nuses\t0\t2\n\n# Restrictions\n\nRule 1. Only extract relations with types, that are defined in chapter **Relation Types**.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The MSPN </actor> <activity id=1> sents </activity> <activity_data id=2> a dismissal </activity_data> to <actor id=6> the MSPO </actor> . <actor id=9> The MSPO </actor> <activity id=10> reviews </activity> <activity_data id=3> the dismissal </activity_data> . <actor id=8> The MSPO </actor> <activity id=11> rejects </activity> <activity_data id=5> the dismissal of the MSPN </activity_data> <xor_gateway id=12> or </xor_gateway> <actor id=7> The MSPO </actor> <activity id=13> confirms </activity> <activity_data id=4> the dismissal of the MSPN </activity_data> .\n\nNo relations found.\n"], "steps": [["relations"], ["relations"], ["relations"]], "formatter_args": [{"prompt": "pet/re/iterative/same_gateway.txt", "only_tags": ["same gateway"], "context_tags": null}, {"prompt": "pet/re/iterative/flow.txt", "only_tags": ["flow"], "context_tags": null}, {"prompt": "pet/re/iterative/remaining.txt", "only_tags": ["uses", "actor performer", "actor recipient", "further specification"], "context_tags": null}], "formatters": ["PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy"], "input_tokens": 1997, "output_tokens": 31, "total_costs": 0.001045, "answers": ["No relations found.", "flow\t1\t2\nflow\t10\t3\nflow\t11\t5\nflow\t13\t4", "No relations found."], "original_id": "doc-10.6"}]}, {"meta": {"num_shots": 0, "model": "gpt-3.5-turbo-0125", "temperature": 0.0}, "results": [{"prompts": ["System: # Task\n\nYou are a business process modelling expert, tasked with identifying if two xor_gateways refer to the same decision point, and merely represent two possible paths in the process.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **same gateway**: Focus on XOR_Gateway mentions and their corresponding condition_specification. Find the next XOR_Gateway and its condition_specification in the text. If the two condition specifications describe the same decision, i.e., the first describes what to do in one case and the second in the other case, then extract a relation of type \"same gateway\" for the XOR_Gateways preceding the respective condition_specification.\n\n# Format\n\nDetect that two XOR_Gateways are the same, by listing the type of the relation (always \"same gateway\"), the index of the first one (source mention index), and the one appearing later in the text (target mention index), separated by tabs. List one relation per line.\n\nsame gateway\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\n<xor_gateway id=1> If </xor_gateway> <condition_specification id=0> the LLM finds two gateways that are the same </condition_specification>, <actor id=2> it </actor> <activity id=4> extracts </activity> <activity_data id=3> the relation </activity_data> . <xor_gateway id=5> Otherwise </xor_gateway> , <actor id=6> it </actor> <activity id=7> continues </activity> .\n\nYou will extract these relations\n\nsame gateway\t1\t5\n\n# Restrictions\n\nRule 1. Two XOR_Gateways or two AND_Gateway are only the same gateway, if they describe two paths of the same decision. There may appear multiple XOR_Gateways in the text, that are different decisions, and therefore are not the same gateway.\n\nRule 2. One XOR_Gateway be at most part of one \"same gateway\" relation.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nOnce <activity_data id=0> the dates </activity_data> are <activity id=1> finalized </activity> ( by <actor id=2> the Coordination Unit </actor> ) , <actor id=3> the Support Officer </actor> <activity id=6> updates </activity> <activity_data id=7> all group calendars </activity_data> and <activity id=8> creates </activity> <activity_data id=9> meeting folders for each meeting </activity_data> and <activity id=10> ensures </activity> <activity_data id=11> all appropriate documents are uploaded to system </activity_data> . <actor id=12> Committee Members </actor> are <activity id=15> advised </activity> a week before each meeting to read all related documents . <actor id=13> The Committee Members </actor> <activity id=16> hold </activity> <activity_data id=17> their meeting </activity_data> , and <actor id=5> the Support Office </actor> then <activity id=18> produces </activity> <activity_data id=19> minutes </activity_data> including any Action Points for each Committee Member . Within 5 working days , <actor id=21> the Coordination Unit </actor> must <activity id=22> conduct </activity> <activity_data id=23> a QA check on the minutes </activity_data> , <activity_data id=20> which </activity_data> are then <activity id=24> sent </activity> to <actor id=14> all Committee Members </actor> . <actor id=4> The Support Officer </actor> then <activity id=25> updates </activity> <activity_data id=26> all departmental records </activity_data> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying the flow between business process relevant tasks in textual descriptions of business processes.\nThese tasks have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it. There are also some relations already extracted, which you can use for context during extracting flows.\n\n# Definition\n\nFlows are directed and therefore have a source mention and a target mention.\n\n**Flow**: Focus on the behavioural elements, which are mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". Extract the flow between behavioural elements, i.e., extract a relation of type \"flow\", if the text describes that one behavioural element is relevant during the process, before another behavioural element is.\nA flow relation between one behavioural element means, that it is relevant before another behavioural element, when the process is executed, e.g., if there is a flow between an \"XOR_Gateway\" and a \"Condition_Specification\" the XOR_Gateway is visited first (like an exclusive gateway in a BPMN process model), then the condition specification is relevant (like the condition in a BPMN process model). Afterwards there may be a flow between this \"Condition_Specification\" and an \"Activity\", because the condition is relevant first, and if it is fulfilled the employee has to perform the activity.\n\n# Format\n\nRetrieve a relation by listing the type (always \"flow\"), the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\nflow\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> and <activity id=3> sends </activity> <activity_data id=4> it </activity_data> back .\n\nYou will extract these relations\n\nflow\t0\t3\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nOnce <activity_data id=0> the dates </activity_data> are <activity id=1> finalized </activity> ( by <actor id=2> the Coordination Unit </actor> ) , <actor id=3> the Support Officer </actor> <activity id=6> updates </activity> <activity_data id=7> all group calendars </activity_data> and <activity id=8> creates </activity> <activity_data id=9> meeting folders for each meeting </activity_data> and <activity id=10> ensures </activity> <activity_data id=11> all appropriate documents are uploaded to system </activity_data> . <actor id=12> Committee Members </actor> are <activity id=15> advised </activity> a week before each meeting to read all related documents . <actor id=13> The Committee Members </actor> <activity id=16> hold </activity> <activity_data id=17> their meeting </activity_data> , and <actor id=5> the Support Office </actor> then <activity id=18> produces </activity> <activity_data id=19> minutes </activity_data> including any Action Points for each Committee Member . Within 5 working days , <actor id=21> the Coordination Unit </actor> must <activity id=22> conduct </activity> <activity_data id=23> a QA check on the minutes </activity_data> , <activity_data id=20> which </activity_data> are then <activity id=24> sent </activity> to <actor id=14> all Committee Members </actor> . <actor id=4> The Support Officer </actor> then <activity id=25> updates </activity> <activity_data id=26> all departmental records </activity_data> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying relations between mentions of business process relevant facts in textual descriptions of business processes.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n# Format\n\nRetrieve a relation by listing the relation type, the source mention index, and the target mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\nYou will extract these relations\n\nactor performer\t0\t1\nuses\t0\t2\n\n# Restrictions\n\nRule 1. Only extract relations with types, that are defined in chapter **Relation Types**.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nOnce <activity_data id=0> the dates </activity_data> are <activity id=1> finalized </activity> ( by <actor id=2> the Coordination Unit </actor> ) , <actor id=3> the Support Officer </actor> <activity id=6> updates </activity> <activity_data id=7> all group calendars </activity_data> and <activity id=8> creates </activity> <activity_data id=9> meeting folders for each meeting </activity_data> and <activity id=10> ensures </activity> <activity_data id=11> all appropriate documents are uploaded to system </activity_data> . <actor id=12> Committee Members </actor> are <activity id=15> advised </activity> a week before each meeting to read all related documents . <actor id=13> The Committee Members </actor> <activity id=16> hold </activity> <activity_data id=17> their meeting </activity_data> , and <actor id=5> the Support Office </actor> then <activity id=18> produces </activity> <activity_data id=19> minutes </activity_data> including any Action Points for each Committee Member . Within 5 working days , <actor id=21> the Coordination Unit </actor> must <activity id=22> conduct </activity> <activity_data id=23> a QA check on the minutes </activity_data> , <activity_data id=20> which </activity_data> are then <activity id=24> sent </activity> to <actor id=14> all Committee Members </actor> . <actor id=4> The Support Officer </actor> then <activity id=25> updates </activity> <activity_data id=26> all departmental records </activity_data> .\n\nNo relations found.\n"], "steps": [["relations"], ["relations"], ["relations"]], "formatter_args": [{"prompt": "pet/re/iterative/same_gateway.txt", "only_tags": ["same gateway"], "context_tags": null}, {"prompt": "pet/re/iterative/flow.txt", "only_tags": ["flow"], "context_tags": null}, {"prompt": "pet/re/iterative/remaining.txt", "only_tags": ["uses", "actor performer", "actor recipient", "further specification"], "context_tags": null}], "formatters": ["PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy"], "input_tokens": 2588, "output_tokens": 61, "total_costs": 0.0013855, "answers": ["No relations found.", "flow\t1\t6\nflow\t6\t8\nflow\t8\t10\nflow\t10\t15\nflow\t15\t16\nflow\t16\t18\nflow\t18\t22\nflow\t22\t24\nflow\t24\t25", "No relations found."], "original_id": "doc-9.4"}]}, {"meta": {"num_shots": 0, "model": "gpt-3.5-turbo-0125", "temperature": 0.0}, "results": [{"prompts": ["System: # Task\n\nYou are a business process modelling expert, tasked with identifying if two xor_gateways refer to the same decision point, and merely represent two possible paths in the process.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **same gateway**: Focus on XOR_Gateway mentions and their corresponding condition_specification. Find the next XOR_Gateway and its condition_specification in the text. If the two condition specifications describe the same decision, i.e., the first describes what to do in one case and the second in the other case, then extract a relation of type \"same gateway\" for the XOR_Gateways preceding the respective condition_specification.\n\n# Format\n\nDetect that two XOR_Gateways are the same, by listing the type of the relation (always \"same gateway\"), the index of the first one (source mention index), and the one appearing later in the text (target mention index), separated by tabs. List one relation per line.\n\nsame gateway\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\n<xor_gateway id=1> If </xor_gateway> <condition_specification id=0> the LLM finds two gateways that are the same </condition_specification>, <actor id=2> it </actor> <activity id=4> extracts </activity> <activity_data id=3> the relation </activity_data> . <xor_gateway id=5> Otherwise </xor_gateway> , <actor id=6> it </actor> <activity id=7> continues </activity> .\n\nYou will extract these relations\n\nsame gateway\t1\t5\n\n# Restrictions\n\nRule 1. Two XOR_Gateways or two AND_Gateway are only the same gateway, if they describe two paths of the same decision. There may appear multiple XOR_Gateways in the text, that are different decisions, and therefore are not the same gateway.\n\nRule 2. One XOR_Gateway be at most part of one \"same gateway\" relation.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nWhen <activity_data id=0> a claim </activity_data> is <activity id=3> received </activity> , <activity_data id=2> it </activity_data> is first <activity id=4> checked </activity> whether the claimant is insured by the organization . <xor_gateway id=5> If </xor_gateway> <condition_specification id=6> not </condition_specification> , <actor id=7> the claimant </actor> is <activity id=10> informed </activity> that <activity_data id=11> the claim must be rejected </activity_data> . <xor_gateway id=12> Otherwise </xor_gateway> , <activity_data id=13> the severity of the claim </activity_data> is <activity id=14> evaluated </activity> . Based on the outcome ( simple or complex claims ) , <activity_data id=15> relevant forms </activity_data> are <activity id=18> sent </activity> to <actor id=9> the claimant </actor> . Once <activity_data id=16> the forms </activity_data> are <activity id=19> returned </activity> , <activity_data id=17> they </activity_data> are <activity id=20> checked </activity> <further_specification id=21> for completeness </further_specification> . <xor_gateway id=22> If </xor_gateway> <condition_specification id=23> the forms provide all relevant details </condition_specification> , <activity_data id=1> the claim </activity_data> is <activity id=24> registered </activity> <further_specification id=25> in the Claims Management system </further_specification> , which ends the Claims Notification process . <xor_gateway id=26> Otherwise </xor_gateway> , <actor id=8> the claimant </actor> is <activity id=27> informed </activity> <further_specification id=28> to update the forms </further_specification> . Upon reception of the updated forms , they are checked again .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying the flow between business process relevant tasks in textual descriptions of business processes.\nThese tasks have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it. There are also some relations already extracted, which you can use for context during extracting flows.\n\n# Definition\n\nFlows are directed and therefore have a source mention and a target mention.\n\n**Flow**: Focus on the behavioural elements, which are mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". Extract the flow between behavioural elements, i.e., extract a relation of type \"flow\", if the text describes that one behavioural element is relevant during the process, before another behavioural element is.\nA flow relation between one behavioural element means, that it is relevant before another behavioural element, when the process is executed, e.g., if there is a flow between an \"XOR_Gateway\" and a \"Condition_Specification\" the XOR_Gateway is visited first (like an exclusive gateway in a BPMN process model), then the condition specification is relevant (like the condition in a BPMN process model). Afterwards there may be a flow between this \"Condition_Specification\" and an \"Activity\", because the condition is relevant first, and if it is fulfilled the employee has to perform the activity.\n\n# Format\n\nRetrieve a relation by listing the type (always \"flow\"), the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\nflow\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> and <activity id=3> sends </activity> <activity_data id=4> it </activity_data> back .\n\nYou will extract these relations\n\nflow\t0\t3\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nWhen <activity_data id=0> a claim </activity_data> is <activity id=3> received </activity> , <activity_data id=2> it </activity_data> is first <activity id=4> checked </activity> whether the claimant is insured by the organization . <xor_gateway id=5> If </xor_gateway> <condition_specification id=6> not </condition_specification> , <actor id=7> the claimant </actor> is <activity id=10> informed </activity> that <activity_data id=11> the claim must be rejected </activity_data> . <xor_gateway id=12> Otherwise </xor_gateway> , <activity_data id=13> the severity of the claim </activity_data> is <activity id=14> evaluated </activity> . Based on the outcome ( simple or complex claims ) , <activity_data id=15> relevant forms </activity_data> are <activity id=18> sent </activity> to <actor id=9> the claimant </actor> . Once <activity_data id=16> the forms </activity_data> are <activity id=19> returned </activity> , <activity_data id=17> they </activity_data> are <activity id=20> checked </activity> <further_specification id=21> for completeness </further_specification> . <xor_gateway id=22> If </xor_gateway> <condition_specification id=23> the forms provide all relevant details </condition_specification> , <activity_data id=1> the claim </activity_data> is <activity id=24> registered </activity> <further_specification id=25> in the Claims Management system </further_specification> , which ends the Claims Notification process . <xor_gateway id=26> Otherwise </xor_gateway> , <actor id=8> the claimant </actor> is <activity id=27> informed </activity> <further_specification id=28> to update the forms </further_specification> . Upon reception of the updated forms , they are checked again .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying relations between mentions of business process relevant facts in textual descriptions of business processes.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n# Format\n\nRetrieve a relation by listing the relation type, the source mention index, and the target mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\nYou will extract these relations\n\nactor performer\t0\t1\nuses\t0\t2\n\n# Restrictions\n\nRule 1. Only extract relations with types, that are defined in chapter **Relation Types**.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nWhen <activity_data id=0> a claim </activity_data> is <activity id=3> received </activity> , <activity_data id=2> it </activity_data> is first <activity id=4> checked </activity> whether the claimant is insured by the organization . <xor_gateway id=5> If </xor_gateway> <condition_specification id=6> not </condition_specification> , <actor id=7> the claimant </actor> is <activity id=10> informed </activity> that <activity_data id=11> the claim must be rejected </activity_data> . <xor_gateway id=12> Otherwise </xor_gateway> , <activity_data id=13> the severity of the claim </activity_data> is <activity id=14> evaluated </activity> . Based on the outcome ( simple or complex claims ) , <activity_data id=15> relevant forms </activity_data> are <activity id=18> sent </activity> to <actor id=9> the claimant </actor> . Once <activity_data id=16> the forms </activity_data> are <activity id=19> returned </activity> , <activity_data id=17> they </activity_data> are <activity id=20> checked </activity> <further_specification id=21> for completeness </further_specification> . <xor_gateway id=22> If </xor_gateway> <condition_specification id=23> the forms provide all relevant details </condition_specification> , <activity_data id=1> the claim </activity_data> is <activity id=24> registered </activity> <further_specification id=25> in the Claims Management system </further_specification> , which ends the Claims Notification process . <xor_gateway id=26> Otherwise </xor_gateway> , <actor id=8> the claimant </actor> is <activity id=27> informed </activity> <further_specification id=28> to update the forms </further_specification> . Upon reception of the updated forms , they are checked again .\n\nNo relations found.\n"], "steps": [["relations"], ["relations"], ["relations"]], "formatter_args": [{"prompt": "pet/re/iterative/same_gateway.txt", "only_tags": ["same gateway"], "context_tags": null}, {"prompt": "pet/re/iterative/flow.txt", "only_tags": ["flow"], "context_tags": null}, {"prompt": "pet/re/iterative/remaining.txt", "only_tags": ["uses", "actor performer", "actor recipient", "further specification"], "context_tags": null}], "formatters": ["PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy"], "input_tokens": 2777, "output_tokens": 55, "total_costs": 0.001471, "answers": ["No relations found.", "flow\t3\t4\nflow\t4\t10\nflow\t10\t11\nflow\t14\t15\nflow\t15\t18\nflow\t18\t19\nflow\t19\t20\nflow\t20\t24", "No relations found."], "original_id": "doc-3.6"}]}, {"meta": {"num_shots": 0, "model": "gpt-3.5-turbo-0125", "temperature": 0.0}, "results": [{"prompts": ["System: # Task\n\nYou are a business process modelling expert, tasked with identifying if two xor_gateways refer to the same decision point, and merely represent two possible paths in the process.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **same gateway**: Focus on XOR_Gateway mentions and their corresponding condition_specification. Find the next XOR_Gateway and its condition_specification in the text. If the two condition specifications describe the same decision, i.e., the first describes what to do in one case and the second in the other case, then extract a relation of type \"same gateway\" for the XOR_Gateways preceding the respective condition_specification.\n\n# Format\n\nDetect that two XOR_Gateways are the same, by listing the type of the relation (always \"same gateway\"), the index of the first one (source mention index), and the one appearing later in the text (target mention index), separated by tabs. List one relation per line.\n\nsame gateway\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\n<xor_gateway id=1> If </xor_gateway> <condition_specification id=0> the LLM finds two gateways that are the same </condition_specification>, <actor id=2> it </actor> <activity id=4> extracts </activity> <activity_data id=3> the relation </activity_data> . <xor_gateway id=5> Otherwise </xor_gateway> , <actor id=6> it </actor> <activity id=7> continues </activity> .\n\nYou will extract these relations\n\nsame gateway\t1\t5\n\n# Restrictions\n\nRule 1. Two XOR_Gateways or two AND_Gateway are only the same gateway, if they describe two paths of the same decision. There may appear multiple XOR_Gateways in the text, that are different decisions, and therefore are not the same gateway.\n\nRule 2. One XOR_Gateway be at most part of one \"same gateway\" relation.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The Customer Service Representative </actor> <activity id=1> sends </activity> <activity_data id=2> a Mortgage offer </activity_data> to <actor id=3> the customer </actor> and <activity id=5> waits for </activity> <activity_data id=6> a reply </activity_data> . <xor_gateway id=7> If </xor_gateway> <condition_specification id=8> the customer calls or writes back declining the mortgage </condition_specification> , <activity_data id=9> the case details </activity_data> are <activity id=11> updated </activity> and <activity_data id=12> the work </activity_data> is then <activity id=13> archived </activity> prior to <activity id=14> cancellation </activity> . <xor_gateway id=15> If </xor_gateway> <condition_specification id=16> the customer sends back the completed offer documents and attaches all prerequisite documents </condition_specification> then <activity_data id=17> the case </activity_data> is <activity id=18> moved </activity> to <actor id=19> administration </actor> for completion . <xor_gateway id=20> If </xor_gateway> <condition_specification id=21> all pre-requisite documents are not provided </condition_specification> <activity_data id=22> a message </activity_data> is <activity id=23> generated </activity> to <actor id=4> the customer </actor> <further_specification id=24> requesting outstanding documents </further_specification> . <xor_gateway id=25> If </xor_gateway> <condition_specification id=26> no answer is received after 2 weeks </condition_specification> , <activity_data id=10> the case details </activity_data> are <activity id=27> updated </activity> prior to <activity id=28> archive </activity> and <activity id=29> cancellation </activity> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying the flow between business process relevant tasks in textual descriptions of business processes.\nThese tasks have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it. There are also some relations already extracted, which you can use for context during extracting flows.\n\n# Definition\n\nFlows are directed and therefore have a source mention and a target mention.\n\n**Flow**: Focus on the behavioural elements, which are mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". Extract the flow between behavioural elements, i.e., extract a relation of type \"flow\", if the text describes that one behavioural element is relevant during the process, before another behavioural element is.\nA flow relation between one behavioural element means, that it is relevant before another behavioural element, when the process is executed, e.g., if there is a flow between an \"XOR_Gateway\" and a \"Condition_Specification\" the XOR_Gateway is visited first (like an exclusive gateway in a BPMN process model), then the condition specification is relevant (like the condition in a BPMN process model). Afterwards there may be a flow between this \"Condition_Specification\" and an \"Activity\", because the condition is relevant first, and if it is fulfilled the employee has to perform the activity.\n\n# Format\n\nRetrieve a relation by listing the type (always \"flow\"), the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\nflow\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> and <activity id=3> sends </activity> <activity_data id=4> it </activity_data> back .\n\nYou will extract these relations\n\nflow\t0\t3\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The Customer Service Representative </actor> <activity id=1> sends </activity> <activity_data id=2> a Mortgage offer </activity_data> to <actor id=3> the customer </actor> and <activity id=5> waits for </activity> <activity_data id=6> a reply </activity_data> . <xor_gateway id=7> If </xor_gateway> <condition_specification id=8> the customer calls or writes back declining the mortgage </condition_specification> , <activity_data id=9> the case details </activity_data> are <activity id=11> updated </activity> and <activity_data id=12> the work </activity_data> is then <activity id=13> archived </activity> prior to <activity id=14> cancellation </activity> . <xor_gateway id=15> If </xor_gateway> <condition_specification id=16> the customer sends back the completed offer documents and attaches all prerequisite documents </condition_specification> then <activity_data id=17> the case </activity_data> is <activity id=18> moved </activity> to <actor id=19> administration </actor> for completion . <xor_gateway id=20> If </xor_gateway> <condition_specification id=21> all pre-requisite documents are not provided </condition_specification> <activity_data id=22> a message </activity_data> is <activity id=23> generated </activity> to <actor id=4> the customer </actor> <further_specification id=24> requesting outstanding documents </further_specification> . <xor_gateway id=25> If </xor_gateway> <condition_specification id=26> no answer is received after 2 weeks </condition_specification> , <activity_data id=10> the case details </activity_data> are <activity id=27> updated </activity> prior to <activity id=28> archive </activity> and <activity id=29> cancellation </activity> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying relations between mentions of business process relevant facts in textual descriptions of business processes.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n# Format\n\nRetrieve a relation by listing the relation type, the source mention index, and the target mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\nYou will extract these relations\n\nactor performer\t0\t1\nuses\t0\t2\n\n# Restrictions\n\nRule 1. Only extract relations with types, that are defined in chapter **Relation Types**.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The Customer Service Representative </actor> <activity id=1> sends </activity> <activity_data id=2> a Mortgage offer </activity_data> to <actor id=3> the customer </actor> and <activity id=5> waits for </activity> <activity_data id=6> a reply </activity_data> . <xor_gateway id=7> If </xor_gateway> <condition_specification id=8> the customer calls or writes back declining the mortgage </condition_specification> , <activity_data id=9> the case details </activity_data> are <activity id=11> updated </activity> and <activity_data id=12> the work </activity_data> is then <activity id=13> archived </activity> prior to <activity id=14> cancellation </activity> . <xor_gateway id=15> If </xor_gateway> <condition_specification id=16> the customer sends back the completed offer documents and attaches all prerequisite documents </condition_specification> then <activity_data id=17> the case </activity_data> is <activity id=18> moved </activity> to <actor id=19> administration </actor> for completion . <xor_gateway id=20> If </xor_gateway> <condition_specification id=21> all pre-requisite documents are not provided </condition_specification> <activity_data id=22> a message </activity_data> is <activity id=23> generated </activity> to <actor id=4> the customer </actor> <further_specification id=24> requesting outstanding documents </further_specification> . <xor_gateway id=25> If </xor_gateway> <condition_specification id=26> no answer is received after 2 weeks </condition_specification> , <activity_data id=10> the case details </activity_data> are <activity id=27> updated </activity> prior to <activity id=28> archive </activity> and <activity id=29> cancellation </activity> .\n\nNo relations found.\n"], "steps": [["relations"], ["relations"], ["relations"]], "formatter_args": [{"prompt": "pet/re/iterative/same_gateway.txt", "only_tags": ["same gateway"], "context_tags": null}, {"prompt": "pet/re/iterative/flow.txt", "only_tags": ["flow"], "context_tags": null}, {"prompt": "pet/re/iterative/remaining.txt", "only_tags": ["uses", "actor performer", "actor recipient", "further specification"], "context_tags": null}], "formatters": ["PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy"], "input_tokens": 2732, "output_tokens": 97, "total_costs": 0.0015114999999999998, "answers": ["No relations found.", "flow\t1\t2\nflow\t5\t6\nflow\t8\t9\nflow\t11\t12\nflow\t12\t13\nflow\t13\t14\nflow\t16\t17\nflow\t17\t18\nflow\t21\t22\nflow\t22\t23\nflow\t23\t24\nflow\t26\t10\nflow\t10\t27\nflow\t27\t28\nflow\t28\t29", "No relations found."], "original_id": "doc-9.2"}]}, {"meta": {"num_shots": 0, "model": "gpt-3.5-turbo-0125", "temperature": 0.0}, "results": [{"prompts": ["System: # Task\n\nYou are a business process modelling expert, tasked with identifying if two xor_gateways refer to the same decision point, and merely represent two possible paths in the process.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **same gateway**: Focus on XOR_Gateway mentions and their corresponding condition_specification. Find the next XOR_Gateway and its condition_specification in the text. If the two condition specifications describe the same decision, i.e., the first describes what to do in one case and the second in the other case, then extract a relation of type \"same gateway\" for the XOR_Gateways preceding the respective condition_specification.\n\n# Format\n\nDetect that two XOR_Gateways are the same, by listing the type of the relation (always \"same gateway\"), the index of the first one (source mention index), and the one appearing later in the text (target mention index), separated by tabs. List one relation per line.\n\nsame gateway\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\n<xor_gateway id=1> If </xor_gateway> <condition_specification id=0> the LLM finds two gateways that are the same </condition_specification>, <actor id=2> it </actor> <activity id=4> extracts </activity> <activity_data id=3> the relation </activity_data> . <xor_gateway id=5> Otherwise </xor_gateway> , <actor id=6> it </actor> <activity id=7> continues </activity> .\n\nYou will extract these relations\n\nsame gateway\t1\t5\n\n# Restrictions\n\nRule 1. Two XOR_Gateways or two AND_Gateway are only the same gateway, if they describe two paths of the same decision. There may appear multiple XOR_Gateways in the text, that are different decisions, and therefore are not the same gateway.\n\nRule 2. One XOR_Gateway be at most part of one \"same gateway\" relation.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The MPON </actor> <activity id=3> requests </activity> <activity_data id=4> a device takeover bid </activity_data> of <actor id=5> the MPOO </actor> . <actor id=7> The MPOO </actor> <activity id=9> sends </activity> <activity_data id=10> a tender for the equipment takeover </activity_data> to <actor id=1> the MPON </actor> . <actor id=2> The MPON </actor> <activity id=11> places </activity> <activity_data id=12> an order </activity_data> at <actor id=8> the MPOO </actor> . <actor id=6> The MPOO </actor> <activity id=14> confirms </activity> <activity_data id=13> the order of the MPON </activity_data> and <activity id=15> sends </activity> <activity_data id=16> the master data </activity_data> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying the flow between business process relevant tasks in textual descriptions of business processes.\nThese tasks have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it. There are also some relations already extracted, which you can use for context during extracting flows.\n\n# Definition\n\nFlows are directed and therefore have a source mention and a target mention.\n\n**Flow**: Focus on the behavioural elements, which are mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". Extract the flow between behavioural elements, i.e., extract a relation of type \"flow\", if the text describes that one behavioural element is relevant during the process, before another behavioural element is.\nA flow relation between one behavioural element means, that it is relevant before another behavioural element, when the process is executed, e.g., if there is a flow between an \"XOR_Gateway\" and a \"Condition_Specification\" the XOR_Gateway is visited first (like an exclusive gateway in a BPMN process model), then the condition specification is relevant (like the condition in a BPMN process model). Afterwards there may be a flow between this \"Condition_Specification\" and an \"Activity\", because the condition is relevant first, and if it is fulfilled the employee has to perform the activity.\n\n# Format\n\nRetrieve a relation by listing the type (always \"flow\"), the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\nflow\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> and <activity id=3> sends </activity> <activity_data id=4> it </activity_data> back .\n\nYou will extract these relations\n\nflow\t0\t3\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The MPON </actor> <activity id=3> requests </activity> <activity_data id=4> a device takeover bid </activity_data> of <actor id=5> the MPOO </actor> . <actor id=7> The MPOO </actor> <activity id=9> sends </activity> <activity_data id=10> a tender for the equipment takeover </activity_data> to <actor id=1> the MPON </actor> . <actor id=2> The MPON </actor> <activity id=11> places </activity> <activity_data id=12> an order </activity_data> at <actor id=8> the MPOO </actor> . <actor id=6> The MPOO </actor> <activity id=14> confirms </activity> <activity_data id=13> the order of the MPON </activity_data> and <activity id=15> sends </activity> <activity_data id=16> the master data </activity_data> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying relations between mentions of business process relevant facts in textual descriptions of business processes.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n# Format\n\nRetrieve a relation by listing the relation type, the source mention index, and the target mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\nYou will extract these relations\n\nactor performer\t0\t1\nuses\t0\t2\n\n# Restrictions\n\nRule 1. Only extract relations with types, that are defined in chapter **Relation Types**.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The MPON </actor> <activity id=3> requests </activity> <activity_data id=4> a device takeover bid </activity_data> of <actor id=5> the MPOO </actor> . <actor id=7> The MPOO </actor> <activity id=9> sends </activity> <activity_data id=10> a tender for the equipment takeover </activity_data> to <actor id=1> the MPON </actor> . <actor id=2> The MPON </actor> <activity id=11> places </activity> <activity_data id=12> an order </activity_data> at <actor id=8> the MPOO </actor> . <actor id=6> The MPOO </actor> <activity id=14> confirms </activity> <activity_data id=13> the order of the MPON </activity_data> and <activity id=15> sends </activity> <activity_data id=16> the master data </activity_data> .\n\nNo relations found.\n"], "steps": [["relations"], ["relations"], ["relations"]], "formatter_args": [{"prompt": "pet/re/iterative/same_gateway.txt", "only_tags": ["same gateway"], "context_tags": null}, {"prompt": "pet/re/iterative/flow.txt", "only_tags": ["flow"], "context_tags": null}, {"prompt": "pet/re/iterative/remaining.txt", "only_tags": ["uses", "actor performer", "actor recipient", "further specification"], "context_tags": null}], "formatters": ["PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy"], "input_tokens": 2132, "output_tokens": 12, "total_costs": 0.0010840000000000001, "answers": ["No relations found.", "No relations found.", "No relations found."], "original_id": "doc-10.5"}]}, {"meta": {"num_shots": 0, "model": "gpt-3.5-turbo-0125", "temperature": 0.0}, "results": [{"prompts": ["System: # Task\n\nYou are a business process modelling expert, tasked with identifying if two xor_gateways refer to the same decision point, and merely represent two possible paths in the process.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **same gateway**: Focus on XOR_Gateway mentions and their corresponding condition_specification. Find the next XOR_Gateway and its condition_specification in the text. If the two condition specifications describe the same decision, i.e., the first describes what to do in one case and the second in the other case, then extract a relation of type \"same gateway\" for the XOR_Gateways preceding the respective condition_specification.\n\n# Format\n\nDetect that two XOR_Gateways are the same, by listing the type of the relation (always \"same gateway\"), the index of the first one (source mention index), and the one appearing later in the text (target mention index), separated by tabs. List one relation per line.\n\nsame gateway\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\n<xor_gateway id=1> If </xor_gateway> <condition_specification id=0> the LLM finds two gateways that are the same </condition_specification>, <actor id=2> it </actor> <activity id=4> extracts </activity> <activity_data id=3> the relation </activity_data> . <xor_gateway id=5> Otherwise </xor_gateway> , <actor id=6> it </actor> <activity id=7> continues </activity> .\n\nYou will extract these relations\n\nsame gateway\t1\t5\n\n# Restrictions\n\nRule 1. Two XOR_Gateways or two AND_Gateway are only the same gateway, if they describe two paths of the same decision. There may appear multiple XOR_Gateways in the text, that are different decisions, and therefore are not the same gateway.\n\nRule 2. One XOR_Gateway be at most part of one \"same gateway\" relation.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The party </actor> <activity id=1> sends </activity> <activity_data id=2> a warrant possession request </activity_data> asking a warrant to be released . <actor id=3> The Client Service Back Office </actor> as part of the Small Claims Registry Operations <activity id=6> receives </activity> <activity_data id=7> the request </activity_data> and <activity id=8> retrieves </activity> <activity_data id=9> the SCT file </activity_data> . Then , <activity_data id=14> the SCT Warrant Possession </activity_data> is <activity id=15> forwarded </activity> to <actor id=16> Queensland Police </actor> . <activity_data id=11> The SCT physical file </activity_data> is <activity id=17> stored </activity> by <actor id=4> the Back Office </actor> <activity id=18> awaiting </activity> <activity_data id=19> a report </activity_data> <further_specification id=21> to be sent by the Police </further_specification> . When <activity_data id=20> the report </activity_data> is <activity id=22> received </activity> , <activity_data id=12> the respective SCT file </activity_data> is <activity id=23> retrieved </activity> . Then , <actor id=5> Back Office </actor> <activity id=24> attaches </activity> <activity_data id=25> the new SCT document </activity_data> , and <activity id=26> stores </activity> <activity_data id=13> the expanded SCT physical file </activity_data> . After that , <actor id=27> some other MC internal staff </actor> <activity id=28> receives </activity> <activity_data id=10> the physical SCT file </activity_data> ( out of scope ) .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying the flow between business process relevant tasks in textual descriptions of business processes.\nThese tasks have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it. There are also some relations already extracted, which you can use for context during extracting flows.\n\n# Definition\n\nFlows are directed and therefore have a source mention and a target mention.\n\n**Flow**: Focus on the behavioural elements, which are mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". Extract the flow between behavioural elements, i.e., extract a relation of type \"flow\", if the text describes that one behavioural element is relevant during the process, before another behavioural element is.\nA flow relation between one behavioural element means, that it is relevant before another behavioural element, when the process is executed, e.g., if there is a flow between an \"XOR_Gateway\" and a \"Condition_Specification\" the XOR_Gateway is visited first (like an exclusive gateway in a BPMN process model), then the condition specification is relevant (like the condition in a BPMN process model). Afterwards there may be a flow between this \"Condition_Specification\" and an \"Activity\", because the condition is relevant first, and if it is fulfilled the employee has to perform the activity.\n\n# Format\n\nRetrieve a relation by listing the type (always \"flow\"), the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\nflow\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> and <activity id=3> sends </activity> <activity_data id=4> it </activity_data> back .\n\nYou will extract these relations\n\nflow\t0\t3\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The party </actor> <activity id=1> sends </activity> <activity_data id=2> a warrant possession request </activity_data> asking a warrant to be released . <actor id=3> The Client Service Back Office </actor> as part of the Small Claims Registry Operations <activity id=6> receives </activity> <activity_data id=7> the request </activity_data> and <activity id=8> retrieves </activity> <activity_data id=9> the SCT file </activity_data> . Then , <activity_data id=14> the SCT Warrant Possession </activity_data> is <activity id=15> forwarded </activity> to <actor id=16> Queensland Police </actor> . <activity_data id=11> The SCT physical file </activity_data> is <activity id=17> stored </activity> by <actor id=4> the Back Office </actor> <activity id=18> awaiting </activity> <activity_data id=19> a report </activity_data> <further_specification id=21> to be sent by the Police </further_specification> . When <activity_data id=20> the report </activity_data> is <activity id=22> received </activity> , <activity_data id=12> the respective SCT file </activity_data> is <activity id=23> retrieved </activity> . Then , <actor id=5> Back Office </actor> <activity id=24> attaches </activity> <activity_data id=25> the new SCT document </activity_data> , and <activity id=26> stores </activity> <activity_data id=13> the expanded SCT physical file </activity_data> . After that , <actor id=27> some other MC internal staff </actor> <activity id=28> receives </activity> <activity_data id=10> the physical SCT file </activity_data> ( out of scope ) .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying relations between mentions of business process relevant facts in textual descriptions of business processes.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n# Format\n\nRetrieve a relation by listing the relation type, the source mention index, and the target mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\nYou will extract these relations\n\nactor performer\t0\t1\nuses\t0\t2\n\n# Restrictions\n\nRule 1. Only extract relations with types, that are defined in chapter **Relation Types**.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The party </actor> <activity id=1> sends </activity> <activity_data id=2> a warrant possession request </activity_data> asking a warrant to be released . <actor id=3> The Client Service Back Office </actor> as part of the Small Claims Registry Operations <activity id=6> receives </activity> <activity_data id=7> the request </activity_data> and <activity id=8> retrieves </activity> <activity_data id=9> the SCT file </activity_data> . Then , <activity_data id=14> the SCT Warrant Possession </activity_data> is <activity id=15> forwarded </activity> to <actor id=16> Queensland Police </actor> . <activity_data id=11> The SCT physical file </activity_data> is <activity id=17> stored </activity> by <actor id=4> the Back Office </actor> <activity id=18> awaiting </activity> <activity_data id=19> a report </activity_data> <further_specification id=21> to be sent by the Police </further_specification> . When <activity_data id=20> the report </activity_data> is <activity id=22> received </activity> , <activity_data id=12> the respective SCT file </activity_data> is <activity id=23> retrieved </activity> . Then , <actor id=5> Back Office </actor> <activity id=24> attaches </activity> <activity_data id=25> the new SCT document </activity_data> , and <activity id=26> stores </activity> <activity_data id=13> the expanded SCT physical file </activity_data> . After that , <actor id=27> some other MC internal staff </actor> <activity id=28> receives </activity> <activity_data id=10> the physical SCT file </activity_data> ( out of scope ) .\n\nNo relations found.\n"], "steps": [["relations"], ["relations"], ["relations"]], "formatter_args": [{"prompt": "pet/re/iterative/same_gateway.txt", "only_tags": ["same gateway"], "context_tags": null}, {"prompt": "pet/re/iterative/flow.txt", "only_tags": ["flow"], "context_tags": null}, {"prompt": "pet/re/iterative/remaining.txt", "only_tags": ["uses", "actor performer", "actor recipient", "further specification"], "context_tags": null}], "formatters": ["PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy"], "input_tokens": 2693, "output_tokens": 12, "total_costs": 0.0013644999999999998, "answers": ["No relations found.", "No relations found.", "No relations found."], "original_id": "doc-3.1"}]}, {"meta": {"num_shots": 0, "model": "gpt-3.5-turbo-0125", "temperature": 0.0}, "results": [{"prompts": ["System: # Task\n\nYou are a business process modelling expert, tasked with identifying if two xor_gateways refer to the same decision point, and merely represent two possible paths in the process.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **same gateway**: Focus on XOR_Gateway mentions and their corresponding condition_specification. Find the next XOR_Gateway and its condition_specification in the text. If the two condition specifications describe the same decision, i.e., the first describes what to do in one case and the second in the other case, then extract a relation of type \"same gateway\" for the XOR_Gateways preceding the respective condition_specification.\n\n# Format\n\nDetect that two XOR_Gateways are the same, by listing the type of the relation (always \"same gateway\"), the index of the first one (source mention index), and the one appearing later in the text (target mention index), separated by tabs. List one relation per line.\n\nsame gateway\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\n<xor_gateway id=1> If </xor_gateway> <condition_specification id=0> the LLM finds two gateways that are the same </condition_specification>, <actor id=2> it </actor> <activity id=4> extracts </activity> <activity_data id=3> the relation </activity_data> . <xor_gateway id=5> Otherwise </xor_gateway> , <actor id=6> it </actor> <activity id=7> continues </activity> .\n\nYou will extract these relations\n\nsame gateway\t1\t5\n\n# Restrictions\n\nRule 1. Two XOR_Gateways or two AND_Gateway are only the same gateway, if they describe two paths of the same decision. There may appear multiple XOR_Gateways in the text, that are different decisions, and therefore are not the same gateway.\n\nRule 2. One XOR_Gateway be at most part of one \"same gateway\" relation.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nThe process is triggered by the <activity id=0> demand </activity> of <actor id=1> a functional department </actor> <activity_data id=2> to fill a post </activity_data> . <activity_data id=3> The post </activity_data> is <activity id=5> advertised </activity> , <actor id=6> applicants </actor> <activity id=7> apply </activity> , <activity_data id=8> the applications </activity_data> are <activity id=9> checked </activity> and <activity_data id=4> the post </activity_data> is <activity id=10> filled </activity> . The process finishes when the post was filled , precisely through the conclusion of a contract of employment .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying the flow between business process relevant tasks in textual descriptions of business processes.\nThese tasks have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it. There are also some relations already extracted, which you can use for context during extracting flows.\n\n# Definition\n\nFlows are directed and therefore have a source mention and a target mention.\n\n**Flow**: Focus on the behavioural elements, which are mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". Extract the flow between behavioural elements, i.e., extract a relation of type \"flow\", if the text describes that one behavioural element is relevant during the process, before another behavioural element is.\nA flow relation between one behavioural element means, that it is relevant before another behavioural element, when the process is executed, e.g., if there is a flow between an \"XOR_Gateway\" and a \"Condition_Specification\" the XOR_Gateway is visited first (like an exclusive gateway in a BPMN process model), then the condition specification is relevant (like the condition in a BPMN process model). Afterwards there may be a flow between this \"Condition_Specification\" and an \"Activity\", because the condition is relevant first, and if it is fulfilled the employee has to perform the activity.\n\n# Format\n\nRetrieve a relation by listing the type (always \"flow\"), the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\nflow\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> and <activity id=3> sends </activity> <activity_data id=4> it </activity_data> back .\n\nYou will extract these relations\n\nflow\t0\t3\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nThe process is triggered by the <activity id=0> demand </activity> of <actor id=1> a functional department </actor> <activity_data id=2> to fill a post </activity_data> . <activity_data id=3> The post </activity_data> is <activity id=5> advertised </activity> , <actor id=6> applicants </actor> <activity id=7> apply </activity> , <activity_data id=8> the applications </activity_data> are <activity id=9> checked </activity> and <activity_data id=4> the post </activity_data> is <activity id=10> filled </activity> . The process finishes when the post was filled , precisely through the conclusion of a contract of employment .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying relations between mentions of business process relevant facts in textual descriptions of business processes.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n# Format\n\nRetrieve a relation by listing the relation type, the source mention index, and the target mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\nYou will extract these relations\n\nactor performer\t0\t1\nuses\t0\t2\n\n# Restrictions\n\nRule 1. Only extract relations with types, that are defined in chapter **Relation Types**.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nThe process is triggered by the <activity id=0> demand </activity> of <actor id=1> a functional department </actor> <activity_data id=2> to fill a post </activity_data> . <activity_data id=3> The post </activity_data> is <activity id=5> advertised </activity> , <actor id=6> applicants </actor> <activity id=7> apply </activity> , <activity_data id=8> the applications </activity_data> are <activity id=9> checked </activity> and <activity_data id=4> the post </activity_data> is <activity id=10> filled </activity> . The process finishes when the post was filled , precisely through the conclusion of a contract of employment .\n\nNo relations found.\n"], "steps": [["relations"], ["relations"], ["relations"]], "formatter_args": [{"prompt": "pet/re/iterative/same_gateway.txt", "only_tags": ["same gateway"], "context_tags": null}, {"prompt": "pet/re/iterative/flow.txt", "only_tags": ["flow"], "context_tags": null}, {"prompt": "pet/re/iterative/remaining.txt", "only_tags": ["uses", "actor performer", "actor recipient", "further specification"], "context_tags": null}], "formatters": ["PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy"], "input_tokens": 1946, "output_tokens": 31, "total_costs": 0.0010195, "answers": ["No relations found.", "flow\t0\t5\nflow\t5\t7\nflow\t7\t9\nflow\t9\t10", "No relations found."], "original_id": "doc-8.1"}]}, {"meta": {"num_shots": 0, "model": "gpt-3.5-turbo-0125", "temperature": 0.0}, "results": [{"prompts": ["System: # Task\n\nYou are a business process modelling expert, tasked with identifying if two xor_gateways refer to the same decision point, and merely represent two possible paths in the process.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **same gateway**: Focus on XOR_Gateway mentions and their corresponding condition_specification. Find the next XOR_Gateway and its condition_specification in the text. If the two condition specifications describe the same decision, i.e., the first describes what to do in one case and the second in the other case, then extract a relation of type \"same gateway\" for the XOR_Gateways preceding the respective condition_specification.\n\n# Format\n\nDetect that two XOR_Gateways are the same, by listing the type of the relation (always \"same gateway\"), the index of the first one (source mention index), and the one appearing later in the text (target mention index), separated by tabs. List one relation per line.\n\nsame gateway\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\n<xor_gateway id=1> If </xor_gateway> <condition_specification id=0> the LLM finds two gateways that are the same </condition_specification>, <actor id=2> it </actor> <activity id=4> extracts </activity> <activity_data id=3> the relation </activity_data> . <xor_gateway id=5> Otherwise </xor_gateway> , <actor id=6> it </actor> <activity id=7> continues </activity> .\n\nYou will extract these relations\n\nsame gateway\t1\t5\n\n# Restrictions\n\nRule 1. Two XOR_Gateways or two AND_Gateway are only the same gateway, if they describe two paths of the same decision. There may appear multiple XOR_Gateways in the text, that are different decisions, and therefore are not the same gateway.\n\nRule 2. One XOR_Gateway be at most part of one \"same gateway\" relation.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The SP / PU / GO </actor> <activity id=3> request </activity> <activity_data id=4> changes </activity_data> to <actor id=5> the MPO </actor> <xor_gateway id=12> or </xor_gateway> <actor id=7> the MPO </actor> himself <activity id=13> causes </activity> <activity_data id=14> a change </activity_data> . <actor id=11> The MPO </actor> <activity id=15> reviews </activity> <activity_data id=16> the change request </activity_data> . <actor id=10> The MPO </actor> <activity id=19> rejects </activity> <activity_data id=17> the change of the measuring point by the SP / PU / GO </activity_data> <xor_gateway id=20> or </xor_gateway> <actor id=6> the MPO </actor> <activity id=21> confirmes </activity> <activity_data id=18> the request of the SP / PU / GO </activity_data> . <actor id=9> The MPO </actor> <activity id=22> performs </activity> <activity_data id=23> the measuring point change </activity_data> . <actor id=8> The MPO </actor> <activity id=24> reports </activity> <activity_data id=25> the implementation </activity_data> to <actor id=2> the SP / PU / GO </actor> <xor_gateway id=26> or </xor_gateway> <activity id=27> notifies </activity> <actor id=1> the SP / PU / GO </actor> <activity_data id=28> about the failure of the changes </activity_data> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying the flow between business process relevant tasks in textual descriptions of business processes.\nThese tasks have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it. There are also some relations already extracted, which you can use for context during extracting flows.\n\n# Definition\n\nFlows are directed and therefore have a source mention and a target mention.\n\n**Flow**: Focus on the behavioural elements, which are mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". Extract the flow between behavioural elements, i.e., extract a relation of type \"flow\", if the text describes that one behavioural element is relevant during the process, before another behavioural element is.\nA flow relation between one behavioural element means, that it is relevant before another behavioural element, when the process is executed, e.g., if there is a flow between an \"XOR_Gateway\" and a \"Condition_Specification\" the XOR_Gateway is visited first (like an exclusive gateway in a BPMN process model), then the condition specification is relevant (like the condition in a BPMN process model). Afterwards there may be a flow between this \"Condition_Specification\" and an \"Activity\", because the condition is relevant first, and if it is fulfilled the employee has to perform the activity.\n\n# Format\n\nRetrieve a relation by listing the type (always \"flow\"), the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\nflow\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> and <activity id=3> sends </activity> <activity_data id=4> it </activity_data> back .\n\nYou will extract these relations\n\nflow\t0\t3\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The SP / PU / GO </actor> <activity id=3> request </activity> <activity_data id=4> changes </activity_data> to <actor id=5> the MPO </actor> <xor_gateway id=12> or </xor_gateway> <actor id=7> the MPO </actor> himself <activity id=13> causes </activity> <activity_data id=14> a change </activity_data> . <actor id=11> The MPO </actor> <activity id=15> reviews </activity> <activity_data id=16> the change request </activity_data> . <actor id=10> The MPO </actor> <activity id=19> rejects </activity> <activity_data id=17> the change of the measuring point by the SP / PU / GO </activity_data> <xor_gateway id=20> or </xor_gateway> <actor id=6> the MPO </actor> <activity id=21> confirmes </activity> <activity_data id=18> the request of the SP / PU / GO </activity_data> . <actor id=9> The MPO </actor> <activity id=22> performs </activity> <activity_data id=23> the measuring point change </activity_data> . <actor id=8> The MPO </actor> <activity id=24> reports </activity> <activity_data id=25> the implementation </activity_data> to <actor id=2> the SP / PU / GO </actor> <xor_gateway id=26> or </xor_gateway> <activity id=27> notifies </activity> <actor id=1> the SP / PU / GO </actor> <activity_data id=28> about the failure of the changes </activity_data> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying relations between mentions of business process relevant facts in textual descriptions of business processes.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n# Format\n\nRetrieve a relation by listing the relation type, the source mention index, and the target mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\nYou will extract these relations\n\nactor performer\t0\t1\nuses\t0\t2\n\n# Restrictions\n\nRule 1. Only extract relations with types, that are defined in chapter **Relation Types**.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The SP / PU / GO </actor> <activity id=3> request </activity> <activity_data id=4> changes </activity_data> to <actor id=5> the MPO </actor> <xor_gateway id=12> or </xor_gateway> <actor id=7> the MPO </actor> himself <activity id=13> causes </activity> <activity_data id=14> a change </activity_data> . <actor id=11> The MPO </actor> <activity id=15> reviews </activity> <activity_data id=16> the change request </activity_data> . <actor id=10> The MPO </actor> <activity id=19> rejects </activity> <activity_data id=17> the change of the measuring point by the SP / PU / GO </activity_data> <xor_gateway id=20> or </xor_gateway> <actor id=6> the MPO </actor> <activity id=21> confirmes </activity> <activity_data id=18> the request of the SP / PU / GO </activity_data> . <actor id=9> The MPO </actor> <activity id=22> performs </activity> <activity_data id=23> the measuring point change </activity_data> . <actor id=8> The MPO </actor> <activity id=24> reports </activity> <activity_data id=25> the implementation </activity_data> to <actor id=2> the SP / PU / GO </actor> <xor_gateway id=26> or </xor_gateway> <activity id=27> notifies </activity> <actor id=1> the SP / PU / GO </actor> <activity_data id=28> about the failure of the changes </activity_data> .\n\nNo relations found.\n"], "steps": [["relations"], ["relations"], ["relations"]], "formatter_args": [{"prompt": "pet/re/iterative/same_gateway.txt", "only_tags": ["same gateway"], "context_tags": null}, {"prompt": "pet/re/iterative/flow.txt", "only_tags": ["flow"], "context_tags": null}, {"prompt": "pet/re/iterative/remaining.txt", "only_tags": ["uses", "actor performer", "actor recipient", "further specification"], "context_tags": null}], "formatters": ["PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy"], "input_tokens": 2612, "output_tokens": 12, "total_costs": 0.001324, "answers": ["No relations found.", "No relations found.", "No relations found."], "original_id": "doc-10.9"}]}, {"meta": {"num_shots": 0, "model": "gpt-3.5-turbo-0125", "temperature": 0.0}, "results": [{"prompts": ["System: # Task\n\nYou are a business process modelling expert, tasked with identifying if two xor_gateways refer to the same decision point, and merely represent two possible paths in the process.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **same gateway**: Focus on XOR_Gateway mentions and their corresponding condition_specification. Find the next XOR_Gateway and its condition_specification in the text. If the two condition specifications describe the same decision, i.e., the first describes what to do in one case and the second in the other case, then extract a relation of type \"same gateway\" for the XOR_Gateways preceding the respective condition_specification.\n\n# Format\n\nDetect that two XOR_Gateways are the same, by listing the type of the relation (always \"same gateway\"), the index of the first one (source mention index), and the one appearing later in the text (target mention index), separated by tabs. List one relation per line.\n\nsame gateway\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\n<xor_gateway id=1> If </xor_gateway> <condition_specification id=0> the LLM finds two gateways that are the same </condition_specification>, <actor id=2> it </actor> <activity id=4> extracts </activity> <activity_data id=3> the relation </activity_data> . <xor_gateway id=5> Otherwise </xor_gateway> , <actor id=6> it </actor> <activity id=7> continues </activity> .\n\nYou will extract these relations\n\nsame gateway\t1\t5\n\n# Restrictions\n\nRule 1. Two XOR_Gateways or two AND_Gateway are only the same gateway, if they describe two paths of the same decision. There may appear multiple XOR_Gateways in the text, that are different decisions, and therefore are not the same gateway.\n\nRule 2. One XOR_Gateway be at most part of one \"same gateway\" relation.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<activity_data id=0> At </activity_data> the beginning <actor id=133> the customer </actor> <activity id=1> perceives </activity> that <activity_data id=2> her subscribed service </activity_data> <further_specification id=3> has degraded </further_specification> . <activity_data id=4> A list with all the problem parameters </activity_data> is then <activity id=5> sent </activity> to <actor id=6> the Customer Service department of TELECO </actor> . At the customer service <actor id=11> an employee </actor> <activity id=12> enters </activity> ( based on the received data ) <activity_data id=13> a problem report </activity_data> into system T . . Then <activity_data id=14> the problem report </activity_data> is <activity id=15> compared </activity> <further_specification id=16> to the customer SLA </further_specification> to <activity id=17> identify </activity> what the extent and <activity_data id=18> the details of the service degradation </activity_data> are . Based on this , <activity_data id=19> the necessary counter measures </activity_data> are <activity id=20> determined </activity> including their respective priorities . <actor id=21> An electronic service </actor> then <activity id=22> determines </activity> <activity_data id=23> the significance of the customer </activity_data> based on information that has been collected during the history of the contractual relationship . <xor_gateway id=24> In case </xor_gateway> <condition_specification id=25> the customer is premium </condition_specification> , the process will link to an extra <activity_data id=51> problem </activity_data> <activity id=26> fix </activity> process ( this process will not be detailed here ) . <xor_gateway id=27> In case </xor_gateway> <condition_specification id=28> the customer is of certain significance </condition_specification> which would affect the counter measures previously decided upon , the process goes back to re-prioritize these measures <xor_gateway id=29> otherwise </xor_gateway> the process continues . Taking together the information ( i.e . contract commitment data + prioritized actions ) <activity_data id=30> a detailed problem report </activity_data> is <activity id=34> created </activity> . <activity_data id=31> The detailed problem report </activity_data> is then <activity id=35> sent </activity> to <actor id=36> Service Management </actor> . <actor id=43> Service Management </actor> <activity id=47> deals </activity> on a first level with <activity_data id=48> violations of quality in services </activity_data> that are provided to customers . After receiving the detailed problem report , <actor id=44> Service management </actor> <activity id=49> investigates </activity> whether <activity_data id=50> the problem </activity_data> is analyzable at the level of their department or whether the problem may be located at Resource Provisioning . <xor_gateway id=52> In case </xor_gateway> <condition_specification id=53> Service Management assesses the problem to be not analyzable by themselves </condition_specification> , <activity_data id=33> the detailed problem report </activity_data> is <activity id=54> sent out </activity> to <actor id=55> Resource Provisioning </actor> . <xor_gateway id=60> If </xor_gateway> <condition_specification id=61> Service Management is sure they can analyze it </condition_specification> , <actor id=46> they </actor> <activity id=62> perform </activity> <activity_data id=63> the analysis </activity_data> and based on the outcome <actor id=45> they </actor> <activity id=64> create </activity> <activity_data id=65> a trouble report </activity_data> that indicates the type of problem . After <actor id=59> Resource Provisioning </actor> <activity id=68> receives </activity> <activity_data id=32> the detailed problem report </activity_data> , <activity_data id=69> it </activity_data> is <activity id=70> checked </activity> whether there are any possible problems . <xor_gateway id=71> If </xor_gateway> <condition_specification id=72> no problems are detected </condition_specification> , <activity_data id=73> a notification </activity_data> about the normal service execution is <activity id=74> created </activity> . <xor_gateway id=75> If </xor_gateway> <condition_specification id=76> a problem is detected </condition_specification> <activity_data id=77> this </activity_data> will be <activity id=78> analyzed </activity> by <actor id=58> Resource Provisioning </actor> and <activity_data id=66> a trouble report </activity_data> is <activity id=79> created </activity> . Either <activity_data id=67> trouble report </activity_data> or <activity_data id=80> the normal execution notification </activity_data> will be <activity id=81> included </activity> in a status report and <activity id=82> sent back </activity> to <actor id=42> Service Management </actor> . <actor id=41> Service Management </actor> then <activity id=83> prepares </activity> <activity_data id=84> the final status report </activity_data> based on the received information . Subsequently it has to be determined what counter measures should be taken depending on the information in the final status report . Three alternative process paths may be taken . <xor_gateway id=85> For the case </xor_gateway> that <condition_specification id=86> no problem was detected at all </condition_specification> , <activity_data id=87> the actual service performance </activity_data> is <activity id=88> sent back </activity> to <actor id=7> the Customer Service </actor> . <xor_gateway id=89> For the case </xor_gateway> that <condition_specification id=90> minor corrective actions are required </condition_specification> , <actor id=40> Service Management </actor> will <activity id=91> undertake </activity> <activity_data id=92> corrective actions </activity_data> by themselves . Subsequently , <activity_data id=93> the problem resolution report </activity_data> is <activity id=96> created </activity> and then <activity id=97> sent out </activity> to <actor id=10> Customer Service </actor> . After sending , this process path of Service Management ends . <xor_gateway id=98> For the case </xor_gateway> that <condition_specification id=99> automatic resource restoration from Resource Provisioning is required </condition_specification> , <actor id=39> Service Management </actor> must <activity id=100> create </activity> <activity_data id=101> a request </activity_data> for automatic resource restoration . <activity_data id=103> This message </activity_data> is then <activity id=104> sent </activity> to <actor id=57> Resource Provisioning </actor> . Resource Provisioning has been on-hold and waiting for a restoration request but this must happen within 2 days after the status report was sent out , otherwise Resource Provisioning terminates the process . After <activity_data id=102> the restoration request </activity_data> is <activity id=105> received </activity> , <activity_data id=106> all possible errors </activity_data> are <activity id=107> tracked </activity> . Based on the tracked errors , all necessary <activity_data id=108> corrective actions </activity_data> are <activity id=109> undertaken </activity> by <actor id=56> Resource Provisioning </actor> . Then <activity_data id=110> a trouble-shooting report </activity_data> is <activity id=113> created </activity> . <activity_data id=111> This report </activity_data> is <activity id=114> sent out </activity> to <actor id=38> Service Management </actor> ; then the process ends . <activity_data id=112> The trouble-shooting report </activity_data> is <activity id=115> received </activity> by <actor id=37> Service Management </actor> and this information goes then into the <activity id=116> creation </activity> of <activity_data id=95> the problem resolution report </activity_data> just as described for ii ) . <actor id=9> Customer Service </actor> either <activity id=117> receives </activity> <activity_data id=118> the actual service performance </activity_data> ( if there was no problem ) or <activity_data id=94> the problem resolution report </activity_data> . Then , <and_gateway id=119> two concurrent activities are triggered </and_gateway> , i.e . i ) <activity_data id=128> a report </activity_data> is <activity id=120> created </activity> for the customer which details the current service performance and the resolution of the problem , and ii ) <activity_data id=121> an SLA violation rebate </activity_data> is <activity id=122> reported </activity> to <actor id=123> Billing & Collections </actor> <actor id=124> who </actor> will <activity id=125> adjust </activity> <activity_data id=126> the billing </activity_data> . <activity_data id=127> The report </activity_data> for the customer is <activity id=130> sent out </activity> to <actor id=132> her </actor> . After all three activities are completed the process ends within Customer Service . After <actor id=131> the customer </actor> then <activity id=134> receives </activity> <activity_data id=129> the report </activity_data> about service performance and problem resolution from <actor id=8> Customer Service </actor> , the process flow at the customer also ends .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying the flow between business process relevant tasks in textual descriptions of business processes.\nThese tasks have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it. There are also some relations already extracted, which you can use for context during extracting flows.\n\n# Definition\n\nFlows are directed and therefore have a source mention and a target mention.\n\n**Flow**: Focus on the behavioural elements, which are mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". Extract the flow between behavioural elements, i.e., extract a relation of type \"flow\", if the text describes that one behavioural element is relevant during the process, before another behavioural element is.\nA flow relation between one behavioural element means, that it is relevant before another behavioural element, when the process is executed, e.g., if there is a flow between an \"XOR_Gateway\" and a \"Condition_Specification\" the XOR_Gateway is visited first (like an exclusive gateway in a BPMN process model), then the condition specification is relevant (like the condition in a BPMN process model). Afterwards there may be a flow between this \"Condition_Specification\" and an \"Activity\", because the condition is relevant first, and if it is fulfilled the employee has to perform the activity.\n\n# Format\n\nRetrieve a relation by listing the type (always \"flow\"), the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\nflow\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> and <activity id=3> sends </activity> <activity_data id=4> it </activity_data> back .\n\nYou will extract these relations\n\nflow\t0\t3\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<activity_data id=0> At </activity_data> the beginning <actor id=133> the customer </actor> <activity id=1> perceives </activity> that <activity_data id=2> her subscribed service </activity_data> <further_specification id=3> has degraded </further_specification> . <activity_data id=4> A list with all the problem parameters </activity_data> is then <activity id=5> sent </activity> to <actor id=6> the Customer Service department of TELECO </actor> . At the customer service <actor id=11> an employee </actor> <activity id=12> enters </activity> ( based on the received data ) <activity_data id=13> a problem report </activity_data> into system T . . Then <activity_data id=14> the problem report </activity_data> is <activity id=15> compared </activity> <further_specification id=16> to the customer SLA </further_specification> to <activity id=17> identify </activity> what the extent and <activity_data id=18> the details of the service degradation </activity_data> are . Based on this , <activity_data id=19> the necessary counter measures </activity_data> are <activity id=20> determined </activity> including their respective priorities . <actor id=21> An electronic service </actor> then <activity id=22> determines </activity> <activity_data id=23> the significance of the customer </activity_data> based on information that has been collected during the history of the contractual relationship . <xor_gateway id=24> In case </xor_gateway> <condition_specification id=25> the customer is premium </condition_specification> , the process will link to an extra <activity_data id=51> problem </activity_data> <activity id=26> fix </activity> process ( this process will not be detailed here ) . <xor_gateway id=27> In case </xor_gateway> <condition_specification id=28> the customer is of certain significance </condition_specification> which would affect the counter measures previously decided upon , the process goes back to re-prioritize these measures <xor_gateway id=29> otherwise </xor_gateway> the process continues . Taking together the information ( i.e . contract commitment data + prioritized actions ) <activity_data id=30> a detailed problem report </activity_data> is <activity id=34> created </activity> . <activity_data id=31> The detailed problem report </activity_data> is then <activity id=35> sent </activity> to <actor id=36> Service Management </actor> . <actor id=43> Service Management </actor> <activity id=47> deals </activity> on a first level with <activity_data id=48> violations of quality in services </activity_data> that are provided to customers . After receiving the detailed problem report , <actor id=44> Service management </actor> <activity id=49> investigates </activity> whether <activity_data id=50> the problem </activity_data> is analyzable at the level of their department or whether the problem may be located at Resource Provisioning . <xor_gateway id=52> In case </xor_gateway> <condition_specification id=53> Service Management assesses the problem to be not analyzable by themselves </condition_specification> , <activity_data id=33> the detailed problem report </activity_data> is <activity id=54> sent out </activity> to <actor id=55> Resource Provisioning </actor> . <xor_gateway id=60> If </xor_gateway> <condition_specification id=61> Service Management is sure they can analyze it </condition_specification> , <actor id=46> they </actor> <activity id=62> perform </activity> <activity_data id=63> the analysis </activity_data> and based on the outcome <actor id=45> they </actor> <activity id=64> create </activity> <activity_data id=65> a trouble report </activity_data> that indicates the type of problem . After <actor id=59> Resource Provisioning </actor> <activity id=68> receives </activity> <activity_data id=32> the detailed problem report </activity_data> , <activity_data id=69> it </activity_data> is <activity id=70> checked </activity> whether there are any possible problems . <xor_gateway id=71> If </xor_gateway> <condition_specification id=72> no problems are detected </condition_specification> , <activity_data id=73> a notification </activity_data> about the normal service execution is <activity id=74> created </activity> . <xor_gateway id=75> If </xor_gateway> <condition_specification id=76> a problem is detected </condition_specification> <activity_data id=77> this </activity_data> will be <activity id=78> analyzed </activity> by <actor id=58> Resource Provisioning </actor> and <activity_data id=66> a trouble report </activity_data> is <activity id=79> created </activity> . Either <activity_data id=67> trouble report </activity_data> or <activity_data id=80> the normal execution notification </activity_data> will be <activity id=81> included </activity> in a status report and <activity id=82> sent back </activity> to <actor id=42> Service Management </actor> . <actor id=41> Service Management </actor> then <activity id=83> prepares </activity> <activity_data id=84> the final status report </activity_data> based on the received information . Subsequently it has to be determined what counter measures should be taken depending on the information in the final status report . Three alternative process paths may be taken . <xor_gateway id=85> For the case </xor_gateway> that <condition_specification id=86> no problem was detected at all </condition_specification> , <activity_data id=87> the actual service performance </activity_data> is <activity id=88> sent back </activity> to <actor id=7> the Customer Service </actor> . <xor_gateway id=89> For the case </xor_gateway> that <condition_specification id=90> minor corrective actions are required </condition_specification> , <actor id=40> Service Management </actor> will <activity id=91> undertake </activity> <activity_data id=92> corrective actions </activity_data> by themselves . Subsequently , <activity_data id=93> the problem resolution report </activity_data> is <activity id=96> created </activity> and then <activity id=97> sent out </activity> to <actor id=10> Customer Service </actor> . After sending , this process path of Service Management ends . <xor_gateway id=98> For the case </xor_gateway> that <condition_specification id=99> automatic resource restoration from Resource Provisioning is required </condition_specification> , <actor id=39> Service Management </actor> must <activity id=100> create </activity> <activity_data id=101> a request </activity_data> for automatic resource restoration . <activity_data id=103> This message </activity_data> is then <activity id=104> sent </activity> to <actor id=57> Resource Provisioning </actor> . Resource Provisioning has been on-hold and waiting for a restoration request but this must happen within 2 days after the status report was sent out , otherwise Resource Provisioning terminates the process . After <activity_data id=102> the restoration request </activity_data> is <activity id=105> received </activity> , <activity_data id=106> all possible errors </activity_data> are <activity id=107> tracked </activity> . Based on the tracked errors , all necessary <activity_data id=108> corrective actions </activity_data> are <activity id=109> undertaken </activity> by <actor id=56> Resource Provisioning </actor> . Then <activity_data id=110> a trouble-shooting report </activity_data> is <activity id=113> created </activity> . <activity_data id=111> This report </activity_data> is <activity id=114> sent out </activity> to <actor id=38> Service Management </actor> ; then the process ends . <activity_data id=112> The trouble-shooting report </activity_data> is <activity id=115> received </activity> by <actor id=37> Service Management </actor> and this information goes then into the <activity id=116> creation </activity> of <activity_data id=95> the problem resolution report </activity_data> just as described for ii ) . <actor id=9> Customer Service </actor> either <activity id=117> receives </activity> <activity_data id=118> the actual service performance </activity_data> ( if there was no problem ) or <activity_data id=94> the problem resolution report </activity_data> . Then , <and_gateway id=119> two concurrent activities are triggered </and_gateway> , i.e . i ) <activity_data id=128> a report </activity_data> is <activity id=120> created </activity> for the customer which details the current service performance and the resolution of the problem , and ii ) <activity_data id=121> an SLA violation rebate </activity_data> is <activity id=122> reported </activity> to <actor id=123> Billing & Collections </actor> <actor id=124> who </actor> will <activity id=125> adjust </activity> <activity_data id=126> the billing </activity_data> . <activity_data id=127> The report </activity_data> for the customer is <activity id=130> sent out </activity> to <actor id=132> her </actor> . After all three activities are completed the process ends within Customer Service . After <actor id=131> the customer </actor> then <activity id=134> receives </activity> <activity_data id=129> the report </activity_data> about service performance and problem resolution from <actor id=8> Customer Service </actor> , the process flow at the customer also ends .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying relations between mentions of business process relevant facts in textual descriptions of business processes.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n# Format\n\nRetrieve a relation by listing the relation type, the source mention index, and the target mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\nYou will extract these relations\n\nactor performer\t0\t1\nuses\t0\t2\n\n# Restrictions\n\nRule 1. Only extract relations with types, that are defined in chapter **Relation Types**.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<activity_data id=0> At </activity_data> the beginning <actor id=133> the customer </actor> <activity id=1> perceives </activity> that <activity_data id=2> her subscribed service </activity_data> <further_specification id=3> has degraded </further_specification> . <activity_data id=4> A list with all the problem parameters </activity_data> is then <activity id=5> sent </activity> to <actor id=6> the Customer Service department of TELECO </actor> . At the customer service <actor id=11> an employee </actor> <activity id=12> enters </activity> ( based on the received data ) <activity_data id=13> a problem report </activity_data> into system T . . Then <activity_data id=14> the problem report </activity_data> is <activity id=15> compared </activity> <further_specification id=16> to the customer SLA </further_specification> to <activity id=17> identify </activity> what the extent and <activity_data id=18> the details of the service degradation </activity_data> are . Based on this , <activity_data id=19> the necessary counter measures </activity_data> are <activity id=20> determined </activity> including their respective priorities . <actor id=21> An electronic service </actor> then <activity id=22> determines </activity> <activity_data id=23> the significance of the customer </activity_data> based on information that has been collected during the history of the contractual relationship . <xor_gateway id=24> In case </xor_gateway> <condition_specification id=25> the customer is premium </condition_specification> , the process will link to an extra <activity_data id=51> problem </activity_data> <activity id=26> fix </activity> process ( this process will not be detailed here ) . <xor_gateway id=27> In case </xor_gateway> <condition_specification id=28> the customer is of certain significance </condition_specification> which would affect the counter measures previously decided upon , the process goes back to re-prioritize these measures <xor_gateway id=29> otherwise </xor_gateway> the process continues . Taking together the information ( i.e . contract commitment data + prioritized actions ) <activity_data id=30> a detailed problem report </activity_data> is <activity id=34> created </activity> . <activity_data id=31> The detailed problem report </activity_data> is then <activity id=35> sent </activity> to <actor id=36> Service Management </actor> . <actor id=43> Service Management </actor> <activity id=47> deals </activity> on a first level with <activity_data id=48> violations of quality in services </activity_data> that are provided to customers . After receiving the detailed problem report , <actor id=44> Service management </actor> <activity id=49> investigates </activity> whether <activity_data id=50> the problem </activity_data> is analyzable at the level of their department or whether the problem may be located at Resource Provisioning . <xor_gateway id=52> In case </xor_gateway> <condition_specification id=53> Service Management assesses the problem to be not analyzable by themselves </condition_specification> , <activity_data id=33> the detailed problem report </activity_data> is <activity id=54> sent out </activity> to <actor id=55> Resource Provisioning </actor> . <xor_gateway id=60> If </xor_gateway> <condition_specification id=61> Service Management is sure they can analyze it </condition_specification> , <actor id=46> they </actor> <activity id=62> perform </activity> <activity_data id=63> the analysis </activity_data> and based on the outcome <actor id=45> they </actor> <activity id=64> create </activity> <activity_data id=65> a trouble report </activity_data> that indicates the type of problem . After <actor id=59> Resource Provisioning </actor> <activity id=68> receives </activity> <activity_data id=32> the detailed problem report </activity_data> , <activity_data id=69> it </activity_data> is <activity id=70> checked </activity> whether there are any possible problems . <xor_gateway id=71> If </xor_gateway> <condition_specification id=72> no problems are detected </condition_specification> , <activity_data id=73> a notification </activity_data> about the normal service execution is <activity id=74> created </activity> . <xor_gateway id=75> If </xor_gateway> <condition_specification id=76> a problem is detected </condition_specification> <activity_data id=77> this </activity_data> will be <activity id=78> analyzed </activity> by <actor id=58> Resource Provisioning </actor> and <activity_data id=66> a trouble report </activity_data> is <activity id=79> created </activity> . Either <activity_data id=67> trouble report </activity_data> or <activity_data id=80> the normal execution notification </activity_data> will be <activity id=81> included </activity> in a status report and <activity id=82> sent back </activity> to <actor id=42> Service Management </actor> . <actor id=41> Service Management </actor> then <activity id=83> prepares </activity> <activity_data id=84> the final status report </activity_data> based on the received information . Subsequently it has to be determined what counter measures should be taken depending on the information in the final status report . Three alternative process paths may be taken . <xor_gateway id=85> For the case </xor_gateway> that <condition_specification id=86> no problem was detected at all </condition_specification> , <activity_data id=87> the actual service performance </activity_data> is <activity id=88> sent back </activity> to <actor id=7> the Customer Service </actor> . <xor_gateway id=89> For the case </xor_gateway> that <condition_specification id=90> minor corrective actions are required </condition_specification> , <actor id=40> Service Management </actor> will <activity id=91> undertake </activity> <activity_data id=92> corrective actions </activity_data> by themselves . Subsequently , <activity_data id=93> the problem resolution report </activity_data> is <activity id=96> created </activity> and then <activity id=97> sent out </activity> to <actor id=10> Customer Service </actor> . After sending , this process path of Service Management ends . <xor_gateway id=98> For the case </xor_gateway> that <condition_specification id=99> automatic resource restoration from Resource Provisioning is required </condition_specification> , <actor id=39> Service Management </actor> must <activity id=100> create </activity> <activity_data id=101> a request </activity_data> for automatic resource restoration . <activity_data id=103> This message </activity_data> is then <activity id=104> sent </activity> to <actor id=57> Resource Provisioning </actor> . Resource Provisioning has been on-hold and waiting for a restoration request but this must happen within 2 days after the status report was sent out , otherwise Resource Provisioning terminates the process . After <activity_data id=102> the restoration request </activity_data> is <activity id=105> received </activity> , <activity_data id=106> all possible errors </activity_data> are <activity id=107> tracked </activity> . Based on the tracked errors , all necessary <activity_data id=108> corrective actions </activity_data> are <activity id=109> undertaken </activity> by <actor id=56> Resource Provisioning </actor> . Then <activity_data id=110> a trouble-shooting report </activity_data> is <activity id=113> created </activity> . <activity_data id=111> This report </activity_data> is <activity id=114> sent out </activity> to <actor id=38> Service Management </actor> ; then the process ends . <activity_data id=112> The trouble-shooting report </activity_data> is <activity id=115> received </activity> by <actor id=37> Service Management </actor> and this information goes then into the <activity id=116> creation </activity> of <activity_data id=95> the problem resolution report </activity_data> just as described for ii ) . <actor id=9> Customer Service </actor> either <activity id=117> receives </activity> <activity_data id=118> the actual service performance </activity_data> ( if there was no problem ) or <activity_data id=94> the problem resolution report </activity_data> . Then , <and_gateway id=119> two concurrent activities are triggered </and_gateway> , i.e . i ) <activity_data id=128> a report </activity_data> is <activity id=120> created </activity> for the customer which details the current service performance and the resolution of the problem , and ii ) <activity_data id=121> an SLA violation rebate </activity_data> is <activity id=122> reported </activity> to <actor id=123> Billing & Collections </actor> <actor id=124> who </actor> will <activity id=125> adjust </activity> <activity_data id=126> the billing </activity_data> . <activity_data id=127> The report </activity_data> for the customer is <activity id=130> sent out </activity> to <actor id=132> her </actor> . After all three activities are completed the process ends within Customer Service . After <actor id=131> the customer </actor> then <activity id=134> receives </activity> <activity_data id=129> the report </activity_data> about service performance and problem resolution from <actor id=8> Customer Service </actor> , the process flow at the customer also ends .\n\nNo relations found.\n"], "steps": [["relations"], ["relations"], ["relations"]], "formatter_args": [{"prompt": "pet/re/iterative/same_gateway.txt", "only_tags": ["same gateway"], "context_tags": null}, {"prompt": "pet/re/iterative/flow.txt", "only_tags": ["flow"], "context_tags": null}, {"prompt": "pet/re/iterative/remaining.txt", "only_tags": ["uses", "actor performer", "actor recipient", "further specification"], "context_tags": null}], "formatters": ["PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy"], "input_tokens": 7985, "output_tokens": 12, "total_costs": 0.0040105, "answers": ["No relations found.", "No relations found.", "No relations found."], "original_id": "doc-2.1"}]}, {"meta": {"num_shots": 0, "model": "gpt-3.5-turbo-0125", "temperature": 0.0}, "results": [{"prompts": ["System: # Task\n\nYou are a business process modelling expert, tasked with identifying if two xor_gateways refer to the same decision point, and merely represent two possible paths in the process.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **same gateway**: Focus on XOR_Gateway mentions and their corresponding condition_specification. Find the next XOR_Gateway and its condition_specification in the text. If the two condition specifications describe the same decision, i.e., the first describes what to do in one case and the second in the other case, then extract a relation of type \"same gateway\" for the XOR_Gateways preceding the respective condition_specification.\n\n# Format\n\nDetect that two XOR_Gateways are the same, by listing the type of the relation (always \"same gateway\"), the index of the first one (source mention index), and the one appearing later in the text (target mention index), separated by tabs. List one relation per line.\n\nsame gateway\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\n<xor_gateway id=1> If </xor_gateway> <condition_specification id=0> the LLM finds two gateways that are the same </condition_specification>, <actor id=2> it </actor> <activity id=4> extracts </activity> <activity_data id=3> the relation </activity_data> . <xor_gateway id=5> Otherwise </xor_gateway> , <actor id=6> it </actor> <activity id=7> continues </activity> .\n\nYou will extract these relations\n\nsame gateway\t1\t5\n\n# Restrictions\n\nRule 1. Two XOR_Gateways or two AND_Gateway are only the same gateway, if they describe two paths of the same decision. There may appear multiple XOR_Gateways in the text, that are different decisions, and therefore are not the same gateway.\n\nRule 2. One XOR_Gateway be at most part of one \"same gateway\" relation.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nThe process of Vacations Request starts when <actor id=0> any employee </actor> of the organization <activity id=2> submits </activity> <activity_data id=3> a vacation request </activity_data> . Once <activity_data id=4> the requirement </activity_data> is <activity id=5> registered </activity> , <activity_data id=6> the request </activity_data> is <activity id=9> received </activity> by <actor id=10> the immediate supervisor </actor> of the employee requesting the vacation . <actor id=11> The supervisor </actor> must <activity id=12> approve or reject </activity> <activity_data id=7> the request </activity_data> . <xor_gateway id=13> If </xor_gateway> <condition_specification id=14> the request is rejected </condition_specification> , <activity_data id=8> the application </activity_data> is <activity id=15> returned </activity> to <actor id=1> the applicant / employee </actor> who can review the rejection reasons . <xor_gateway id=16> If </xor_gateway> <condition_specification id=17> the request is approved </condition_specification> <activity_data id=18> a notification </activity_data> is <activity id=19> generated </activity> to <actor id=20> the Human Resources Representative </actor> , <actor id=21> who </actor> must <activity id=22> complete </activity> <activity_data id=23> the respective management procedures </activity_data> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying the flow between business process relevant tasks in textual descriptions of business processes.\nThese tasks have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it. There are also some relations already extracted, which you can use for context during extracting flows.\n\n# Definition\n\nFlows are directed and therefore have a source mention and a target mention.\n\n**Flow**: Focus on the behavioural elements, which are mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". Extract the flow between behavioural elements, i.e., extract a relation of type \"flow\", if the text describes that one behavioural element is relevant during the process, before another behavioural element is.\nA flow relation between one behavioural element means, that it is relevant before another behavioural element, when the process is executed, e.g., if there is a flow between an \"XOR_Gateway\" and a \"Condition_Specification\" the XOR_Gateway is visited first (like an exclusive gateway in a BPMN process model), then the condition specification is relevant (like the condition in a BPMN process model). Afterwards there may be a flow between this \"Condition_Specification\" and an \"Activity\", because the condition is relevant first, and if it is fulfilled the employee has to perform the activity.\n\n# Format\n\nRetrieve a relation by listing the type (always \"flow\"), the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\nflow\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> and <activity id=3> sends </activity> <activity_data id=4> it </activity_data> back .\n\nYou will extract these relations\n\nflow\t0\t3\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nThe process of Vacations Request starts when <actor id=0> any employee </actor> of the organization <activity id=2> submits </activity> <activity_data id=3> a vacation request </activity_data> . Once <activity_data id=4> the requirement </activity_data> is <activity id=5> registered </activity> , <activity_data id=6> the request </activity_data> is <activity id=9> received </activity> by <actor id=10> the immediate supervisor </actor> of the employee requesting the vacation . <actor id=11> The supervisor </actor> must <activity id=12> approve or reject </activity> <activity_data id=7> the request </activity_data> . <xor_gateway id=13> If </xor_gateway> <condition_specification id=14> the request is rejected </condition_specification> , <activity_data id=8> the application </activity_data> is <activity id=15> returned </activity> to <actor id=1> the applicant / employee </actor> who can review the rejection reasons . <xor_gateway id=16> If </xor_gateway> <condition_specification id=17> the request is approved </condition_specification> <activity_data id=18> a notification </activity_data> is <activity id=19> generated </activity> to <actor id=20> the Human Resources Representative </actor> , <actor id=21> who </actor> must <activity id=22> complete </activity> <activity_data id=23> the respective management procedures </activity_data> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying relations between mentions of business process relevant facts in textual descriptions of business processes.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n# Format\n\nRetrieve a relation by listing the relation type, the source mention index, and the target mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\nYou will extract these relations\n\nactor performer\t0\t1\nuses\t0\t2\n\n# Restrictions\n\nRule 1. Only extract relations with types, that are defined in chapter **Relation Types**.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nThe process of Vacations Request starts when <actor id=0> any employee </actor> of the organization <activity id=2> submits </activity> <activity_data id=3> a vacation request </activity_data> . Once <activity_data id=4> the requirement </activity_data> is <activity id=5> registered </activity> , <activity_data id=6> the request </activity_data> is <activity id=9> received </activity> by <actor id=10> the immediate supervisor </actor> of the employee requesting the vacation . <actor id=11> The supervisor </actor> must <activity id=12> approve or reject </activity> <activity_data id=7> the request </activity_data> . <xor_gateway id=13> If </xor_gateway> <condition_specification id=14> the request is rejected </condition_specification> , <activity_data id=8> the application </activity_data> is <activity id=15> returned </activity> to <actor id=1> the applicant / employee </actor> who can review the rejection reasons . <xor_gateway id=16> If </xor_gateway> <condition_specification id=17> the request is approved </condition_specification> <activity_data id=18> a notification </activity_data> is <activity id=19> generated </activity> to <actor id=20> the Human Resources Representative </actor> , <actor id=21> who </actor> must <activity id=22> complete </activity> <activity_data id=23> the respective management procedures </activity_data> .\n\nNo relations found.\n"], "steps": [["relations"], ["relations"], ["relations"]], "formatter_args": [{"prompt": "pet/re/iterative/same_gateway.txt", "only_tags": ["same gateway"], "context_tags": null}, {"prompt": "pet/re/iterative/flow.txt", "only_tags": ["flow"], "context_tags": null}, {"prompt": "pet/re/iterative/remaining.txt", "only_tags": ["uses", "actor performer", "actor recipient", "further specification"], "context_tags": null}], "formatters": ["PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy"], "input_tokens": 2471, "output_tokens": 55, "total_costs": 0.001318, "answers": ["No relations found.", "flow\t2\t5\nflow\t5\t9\nflow\t9\t12\nflow\t12\t15\nflow\t15\t1\nflow\t12\t19\nflow\t19\t20\nflow\t20\t22", "No relations found."], "original_id": "doc-5.2"}]}, {"meta": {"num_shots": 0, "model": "gpt-3.5-turbo-0125", "temperature": 0.0}, "results": [{"prompts": ["System: # Task\n\nYou are a business process modelling expert, tasked with identifying if two xor_gateways refer to the same decision point, and merely represent two possible paths in the process.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **same gateway**: Focus on XOR_Gateway mentions and their corresponding condition_specification. Find the next XOR_Gateway and its condition_specification in the text. If the two condition specifications describe the same decision, i.e., the first describes what to do in one case and the second in the other case, then extract a relation of type \"same gateway\" for the XOR_Gateways preceding the respective condition_specification.\n\n# Format\n\nDetect that two XOR_Gateways are the same, by listing the type of the relation (always \"same gateway\"), the index of the first one (source mention index), and the one appearing later in the text (target mention index), separated by tabs. List one relation per line.\n\nsame gateway\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\n<xor_gateway id=1> If </xor_gateway> <condition_specification id=0> the LLM finds two gateways that are the same </condition_specification>, <actor id=2> it </actor> <activity id=4> extracts </activity> <activity_data id=3> the relation </activity_data> . <xor_gateway id=5> Otherwise </xor_gateway> , <actor id=6> it </actor> <activity id=7> continues </activity> .\n\nYou will extract these relations\n\nsame gateway\t1\t5\n\n# Restrictions\n\nRule 1. Two XOR_Gateways or two AND_Gateway are only the same gateway, if they describe two paths of the same decision. There may appear multiple XOR_Gateways in the text, that are different decisions, and therefore are not the same gateway.\n\nRule 2. One XOR_Gateway be at most part of one \"same gateway\" relation.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nThe process starts when <actor id=0> a customer </actor> <activity id=2> submits </activity> <activity_data id=3> a claim </activity_data> <further_specification id=7> by sending in relevant documentation </further_specification> . <actor id=8> The Notification department </actor> at the car insurer <activity id=9> checks </activity> <activity_data id=10> the documents </activity_data> <further_specification id=11> upon completeness </further_specification> and <activity id=12> registers </activity> <activity_data id=6> the claim </activity_data> . Then , <actor id=13> the Handling department </actor> <activity id=14> picks up </activity> <activity_data id=5> the claim </activity_data> and <activity id=15> checks </activity> <activity_data id=16> the insurance </activity_data> . Then , <activity_data id=17> an assessment </activity_data> is <activity id=18> performed </activity> . <xor_gateway id=19> If </xor_gateway> <condition_specification id=20> the assessment is positive </condition_specification> , <actor id=21> a garage </actor> is <activity id=22> phoned </activity> <further_specification id=23> to authorise the repairs </further_specification> and <activity_data id=24> the payment </activity_data> is <activity id=25> scheduled </activity> ( in this order ) . <xor_gateway id=26> Otherwise </xor_gateway> , <activity_data id=4> the claim </activity_data> is <activity id=27> rejected </activity> . In any case ( whether the outcome is positive or negative ) , <activity_data id=28> a letter </activity_data> is <activity id=29> sent </activity> to <actor id=1> the customer </actor> and the process is considered to be complete .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying the flow between business process relevant tasks in textual descriptions of business processes.\nThese tasks have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it. There are also some relations already extracted, which you can use for context during extracting flows.\n\n# Definition\n\nFlows are directed and therefore have a source mention and a target mention.\n\n**Flow**: Focus on the behavioural elements, which are mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". Extract the flow between behavioural elements, i.e., extract a relation of type \"flow\", if the text describes that one behavioural element is relevant during the process, before another behavioural element is.\nA flow relation between one behavioural element means, that it is relevant before another behavioural element, when the process is executed, e.g., if there is a flow between an \"XOR_Gateway\" and a \"Condition_Specification\" the XOR_Gateway is visited first (like an exclusive gateway in a BPMN process model), then the condition specification is relevant (like the condition in a BPMN process model). Afterwards there may be a flow between this \"Condition_Specification\" and an \"Activity\", because the condition is relevant first, and if it is fulfilled the employee has to perform the activity.\n\n# Format\n\nRetrieve a relation by listing the type (always \"flow\"), the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\nflow\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> and <activity id=3> sends </activity> <activity_data id=4> it </activity_data> back .\n\nYou will extract these relations\n\nflow\t0\t3\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nThe process starts when <actor id=0> a customer </actor> <activity id=2> submits </activity> <activity_data id=3> a claim </activity_data> <further_specification id=7> by sending in relevant documentation </further_specification> . <actor id=8> The Notification department </actor> at the car insurer <activity id=9> checks </activity> <activity_data id=10> the documents </activity_data> <further_specification id=11> upon completeness </further_specification> and <activity id=12> registers </activity> <activity_data id=6> the claim </activity_data> . Then , <actor id=13> the Handling department </actor> <activity id=14> picks up </activity> <activity_data id=5> the claim </activity_data> and <activity id=15> checks </activity> <activity_data id=16> the insurance </activity_data> . Then , <activity_data id=17> an assessment </activity_data> is <activity id=18> performed </activity> . <xor_gateway id=19> If </xor_gateway> <condition_specification id=20> the assessment is positive </condition_specification> , <actor id=21> a garage </actor> is <activity id=22> phoned </activity> <further_specification id=23> to authorise the repairs </further_specification> and <activity_data id=24> the payment </activity_data> is <activity id=25> scheduled </activity> ( in this order ) . <xor_gateway id=26> Otherwise </xor_gateway> , <activity_data id=4> the claim </activity_data> is <activity id=27> rejected </activity> . In any case ( whether the outcome is positive or negative ) , <activity_data id=28> a letter </activity_data> is <activity id=29> sent </activity> to <actor id=1> the customer </actor> and the process is considered to be complete .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying relations between mentions of business process relevant facts in textual descriptions of business processes.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n# Format\n\nRetrieve a relation by listing the relation type, the source mention index, and the target mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\nYou will extract these relations\n\nactor performer\t0\t1\nuses\t0\t2\n\n# Restrictions\n\nRule 1. Only extract relations with types, that are defined in chapter **Relation Types**.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nThe process starts when <actor id=0> a customer </actor> <activity id=2> submits </activity> <activity_data id=3> a claim </activity_data> <further_specification id=7> by sending in relevant documentation </further_specification> . <actor id=8> The Notification department </actor> at the car insurer <activity id=9> checks </activity> <activity_data id=10> the documents </activity_data> <further_specification id=11> upon completeness </further_specification> and <activity id=12> registers </activity> <activity_data id=6> the claim </activity_data> . Then , <actor id=13> the Handling department </actor> <activity id=14> picks up </activity> <activity_data id=5> the claim </activity_data> and <activity id=15> checks </activity> <activity_data id=16> the insurance </activity_data> . Then , <activity_data id=17> an assessment </activity_data> is <activity id=18> performed </activity> . <xor_gateway id=19> If </xor_gateway> <condition_specification id=20> the assessment is positive </condition_specification> , <actor id=21> a garage </actor> is <activity id=22> phoned </activity> <further_specification id=23> to authorise the repairs </further_specification> and <activity_data id=24> the payment </activity_data> is <activity id=25> scheduled </activity> ( in this order ) . <xor_gateway id=26> Otherwise </xor_gateway> , <activity_data id=4> the claim </activity_data> is <activity id=27> rejected </activity> . In any case ( whether the outcome is positive or negative ) , <activity_data id=28> a letter </activity_data> is <activity id=29> sent </activity> to <actor id=1> the customer </actor> and the process is considered to be complete .\n\nNo relations found.\n"], "steps": [["relations"], ["relations"], ["relations"]], "formatter_args": [{"prompt": "pet/re/iterative/same_gateway.txt", "only_tags": ["same gateway"], "context_tags": null}, {"prompt": "pet/re/iterative/flow.txt", "only_tags": ["flow"], "context_tags": null}, {"prompt": "pet/re/iterative/remaining.txt", "only_tags": ["uses", "actor performer", "actor recipient", "further specification"], "context_tags": null}], "formatters": ["PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy"], "input_tokens": 2756, "output_tokens": 55, "total_costs": 0.0014605, "answers": ["No relations found.", "flow\t2\t9\nflow\t9\t12\nflow\t12\t14\nflow\t14\t15\nflow\t15\t18\nflow\t18\t22\nflow\t22\t25\nflow\t25\t29", "No relations found."], "original_id": "doc-3.8"}]}, {"meta": {"num_shots": 0, "model": "gpt-3.5-turbo-0125", "temperature": 0.0}, "results": [{"prompts": ["System: # Task\n\nYou are a business process modelling expert, tasked with identifying if two xor_gateways refer to the same decision point, and merely represent two possible paths in the process.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **same gateway**: Focus on XOR_Gateway mentions and their corresponding condition_specification. Find the next XOR_Gateway and its condition_specification in the text. If the two condition specifications describe the same decision, i.e., the first describes what to do in one case and the second in the other case, then extract a relation of type \"same gateway\" for the XOR_Gateways preceding the respective condition_specification.\n\n# Format\n\nDetect that two XOR_Gateways are the same, by listing the type of the relation (always \"same gateway\"), the index of the first one (source mention index), and the one appearing later in the text (target mention index), separated by tabs. List one relation per line.\n\nsame gateway\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\n<xor_gateway id=1> If </xor_gateway> <condition_specification id=0> the LLM finds two gateways that are the same </condition_specification>, <actor id=2> it </actor> <activity id=4> extracts </activity> <activity_data id=3> the relation </activity_data> . <xor_gateway id=5> Otherwise </xor_gateway> , <actor id=6> it </actor> <activity id=7> continues </activity> .\n\nYou will extract these relations\n\nsame gateway\t1\t5\n\n# Restrictions\n\nRule 1. Two XOR_Gateways or two AND_Gateway are only the same gateway, if they describe two paths of the same decision. There may appear multiple XOR_Gateways in the text, that are different decisions, and therefore are not the same gateway.\n\nRule 2. One XOR_Gateway be at most part of one \"same gateway\" relation.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The EC </actor> <activity id=1> tells </activity> <actor id=2> the INQ </actor> <activity_data id=4> about the change of his master data </activity_data> . <actor id=3> The INQ </actor> <activity id=5> notifies </activity> <actor id=6> the IP </actor> of <activity_data id=10> the change </activity_data> . <actor id=8> The IP </actor> <activity id=13> checks </activity> <further_specification id=14> whether the master data can be changed at the desired time </further_specification> . <actor id=7> The IP </actor> <activity id=15> confirmes </activity> <activity_data id=11> the changes of the INQ </activity_data> <xor_gateway id=16> or </xor_gateway> <actor id=9> the IP </actor> <activity id=17> rejectes </activity> <activity_data id=12> the changes of the INQ </activity_data> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying the flow between business process relevant tasks in textual descriptions of business processes.\nThese tasks have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it. There are also some relations already extracted, which you can use for context during extracting flows.\n\n# Definition\n\nFlows are directed and therefore have a source mention and a target mention.\n\n**Flow**: Focus on the behavioural elements, which are mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". Extract the flow between behavioural elements, i.e., extract a relation of type \"flow\", if the text describes that one behavioural element is relevant during the process, before another behavioural element is.\nA flow relation between one behavioural element means, that it is relevant before another behavioural element, when the process is executed, e.g., if there is a flow between an \"XOR_Gateway\" and a \"Condition_Specification\" the XOR_Gateway is visited first (like an exclusive gateway in a BPMN process model), then the condition specification is relevant (like the condition in a BPMN process model). Afterwards there may be a flow between this \"Condition_Specification\" and an \"Activity\", because the condition is relevant first, and if it is fulfilled the employee has to perform the activity.\n\n# Format\n\nRetrieve a relation by listing the type (always \"flow\"), the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\nflow\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> and <activity id=3> sends </activity> <activity_data id=4> it </activity_data> back .\n\nYou will extract these relations\n\nflow\t0\t3\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The EC </actor> <activity id=1> tells </activity> <actor id=2> the INQ </actor> <activity_data id=4> about the change of his master data </activity_data> . <actor id=3> The INQ </actor> <activity id=5> notifies </activity> <actor id=6> the IP </actor> of <activity_data id=10> the change </activity_data> . <actor id=8> The IP </actor> <activity id=13> checks </activity> <further_specification id=14> whether the master data can be changed at the desired time </further_specification> . <actor id=7> The IP </actor> <activity id=15> confirmes </activity> <activity_data id=11> the changes of the INQ </activity_data> <xor_gateway id=16> or </xor_gateway> <actor id=9> the IP </actor> <activity id=17> rejectes </activity> <activity_data id=12> the changes of the INQ </activity_data> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying relations between mentions of business process relevant facts in textual descriptions of business processes.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n# Format\n\nRetrieve a relation by listing the relation type, the source mention index, and the target mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\nYou will extract these relations\n\nactor performer\t0\t1\nuses\t0\t2\n\n# Restrictions\n\nRule 1. Only extract relations with types, that are defined in chapter **Relation Types**.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The EC </actor> <activity id=1> tells </activity> <actor id=2> the INQ </actor> <activity_data id=4> about the change of his master data </activity_data> . <actor id=3> The INQ </actor> <activity id=5> notifies </activity> <actor id=6> the IP </actor> of <activity_data id=10> the change </activity_data> . <actor id=8> The IP </actor> <activity id=13> checks </activity> <further_specification id=14> whether the master data can be changed at the desired time </further_specification> . <actor id=7> The IP </actor> <activity id=15> confirmes </activity> <activity_data id=11> the changes of the INQ </activity_data> <xor_gateway id=16> or </xor_gateway> <actor id=9> the IP </actor> <activity id=17> rejectes </activity> <activity_data id=12> the changes of the INQ </activity_data> .\n\nNo relations found.\n"], "steps": [["relations"], ["relations"], ["relations"]], "formatter_args": [{"prompt": "pet/re/iterative/same_gateway.txt", "only_tags": ["same gateway"], "context_tags": null}, {"prompt": "pet/re/iterative/flow.txt", "only_tags": ["flow"], "context_tags": null}, {"prompt": "pet/re/iterative/remaining.txt", "only_tags": ["uses", "actor performer", "actor recipient", "further specification"], "context_tags": null}], "formatters": ["PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy"], "input_tokens": 2183, "output_tokens": 12, "total_costs": 0.0011095, "answers": ["No relations found.", "No relations found.", "No relations found."], "original_id": "doc-10.12"}]}, {"meta": {"num_shots": 0, "model": "gpt-3.5-turbo-0125", "temperature": 0.0}, "results": [{"prompts": ["System: # Task\n\nYou are a business process modelling expert, tasked with identifying if two xor_gateways refer to the same decision point, and merely represent two possible paths in the process.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **same gateway**: Focus on XOR_Gateway mentions and their corresponding condition_specification. Find the next XOR_Gateway and its condition_specification in the text. If the two condition specifications describe the same decision, i.e., the first describes what to do in one case and the second in the other case, then extract a relation of type \"same gateway\" for the XOR_Gateways preceding the respective condition_specification.\n\n# Format\n\nDetect that two XOR_Gateways are the same, by listing the type of the relation (always \"same gateway\"), the index of the first one (source mention index), and the one appearing later in the text (target mention index), separated by tabs. List one relation per line.\n\nsame gateway\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\n<xor_gateway id=1> If </xor_gateway> <condition_specification id=0> the LLM finds two gateways that are the same </condition_specification>, <actor id=2> it </actor> <activity id=4> extracts </activity> <activity_data id=3> the relation </activity_data> . <xor_gateway id=5> Otherwise </xor_gateway> , <actor id=6> it </actor> <activity id=7> continues </activity> .\n\nYou will extract these relations\n\nsame gateway\t1\t5\n\n# Restrictions\n\nRule 1. Two XOR_Gateways or two AND_Gateway are only the same gateway, if they describe two paths of the same decision. There may appear multiple XOR_Gateways in the text, that are different decisions, and therefore are not the same gateway.\n\nRule 2. One XOR_Gateway be at most part of one \"same gateway\" relation.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The GO </actor> <activity id=6> requests </activity> <activity_data id=7> the measurements </activity_data> to <actor id=8> the MSP </actor> . <actor id=11> The MSP </actor> <activity id=15> checks </activity> <activity_data id=16> the received request </activity_data> . <actor id=10> The MSP </actor> <activity id=18> denies </activity> <activity_data id=17> the request of the GO </activity_data> <xor_gateway id=19> or </xor_gateway> <actor id=14> the MSP </actor> <activity id=20> performs </activity> <activity_data id=21> the measurement </activity_data> . <actor id=9> The MSP </actor> <activity id=22> informs </activity> <actor id=5> the GO </actor> <activity_data id=23> about the failure of the reading </activity_data> <xor_gateway id=24> or </xor_gateway> <actor id=13> the MSP </actor> <activity id=25> transmits </activity> <activity_data id=26> the measured values </activity_data> to <actor id=4> the GO </actor> . <actor id=3> The GO </actor> <activity id=30> processes </activity> <activity_data id=27> the measured values </activity_data> . <actor id=2> The GO </actor> <activity id=31> sends </activity> <activity_data id=28> the changed values </activity_data> to <actor id=12> the MSP </actor> . <actor id=1> The GO </actor> <activity id=32> transmit </activity> <activity_data id=29> the readings </activity_data> to <actor id=33> the SP </actor> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying the flow between business process relevant tasks in textual descriptions of business processes.\nThese tasks have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it. There are also some relations already extracted, which you can use for context during extracting flows.\n\n# Definition\n\nFlows are directed and therefore have a source mention and a target mention.\n\n**Flow**: Focus on the behavioural elements, which are mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". Extract the flow between behavioural elements, i.e., extract a relation of type \"flow\", if the text describes that one behavioural element is relevant during the process, before another behavioural element is.\nA flow relation between one behavioural element means, that it is relevant before another behavioural element, when the process is executed, e.g., if there is a flow between an \"XOR_Gateway\" and a \"Condition_Specification\" the XOR_Gateway is visited first (like an exclusive gateway in a BPMN process model), then the condition specification is relevant (like the condition in a BPMN process model). Afterwards there may be a flow between this \"Condition_Specification\" and an \"Activity\", because the condition is relevant first, and if it is fulfilled the employee has to perform the activity.\n\n# Format\n\nRetrieve a relation by listing the type (always \"flow\"), the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\nflow\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> and <activity id=3> sends </activity> <activity_data id=4> it </activity_data> back .\n\nYou will extract these relations\n\nflow\t0\t3\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The GO </actor> <activity id=6> requests </activity> <activity_data id=7> the measurements </activity_data> to <actor id=8> the MSP </actor> . <actor id=11> The MSP </actor> <activity id=15> checks </activity> <activity_data id=16> the received request </activity_data> . <actor id=10> The MSP </actor> <activity id=18> denies </activity> <activity_data id=17> the request of the GO </activity_data> <xor_gateway id=19> or </xor_gateway> <actor id=14> the MSP </actor> <activity id=20> performs </activity> <activity_data id=21> the measurement </activity_data> . <actor id=9> The MSP </actor> <activity id=22> informs </activity> <actor id=5> the GO </actor> <activity_data id=23> about the failure of the reading </activity_data> <xor_gateway id=24> or </xor_gateway> <actor id=13> the MSP </actor> <activity id=25> transmits </activity> <activity_data id=26> the measured values </activity_data> to <actor id=4> the GO </actor> . <actor id=3> The GO </actor> <activity id=30> processes </activity> <activity_data id=27> the measured values </activity_data> . <actor id=2> The GO </actor> <activity id=31> sends </activity> <activity_data id=28> the changed values </activity_data> to <actor id=12> the MSP </actor> . <actor id=1> The GO </actor> <activity id=32> transmit </activity> <activity_data id=29> the readings </activity_data> to <actor id=33> the SP </actor> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying relations between mentions of business process relevant facts in textual descriptions of business processes.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n# Format\n\nRetrieve a relation by listing the relation type, the source mention index, and the target mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\nYou will extract these relations\n\nactor performer\t0\t1\nuses\t0\t2\n\n# Restrictions\n\nRule 1. Only extract relations with types, that are defined in chapter **Relation Types**.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The GO </actor> <activity id=6> requests </activity> <activity_data id=7> the measurements </activity_data> to <actor id=8> the MSP </actor> . <actor id=11> The MSP </actor> <activity id=15> checks </activity> <activity_data id=16> the received request </activity_data> . <actor id=10> The MSP </actor> <activity id=18> denies </activity> <activity_data id=17> the request of the GO </activity_data> <xor_gateway id=19> or </xor_gateway> <actor id=14> the MSP </actor> <activity id=20> performs </activity> <activity_data id=21> the measurement </activity_data> . <actor id=9> The MSP </actor> <activity id=22> informs </activity> <actor id=5> the GO </actor> <activity_data id=23> about the failure of the reading </activity_data> <xor_gateway id=24> or </xor_gateway> <actor id=13> the MSP </actor> <activity id=25> transmits </activity> <activity_data id=26> the measured values </activity_data> to <actor id=4> the GO </actor> . <actor id=3> The GO </actor> <activity id=30> processes </activity> <activity_data id=27> the measured values </activity_data> . <actor id=2> The GO </actor> <activity id=31> sends </activity> <activity_data id=28> the changed values </activity_data> to <actor id=12> the MSP </actor> . <actor id=1> The GO </actor> <activity id=32> transmit </activity> <activity_data id=29> the readings </activity_data> to <actor id=33> the SP </actor> .\n\nNo relations found.\n"], "steps": [["relations"], ["relations"], ["relations"]], "formatter_args": [{"prompt": "pet/re/iterative/same_gateway.txt", "only_tags": ["same gateway"], "context_tags": null}, {"prompt": "pet/re/iterative/flow.txt", "only_tags": ["flow"], "context_tags": null}, {"prompt": "pet/re/iterative/remaining.txt", "only_tags": ["uses", "actor performer", "actor recipient", "further specification"], "context_tags": null}], "formatters": ["PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy"], "input_tokens": 2690, "output_tokens": 12, "total_costs": 0.0013629999999999998, "answers": ["No relations found.", "No relations found.", "No relations found."], "original_id": "doc-10.11"}]}, {"meta": {"num_shots": 0, "model": "gpt-3.5-turbo-0125", "temperature": 0.0}, "results": [{"prompts": ["System: # Task\n\nYou are a business process modelling expert, tasked with identifying if two xor_gateways refer to the same decision point, and merely represent two possible paths in the process.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **same gateway**: Focus on XOR_Gateway mentions and their corresponding condition_specification. Find the next XOR_Gateway and its condition_specification in the text. If the two condition specifications describe the same decision, i.e., the first describes what to do in one case and the second in the other case, then extract a relation of type \"same gateway\" for the XOR_Gateways preceding the respective condition_specification.\n\n# Format\n\nDetect that two XOR_Gateways are the same, by listing the type of the relation (always \"same gateway\"), the index of the first one (source mention index), and the one appearing later in the text (target mention index), separated by tabs. List one relation per line.\n\nsame gateway\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\n<xor_gateway id=1> If </xor_gateway> <condition_specification id=0> the LLM finds two gateways that are the same </condition_specification>, <actor id=2> it </actor> <activity id=4> extracts </activity> <activity_data id=3> the relation </activity_data> . <xor_gateway id=5> Otherwise </xor_gateway> , <actor id=6> it </actor> <activity id=7> continues </activity> .\n\nYou will extract these relations\n\nsame gateway\t1\t5\n\n# Restrictions\n\nRule 1. Two XOR_Gateways or two AND_Gateway are only the same gateway, if they describe two paths of the same decision. There may appear multiple XOR_Gateways in the text, that are different decisions, and therefore are not the same gateway.\n\nRule 2. One XOR_Gateway be at most part of one \"same gateway\" relation.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The fault detector </actor> <activity id=1> reports </activity> <activity_data id=2> a failure </activity_data> to <actor id=3> the MPO </actor> <xor_gateway id=13> or </xor_gateway> <actor id=4> MPO </actor> has a <activity id=14> suspicion </activity> <activity_data id=15> of their own fault </activity_data> . <actor id=11> The MPO </actor> shall <activity id=16> examine </activity> <activity_data id=17> the failure </activity_data> . <actor id=10> The MPO </actor> <activity id=21> rejects </activity> <activity_data id=19> the failure of the fault detector </activity_data> <xor_gateway id=22> or </xor_gateway> <actor id=5> the MPO </actor> <activity id=23> confirms </activity> <activity_data id=18> the failure of the fault detector </activity_data> . If the MPO confirms the failure of the fault detector , <actor id=12> he </actor> <activity id=24> informes </activity> <actor id=25> the GO </actor> and <actor id=27> the MSP </actor> . <actor id=9> The MPO </actor> <activity id=29> fixes </activity> <activity_data id=20> the fault at the measuring device </activity_data> . <actor id=8> The MPO </actor> <activity id=30> shares </activity> <activity_data id=31> the results of the repairs </activity_data> <further_specification id=32> carried out with the fault detector </further_specification> . <actor id=7> The MPO </actor> will <activity id=33> inform </activity> <actor id=26> the GO </actor> <activity_data id=34> about the resolution of the interference </activity_data> . <actor id=6> The MPO </actor> will <activity id=36> inform </activity> <actor id=28> the MSP </actor> <activity_data id=35> about the resolution of the interference </activity_data> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying the flow between business process relevant tasks in textual descriptions of business processes.\nThese tasks have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it. There are also some relations already extracted, which you can use for context during extracting flows.\n\n# Definition\n\nFlows are directed and therefore have a source mention and a target mention.\n\n**Flow**: Focus on the behavioural elements, which are mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". Extract the flow between behavioural elements, i.e., extract a relation of type \"flow\", if the text describes that one behavioural element is relevant during the process, before another behavioural element is.\nA flow relation between one behavioural element means, that it is relevant before another behavioural element, when the process is executed, e.g., if there is a flow between an \"XOR_Gateway\" and a \"Condition_Specification\" the XOR_Gateway is visited first (like an exclusive gateway in a BPMN process model), then the condition specification is relevant (like the condition in a BPMN process model). Afterwards there may be a flow between this \"Condition_Specification\" and an \"Activity\", because the condition is relevant first, and if it is fulfilled the employee has to perform the activity.\n\n# Format\n\nRetrieve a relation by listing the type (always \"flow\"), the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\nflow\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> and <activity id=3> sends </activity> <activity_data id=4> it </activity_data> back .\n\nYou will extract these relations\n\nflow\t0\t3\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The fault detector </actor> <activity id=1> reports </activity> <activity_data id=2> a failure </activity_data> to <actor id=3> the MPO </actor> <xor_gateway id=13> or </xor_gateway> <actor id=4> MPO </actor> has a <activity id=14> suspicion </activity> <activity_data id=15> of their own fault </activity_data> . <actor id=11> The MPO </actor> shall <activity id=16> examine </activity> <activity_data id=17> the failure </activity_data> . <actor id=10> The MPO </actor> <activity id=21> rejects </activity> <activity_data id=19> the failure of the fault detector </activity_data> <xor_gateway id=22> or </xor_gateway> <actor id=5> the MPO </actor> <activity id=23> confirms </activity> <activity_data id=18> the failure of the fault detector </activity_data> . If the MPO confirms the failure of the fault detector , <actor id=12> he </actor> <activity id=24> informes </activity> <actor id=25> the GO </actor> and <actor id=27> the MSP </actor> . <actor id=9> The MPO </actor> <activity id=29> fixes </activity> <activity_data id=20> the fault at the measuring device </activity_data> . <actor id=8> The MPO </actor> <activity id=30> shares </activity> <activity_data id=31> the results of the repairs </activity_data> <further_specification id=32> carried out with the fault detector </further_specification> . <actor id=7> The MPO </actor> will <activity id=33> inform </activity> <actor id=26> the GO </actor> <activity_data id=34> about the resolution of the interference </activity_data> . <actor id=6> The MPO </actor> will <activity id=36> inform </activity> <actor id=28> the MSP </actor> <activity_data id=35> about the resolution of the interference </activity_data> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying relations between mentions of business process relevant facts in textual descriptions of business processes.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n# Format\n\nRetrieve a relation by listing the relation type, the source mention index, and the target mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\nYou will extract these relations\n\nactor performer\t0\t1\nuses\t0\t2\n\n# Restrictions\n\nRule 1. Only extract relations with types, that are defined in chapter **Relation Types**.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The fault detector </actor> <activity id=1> reports </activity> <activity_data id=2> a failure </activity_data> to <actor id=3> the MPO </actor> <xor_gateway id=13> or </xor_gateway> <actor id=4> MPO </actor> has a <activity id=14> suspicion </activity> <activity_data id=15> of their own fault </activity_data> . <actor id=11> The MPO </actor> shall <activity id=16> examine </activity> <activity_data id=17> the failure </activity_data> . <actor id=10> The MPO </actor> <activity id=21> rejects </activity> <activity_data id=19> the failure of the fault detector </activity_data> <xor_gateway id=22> or </xor_gateway> <actor id=5> the MPO </actor> <activity id=23> confirms </activity> <activity_data id=18> the failure of the fault detector </activity_data> . If the MPO confirms the failure of the fault detector , <actor id=12> he </actor> <activity id=24> informes </activity> <actor id=25> the GO </actor> and <actor id=27> the MSP </actor> . <actor id=9> The MPO </actor> <activity id=29> fixes </activity> <activity_data id=20> the fault at the measuring device </activity_data> . <actor id=8> The MPO </actor> <activity id=30> shares </activity> <activity_data id=31> the results of the repairs </activity_data> <further_specification id=32> carried out with the fault detector </further_specification> . <actor id=7> The MPO </actor> will <activity id=33> inform </activity> <actor id=26> the GO </actor> <activity_data id=34> about the resolution of the interference </activity_data> . <actor id=6> The MPO </actor> will <activity id=36> inform </activity> <actor id=28> the MSP </actor> <activity_data id=35> about the resolution of the interference </activity_data> .\n\nNo relations found.\n"], "steps": [["relations"], ["relations"], ["relations"]], "formatter_args": [{"prompt": "pet/re/iterative/same_gateway.txt", "only_tags": ["same gateway"], "context_tags": null}, {"prompt": "pet/re/iterative/flow.txt", "only_tags": ["flow"], "context_tags": null}, {"prompt": "pet/re/iterative/remaining.txt", "only_tags": ["uses", "actor performer", "actor recipient", "further specification"], "context_tags": null}], "formatters": ["PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy"], "input_tokens": 2930, "output_tokens": 85, "total_costs": 0.0015925000000000002, "answers": ["No relations found.", "flow\t1\t2\nflow\t2\t3\nflow\t14\t15\nflow\t16\t17\nflow\t21\t19\nflow\t23\t18\nflow\t24\t25\nflow\t24\t27\nflow\t29\t20\nflow\t30\t31\nflow\t30\t32\nflow\t33\t26\nflow\t36\t28", "No relations found."], "original_id": "doc-10.10"}]}, {"meta": {"num_shots": 0, "model": "gpt-3.5-turbo-0125", "temperature": 0.0}, "results": [{"prompts": ["System: # Task\n\nYou are a business process modelling expert, tasked with identifying if two xor_gateways refer to the same decision point, and merely represent two possible paths in the process.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **same gateway**: Focus on XOR_Gateway mentions and their corresponding condition_specification. Find the next XOR_Gateway and its condition_specification in the text. If the two condition specifications describe the same decision, i.e., the first describes what to do in one case and the second in the other case, then extract a relation of type \"same gateway\" for the XOR_Gateways preceding the respective condition_specification.\n\n# Format\n\nDetect that two XOR_Gateways are the same, by listing the type of the relation (always \"same gateway\"), the index of the first one (source mention index), and the one appearing later in the text (target mention index), separated by tabs. List one relation per line.\n\nsame gateway\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\n<xor_gateway id=1> If </xor_gateway> <condition_specification id=0> the LLM finds two gateways that are the same </condition_specification>, <actor id=2> it </actor> <activity id=4> extracts </activity> <activity_data id=3> the relation </activity_data> . <xor_gateway id=5> Otherwise </xor_gateway> , <actor id=6> it </actor> <activity id=7> continues </activity> .\n\nYou will extract these relations\n\nsame gateway\t1\t5\n\n# Restrictions\n\nRule 1. Two XOR_Gateways or two AND_Gateway are only the same gateway, if they describe two paths of the same decision. There may appear multiple XOR_Gateways in the text, that are different decisions, and therefore are not the same gateway.\n\nRule 2. One XOR_Gateway be at most part of one \"same gateway\" relation.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> A customer </actor> <activity id=2> brings in </activity> <activity_data id=3> a defective computer </activity_data> and <actor id=5> the CRS </actor> <activity id=6> checks </activity> <activity_data id=7> the defect </activity_data> and <activity id=8> hands out </activity> <activity_data id=9> a repair cost calculation </activity_data> back . <xor_gateway id=10> If </xor_gateway> <condition_specification id=11> the customer decides that the costs are acceptable </condition_specification> , the process continues , <xor_gateway id=12> otherwise </xor_gateway> <actor id=1> she </actor> <activity id=13> takes </activity> <activity_data id=4> her computer </activity_data> <further_specification id=14> home unrepaired </further_specification> . The ongoing repair consists of two activities , which are executed , in an arbitrary order . The first activity is to <activity id=15> check </activity> and <activity id=16> repair </activity> <activity_data id=17> the hardware </activity_data> , <and_gateway id=18> whereas </and_gateway> the second activity <activity id=19> checks </activity> and <activity id=20> configures </activity> <activity_data id=21> the software </activity_data> . After each of these activities , <activity_data id=22> the proper system functionality </activity_data> is <activity id=23> tested </activity> . <xor_gateway id=24> If </xor_gateway> <condition_specification id=25> an error is detected </condition_specification> <activity_data id=26> another arbitrary repair activity </activity_data> is <activity id=27> executed </activity> , <xor_gateway id=28> otherwise </xor_gateway> the repair is finished .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying the flow between business process relevant tasks in textual descriptions of business processes.\nThese tasks have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it. There are also some relations already extracted, which you can use for context during extracting flows.\n\n# Definition\n\nFlows are directed and therefore have a source mention and a target mention.\n\n**Flow**: Focus on the behavioural elements, which are mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". Extract the flow between behavioural elements, i.e., extract a relation of type \"flow\", if the text describes that one behavioural element is relevant during the process, before another behavioural element is.\nA flow relation between one behavioural element means, that it is relevant before another behavioural element, when the process is executed, e.g., if there is a flow between an \"XOR_Gateway\" and a \"Condition_Specification\" the XOR_Gateway is visited first (like an exclusive gateway in a BPMN process model), then the condition specification is relevant (like the condition in a BPMN process model). Afterwards there may be a flow between this \"Condition_Specification\" and an \"Activity\", because the condition is relevant first, and if it is fulfilled the employee has to perform the activity.\n\n# Format\n\nRetrieve a relation by listing the type (always \"flow\"), the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\nflow\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> and <activity id=3> sends </activity> <activity_data id=4> it </activity_data> back .\n\nYou will extract these relations\n\nflow\t0\t3\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> A customer </actor> <activity id=2> brings in </activity> <activity_data id=3> a defective computer </activity_data> and <actor id=5> the CRS </actor> <activity id=6> checks </activity> <activity_data id=7> the defect </activity_data> and <activity id=8> hands out </activity> <activity_data id=9> a repair cost calculation </activity_data> back . <xor_gateway id=10> If </xor_gateway> <condition_specification id=11> the customer decides that the costs are acceptable </condition_specification> , the process continues , <xor_gateway id=12> otherwise </xor_gateway> <actor id=1> she </actor> <activity id=13> takes </activity> <activity_data id=4> her computer </activity_data> <further_specification id=14> home unrepaired </further_specification> . The ongoing repair consists of two activities , which are executed , in an arbitrary order . The first activity is to <activity id=15> check </activity> and <activity id=16> repair </activity> <activity_data id=17> the hardware </activity_data> , <and_gateway id=18> whereas </and_gateway> the second activity <activity id=19> checks </activity> and <activity id=20> configures </activity> <activity_data id=21> the software </activity_data> . After each of these activities , <activity_data id=22> the proper system functionality </activity_data> is <activity id=23> tested </activity> . <xor_gateway id=24> If </xor_gateway> <condition_specification id=25> an error is detected </condition_specification> <activity_data id=26> another arbitrary repair activity </activity_data> is <activity id=27> executed </activity> , <xor_gateway id=28> otherwise </xor_gateway> the repair is finished .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying relations between mentions of business process relevant facts in textual descriptions of business processes.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n# Format\n\nRetrieve a relation by listing the relation type, the source mention index, and the target mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\nYou will extract these relations\n\nactor performer\t0\t1\nuses\t0\t2\n\n# Restrictions\n\nRule 1. Only extract relations with types, that are defined in chapter **Relation Types**.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> A customer </actor> <activity id=2> brings in </activity> <activity_data id=3> a defective computer </activity_data> and <actor id=5> the CRS </actor> <activity id=6> checks </activity> <activity_data id=7> the defect </activity_data> and <activity id=8> hands out </activity> <activity_data id=9> a repair cost calculation </activity_data> back . <xor_gateway id=10> If </xor_gateway> <condition_specification id=11> the customer decides that the costs are acceptable </condition_specification> , the process continues , <xor_gateway id=12> otherwise </xor_gateway> <actor id=1> she </actor> <activity id=13> takes </activity> <activity_data id=4> her computer </activity_data> <further_specification id=14> home unrepaired </further_specification> . The ongoing repair consists of two activities , which are executed , in an arbitrary order . The first activity is to <activity id=15> check </activity> and <activity id=16> repair </activity> <activity_data id=17> the hardware </activity_data> , <and_gateway id=18> whereas </and_gateway> the second activity <activity id=19> checks </activity> and <activity id=20> configures </activity> <activity_data id=21> the software </activity_data> . After each of these activities , <activity_data id=22> the proper system functionality </activity_data> is <activity id=23> tested </activity> . <xor_gateway id=24> If </xor_gateway> <condition_specification id=25> an error is detected </condition_specification> <activity_data id=26> another arbitrary repair activity </activity_data> is <activity id=27> executed </activity> , <xor_gateway id=28> otherwise </xor_gateway> the repair is finished .\n\nNo relations found.\n"], "steps": [["relations"], ["relations"], ["relations"]], "formatter_args": [{"prompt": "pet/re/iterative/same_gateway.txt", "only_tags": ["same gateway"], "context_tags": null}, {"prompt": "pet/re/iterative/flow.txt", "only_tags": ["flow"], "context_tags": null}, {"prompt": "pet/re/iterative/remaining.txt", "only_tags": ["uses", "actor performer", "actor recipient", "further specification"], "context_tags": null}], "formatters": ["PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy"], "input_tokens": 2714, "output_tokens": 12, "total_costs": 0.001375, "answers": ["No relations found.", "No relations found.", "No relations found."], "original_id": "doc-1.2"}]}, {"meta": {"num_shots": 0, "model": "gpt-3.5-turbo-0125", "temperature": 0.0}, "results": [{"prompts": ["System: # Task\n\nYou are a business process modelling expert, tasked with identifying if two xor_gateways refer to the same decision point, and merely represent two possible paths in the process.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **same gateway**: Focus on XOR_Gateway mentions and their corresponding condition_specification. Find the next XOR_Gateway and its condition_specification in the text. If the two condition specifications describe the same decision, i.e., the first describes what to do in one case and the second in the other case, then extract a relation of type \"same gateway\" for the XOR_Gateways preceding the respective condition_specification.\n\n# Format\n\nDetect that two XOR_Gateways are the same, by listing the type of the relation (always \"same gateway\"), the index of the first one (source mention index), and the one appearing later in the text (target mention index), separated by tabs. List one relation per line.\n\nsame gateway\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\n<xor_gateway id=1> If </xor_gateway> <condition_specification id=0> the LLM finds two gateways that are the same </condition_specification>, <actor id=2> it </actor> <activity id=4> extracts </activity> <activity_data id=3> the relation </activity_data> . <xor_gateway id=5> Otherwise </xor_gateway> , <actor id=6> it </actor> <activity id=7> continues </activity> .\n\nYou will extract these relations\n\nsame gateway\t1\t5\n\n# Restrictions\n\nRule 1. Two XOR_Gateways or two AND_Gateway are only the same gateway, if they describe two paths of the same decision. There may appear multiple XOR_Gateways in the text, that are different decisions, and therefore are not the same gateway.\n\nRule 2. One XOR_Gateway be at most part of one \"same gateway\" relation.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nFirst , <actor id=0> the Manager </actor> <activity id=5> checks </activity> <activity_data id=6> the open leads </activity_data> . Afterwards , <actor id=1> he </actor> <activity id=7> selects </activity> <activity_data id=8> the top five ones </activity_data> . <actor id=3> He </actor> then <activity id=9> tells </activity> his <actor id=10> Sales Assistant </actor> <activity_data id=14> to call the contact person of the leads </activity_data> . <actor id=13> The Sales Assistant </actor> <activity id=15> calls </activity> <activity_data id=16> each customer </activity_data> . <xor_gateway id=17> If </xor_gateway> <condition_specification id=18> someone is interested </condition_specification> , <actor id=12> he </actor> <activity id=19> sends </activity> <activity_data id=20> a note </activity_data> to <actor id=2> the Manager </actor> . <actor id=4> The Manager </actor> then <activity id=21> processes </activity> <activity_data id=22> the lead </activity_data> . <xor_gateway id=23> Otherwise </xor_gateway> , <actor id=11> he </actor> <activity id=24> calls </activity> <activity_data id=25> the next customer </activity_data> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying the flow between business process relevant tasks in textual descriptions of business processes.\nThese tasks have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it. There are also some relations already extracted, which you can use for context during extracting flows.\n\n# Definition\n\nFlows are directed and therefore have a source mention and a target mention.\n\n**Flow**: Focus on the behavioural elements, which are mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". Extract the flow between behavioural elements, i.e., extract a relation of type \"flow\", if the text describes that one behavioural element is relevant during the process, before another behavioural element is.\nA flow relation between one behavioural element means, that it is relevant before another behavioural element, when the process is executed, e.g., if there is a flow between an \"XOR_Gateway\" and a \"Condition_Specification\" the XOR_Gateway is visited first (like an exclusive gateway in a BPMN process model), then the condition specification is relevant (like the condition in a BPMN process model). Afterwards there may be a flow between this \"Condition_Specification\" and an \"Activity\", because the condition is relevant first, and if it is fulfilled the employee has to perform the activity.\n\n# Format\n\nRetrieve a relation by listing the type (always \"flow\"), the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\nflow\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> and <activity id=3> sends </activity> <activity_data id=4> it </activity_data> back .\n\nYou will extract these relations\n\nflow\t0\t3\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nFirst , <actor id=0> the Manager </actor> <activity id=5> checks </activity> <activity_data id=6> the open leads </activity_data> . Afterwards , <actor id=1> he </actor> <activity id=7> selects </activity> <activity_data id=8> the top five ones </activity_data> . <actor id=3> He </actor> then <activity id=9> tells </activity> his <actor id=10> Sales Assistant </actor> <activity_data id=14> to call the contact person of the leads </activity_data> . <actor id=13> The Sales Assistant </actor> <activity id=15> calls </activity> <activity_data id=16> each customer </activity_data> . <xor_gateway id=17> If </xor_gateway> <condition_specification id=18> someone is interested </condition_specification> , <actor id=12> he </actor> <activity id=19> sends </activity> <activity_data id=20> a note </activity_data> to <actor id=2> the Manager </actor> . <actor id=4> The Manager </actor> then <activity id=21> processes </activity> <activity_data id=22> the lead </activity_data> . <xor_gateway id=23> Otherwise </xor_gateway> , <actor id=11> he </actor> <activity id=24> calls </activity> <activity_data id=25> the next customer </activity_data> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying relations between mentions of business process relevant facts in textual descriptions of business processes.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n# Format\n\nRetrieve a relation by listing the relation type, the source mention index, and the target mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\nYou will extract these relations\n\nactor performer\t0\t1\nuses\t0\t2\n\n# Restrictions\n\nRule 1. Only extract relations with types, that are defined in chapter **Relation Types**.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nFirst , <actor id=0> the Manager </actor> <activity id=5> checks </activity> <activity_data id=6> the open leads </activity_data> . Afterwards , <actor id=1> he </actor> <activity id=7> selects </activity> <activity_data id=8> the top five ones </activity_data> . <actor id=3> He </actor> then <activity id=9> tells </activity> his <actor id=10> Sales Assistant </actor> <activity_data id=14> to call the contact person of the leads </activity_data> . <actor id=13> The Sales Assistant </actor> <activity id=15> calls </activity> <activity_data id=16> each customer </activity_data> . <xor_gateway id=17> If </xor_gateway> <condition_specification id=18> someone is interested </condition_specification> , <actor id=12> he </actor> <activity id=19> sends </activity> <activity_data id=20> a note </activity_data> to <actor id=2> the Manager </actor> . <actor id=4> The Manager </actor> then <activity id=21> processes </activity> <activity_data id=22> the lead </activity_data> . <xor_gateway id=23> Otherwise </xor_gateway> , <actor id=11> he </actor> <activity id=24> calls </activity> <activity_data id=25> the next customer </activity_data> .\n\nNo relations found.\n"], "steps": [["relations"], ["relations"], ["relations"]], "formatter_args": [{"prompt": "pet/re/iterative/same_gateway.txt", "only_tags": ["same gateway"], "context_tags": null}, {"prompt": "pet/re/iterative/flow.txt", "only_tags": ["flow"], "context_tags": null}, {"prompt": "pet/re/iterative/remaining.txt", "only_tags": ["uses", "actor performer", "actor recipient", "further specification"], "context_tags": null}], "formatters": ["PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy"], "input_tokens": 2438, "output_tokens": 49, "total_costs": 0.0012925, "answers": ["No relations found.", "flow\t5\t7\nflow\t7\t9\nflow\t9\t15\nflow\t15\t17\nflow\t17\t19\nflow\t19\t21\nflow\t17\t24", "No relations found."], "original_id": "doc-7.1"}]}, {"meta": {"num_shots": 0, "model": "gpt-3.5-turbo-0125", "temperature": 0.0}, "results": [{"prompts": ["System: # Task\n\nYou are a business process modelling expert, tasked with identifying if two xor_gateways refer to the same decision point, and merely represent two possible paths in the process.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **same gateway**: Focus on XOR_Gateway mentions and their corresponding condition_specification. Find the next XOR_Gateway and its condition_specification in the text. If the two condition specifications describe the same decision, i.e., the first describes what to do in one case and the second in the other case, then extract a relation of type \"same gateway\" for the XOR_Gateways preceding the respective condition_specification.\n\n# Format\n\nDetect that two XOR_Gateways are the same, by listing the type of the relation (always \"same gateway\"), the index of the first one (source mention index), and the one appearing later in the text (target mention index), separated by tabs. List one relation per line.\n\nsame gateway\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\n<xor_gateway id=1> If </xor_gateway> <condition_specification id=0> the LLM finds two gateways that are the same </condition_specification>, <actor id=2> it </actor> <activity id=4> extracts </activity> <activity_data id=3> the relation </activity_data> . <xor_gateway id=5> Otherwise </xor_gateway> , <actor id=6> it </actor> <activity id=7> continues </activity> .\n\nYou will extract these relations\n\nsame gateway\t1\t5\n\n# Restrictions\n\nRule 1. Two XOR_Gateways or two AND_Gateway are only the same gateway, if they describe two paths of the same decision. There may appear multiple XOR_Gateways in the text, that are different decisions, and therefore are not the same gateway.\n\nRule 2. One XOR_Gateway be at most part of one \"same gateway\" relation.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nThe process is initiated by a switch-over request . In doing so , <actor id=0> the customer </actor> <activity id=4> transmits </activity> <activity_data id=5> his data </activity_data> to <actor id=8> the customer service department </actor> of the company . Customer service is a shared service center between the departments Sales and Distribution . <activity_data id=6> The customer data </activity_data> is <activity id=13> received </activity> by <actor id=11> customer service </actor> and based on this data <activity_data id=14> a customer data object </activity_data> is <activity id=15> entered </activity> <further_specification id=16> into the CRM system </further_specification> . After customer data has been entered <activity_data id=7> it </activity_data> should then be <activity id=17> compared </activity> with <activity_data id=18> the internal customer data base </activity_data> and <activity id=19> checked </activity> <further_specification id=20> for completeness and plausibility </further_specification> . <xor_gateway id=21> In case of </xor_gateway> <condition_specification id=22> any errors </condition_specification> <activity_data id=23> these </activity_data> should be <activity id=24> corrected </activity> on the basis of a simple error list . The comparison of data is done to prevent individual customer data being stored multiple times . <xor_gateway id=25> In case </xor_gateway> <condition_specification id=26> the customer does not exist in the customer data base </condition_specification> , <activity_data id=27> a new customer object </activity_data> is being <activity id=28> created </activity> which will remain the data object of interest during the rest of the process flow . This object consists of data elements such as the customer's name and address and the assigned power gauge . The generated customer object is then used , in combination with other customer data to <activity id=29> prepare </activity> <activity_data id=30> the contract documents for the power supplier switch </activity_data> ( including data such as bank connection , information on the selected rate , requested date of switch-over ) . In the following an automated <activity id=33> check </activity> of <activity_data id=32> the contract documents </activity_data> is carried out within <actor id=34> the CIS </actor> ( customer information system ) in order to confirm their successful generation . <xor_gateway id=36> In case of </xor_gateway> <condition_specification id=37> a negative response </condition_specification> , i.e . the contract documents are not ( or incorrectly ) generated , <activity_data id=38> the causing issues </activity_data> are being <activity id=39> analyzed </activity> and <activity id=40> resolved </activity> . Subsequently <activity_data id=31> the contract documents </activity_data> are <activity id=41> generated </activity> once again . <xor_gateway id=42> In case of </xor_gateway> <condition_specification id=43> a positive response </condition_specification> <activity_data id=44> a confirmation document </activity_data> is <activity id=45> sent out </activity> to <actor id=2> the customer </actor> stating that the switch-over to the new supplier can be executed . <activity_data id=46> A request </activity_data> to <actor id=48> the grid operator </actor> is automatically <activity id=55> sent out </activity> by <actor id=35> the CIS </actor> . It puts the question whether the customer may be supplied by the selected supplier in the future . <activity_data id=47> The switch-over request </activity_data> is <activity id=56> checked </activity> by <actor id=53> the grid operator </actor> for supplier concurrence , and <actor id=52> the grid operator </actor> <activity id=57> transmits </activity> <activity_data id=58> a response comment </activity_data> . <xor_gateway id=59> In the case of </xor_gateway> <condition_specification id=60> supplier concurrence </condition_specification> <actor id=51> the grid operator </actor> would <activity id=61> inform </activity> <actor id=62> all involved suppliers </actor> and <activity id=63> demand </activity> <activity_data id=64> the resolution of the conflict </activity_data> . <actor id=54> The grid operator </actor> <activity id=65> communicates </activity> with <actor id=66> the old supplier </actor> and <activity id=70> carries out </activity> <activity_data id=71> the termination of the sales agreement </activity_data> between the customer and the old supplier ( i.e . the customer service ( of the new supplier ) does not have to interact with the old supplier regarding termination ) . <xor_gateway id=72> If </xor_gateway> <condition_specification id=73> there are not any objections by the grid operator </condition_specification> ( i.e . no supplier concurrence ) , <actor id=10> customer service </actor> <activity id=74> creates </activity> <activity_data id=75> a CIS contract </activity_data> . <actor id=3> The customer </actor> then has the chance to <activity id=78> check </activity> <activity_data id=79> the contract details </activity_data> and based on this check may decide to <xor_gateway id=80> either </xor_gateway> <activity id=81> withdraw </activity> from <activity_data id=76> the switch contract </activity_data> <xor_gateway id=82> or </xor_gateway> <activity id=83> confirm </activity> <activity_data id=77> it </activity_data> . Depending on the customer's acceptance / rejection the process flow at customer service either ends ( in case of withdrawal ) or continues ( in case of a confirmation ) . An additional constraint is that the customer can only withdraw from the offered contract within 7 days after the 7th day the contract will be regarded as accepted and the process continues . The confirmation message by the customer is therefore not absolutely necessary ( as it will count as accepted after 7 days in any way ) but it can speed up the switch process . On the switch-date , but no later than 10 days after power supply has begun , <actor id=50> the grid operator </actor> <activity id=84> transmits </activity> <activity_data id=85> the power meter data </activity_data> to <actor id=12> the customer service </actor> and <actor id=69> the old supplier </actor> <further_specification id=88> via messages containing a services consumption report </further_specification> . <and_gateway id=89> At the same time </and_gateway> , <actor id=49> the grid operator </actor> <activity id=90> computes </activity> <activity_data id=91> the final billing </activity_data> based on the meter data and <activity id=94> sends </activity> <activity_data id=92> it </activity_data> to <actor id=68> the old supplier </actor> . Likewise <actor id=67> the old supplier </actor> <activity id=95> creates </activity> and <activity id=96> sends </activity> <activity_data id=93> the final billing </activity_data> to <actor id=1> the customer </actor> . For the customer as well as the grid operator the process ends then . After <activity id=97> receiving </activity> <activity_data id=86> the meter data </activity_data> <actor id=9> customer service </actor> <activity id=98> imports </activity> <activity_data id=87> the meter data </activity_data> to systems that require the information . The process of winning a new customer ends here .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying the flow between business process relevant tasks in textual descriptions of business processes.\nThese tasks have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it. There are also some relations already extracted, which you can use for context during extracting flows.\n\n# Definition\n\nFlows are directed and therefore have a source mention and a target mention.\n\n**Flow**: Focus on the behavioural elements, which are mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". Extract the flow between behavioural elements, i.e., extract a relation of type \"flow\", if the text describes that one behavioural element is relevant during the process, before another behavioural element is.\nA flow relation between one behavioural element means, that it is relevant before another behavioural element, when the process is executed, e.g., if there is a flow between an \"XOR_Gateway\" and a \"Condition_Specification\" the XOR_Gateway is visited first (like an exclusive gateway in a BPMN process model), then the condition specification is relevant (like the condition in a BPMN process model). Afterwards there may be a flow between this \"Condition_Specification\" and an \"Activity\", because the condition is relevant first, and if it is fulfilled the employee has to perform the activity.\n\n# Format\n\nRetrieve a relation by listing the type (always \"flow\"), the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\nflow\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> and <activity id=3> sends </activity> <activity_data id=4> it </activity_data> back .\n\nYou will extract these relations\n\nflow\t0\t3\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nThe process is initiated by a switch-over request . In doing so , <actor id=0> the customer </actor> <activity id=4> transmits </activity> <activity_data id=5> his data </activity_data> to <actor id=8> the customer service department </actor> of the company . Customer service is a shared service center between the departments Sales and Distribution . <activity_data id=6> The customer data </activity_data> is <activity id=13> received </activity> by <actor id=11> customer service </actor> and based on this data <activity_data id=14> a customer data object </activity_data> is <activity id=15> entered </activity> <further_specification id=16> into the CRM system </further_specification> . After customer data has been entered <activity_data id=7> it </activity_data> should then be <activity id=17> compared </activity> with <activity_data id=18> the internal customer data base </activity_data> and <activity id=19> checked </activity> <further_specification id=20> for completeness and plausibility </further_specification> . <xor_gateway id=21> In case of </xor_gateway> <condition_specification id=22> any errors </condition_specification> <activity_data id=23> these </activity_data> should be <activity id=24> corrected </activity> on the basis of a simple error list . The comparison of data is done to prevent individual customer data being stored multiple times . <xor_gateway id=25> In case </xor_gateway> <condition_specification id=26> the customer does not exist in the customer data base </condition_specification> , <activity_data id=27> a new customer object </activity_data> is being <activity id=28> created </activity> which will remain the data object of interest during the rest of the process flow . This object consists of data elements such as the customer's name and address and the assigned power gauge . The generated customer object is then used , in combination with other customer data to <activity id=29> prepare </activity> <activity_data id=30> the contract documents for the power supplier switch </activity_data> ( including data such as bank connection , information on the selected rate , requested date of switch-over ) . In the following an automated <activity id=33> check </activity> of <activity_data id=32> the contract documents </activity_data> is carried out within <actor id=34> the CIS </actor> ( customer information system ) in order to confirm their successful generation . <xor_gateway id=36> In case of </xor_gateway> <condition_specification id=37> a negative response </condition_specification> , i.e . the contract documents are not ( or incorrectly ) generated , <activity_data id=38> the causing issues </activity_data> are being <activity id=39> analyzed </activity> and <activity id=40> resolved </activity> . Subsequently <activity_data id=31> the contract documents </activity_data> are <activity id=41> generated </activity> once again . <xor_gateway id=42> In case of </xor_gateway> <condition_specification id=43> a positive response </condition_specification> <activity_data id=44> a confirmation document </activity_data> is <activity id=45> sent out </activity> to <actor id=2> the customer </actor> stating that the switch-over to the new supplier can be executed . <activity_data id=46> A request </activity_data> to <actor id=48> the grid operator </actor> is automatically <activity id=55> sent out </activity> by <actor id=35> the CIS </actor> . It puts the question whether the customer may be supplied by the selected supplier in the future . <activity_data id=47> The switch-over request </activity_data> is <activity id=56> checked </activity> by <actor id=53> the grid operator </actor> for supplier concurrence , and <actor id=52> the grid operator </actor> <activity id=57> transmits </activity> <activity_data id=58> a response comment </activity_data> . <xor_gateway id=59> In the case of </xor_gateway> <condition_specification id=60> supplier concurrence </condition_specification> <actor id=51> the grid operator </actor> would <activity id=61> inform </activity> <actor id=62> all involved suppliers </actor> and <activity id=63> demand </activity> <activity_data id=64> the resolution of the conflict </activity_data> . <actor id=54> The grid operator </actor> <activity id=65> communicates </activity> with <actor id=66> the old supplier </actor> and <activity id=70> carries out </activity> <activity_data id=71> the termination of the sales agreement </activity_data> between the customer and the old supplier ( i.e . the customer service ( of the new supplier ) does not have to interact with the old supplier regarding termination ) . <xor_gateway id=72> If </xor_gateway> <condition_specification id=73> there are not any objections by the grid operator </condition_specification> ( i.e . no supplier concurrence ) , <actor id=10> customer service </actor> <activity id=74> creates </activity> <activity_data id=75> a CIS contract </activity_data> . <actor id=3> The customer </actor> then has the chance to <activity id=78> check </activity> <activity_data id=79> the contract details </activity_data> and based on this check may decide to <xor_gateway id=80> either </xor_gateway> <activity id=81> withdraw </activity> from <activity_data id=76> the switch contract </activity_data> <xor_gateway id=82> or </xor_gateway> <activity id=83> confirm </activity> <activity_data id=77> it </activity_data> . Depending on the customer's acceptance / rejection the process flow at customer service either ends ( in case of withdrawal ) or continues ( in case of a confirmation ) . An additional constraint is that the customer can only withdraw from the offered contract within 7 days after the 7th day the contract will be regarded as accepted and the process continues . The confirmation message by the customer is therefore not absolutely necessary ( as it will count as accepted after 7 days in any way ) but it can speed up the switch process . On the switch-date , but no later than 10 days after power supply has begun , <actor id=50> the grid operator </actor> <activity id=84> transmits </activity> <activity_data id=85> the power meter data </activity_data> to <actor id=12> the customer service </actor> and <actor id=69> the old supplier </actor> <further_specification id=88> via messages containing a services consumption report </further_specification> . <and_gateway id=89> At the same time </and_gateway> , <actor id=49> the grid operator </actor> <activity id=90> computes </activity> <activity_data id=91> the final billing </activity_data> based on the meter data and <activity id=94> sends </activity> <activity_data id=92> it </activity_data> to <actor id=68> the old supplier </actor> . Likewise <actor id=67> the old supplier </actor> <activity id=95> creates </activity> and <activity id=96> sends </activity> <activity_data id=93> the final billing </activity_data> to <actor id=1> the customer </actor> . For the customer as well as the grid operator the process ends then . After <activity id=97> receiving </activity> <activity_data id=86> the meter data </activity_data> <actor id=9> customer service </actor> <activity id=98> imports </activity> <activity_data id=87> the meter data </activity_data> to systems that require the information . The process of winning a new customer ends here .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying relations between mentions of business process relevant facts in textual descriptions of business processes.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n# Format\n\nRetrieve a relation by listing the relation type, the source mention index, and the target mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\nYou will extract these relations\n\nactor performer\t0\t1\nuses\t0\t2\n\n# Restrictions\n\nRule 1. Only extract relations with types, that are defined in chapter **Relation Types**.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nThe process is initiated by a switch-over request . In doing so , <actor id=0> the customer </actor> <activity id=4> transmits </activity> <activity_data id=5> his data </activity_data> to <actor id=8> the customer service department </actor> of the company . Customer service is a shared service center between the departments Sales and Distribution . <activity_data id=6> The customer data </activity_data> is <activity id=13> received </activity> by <actor id=11> customer service </actor> and based on this data <activity_data id=14> a customer data object </activity_data> is <activity id=15> entered </activity> <further_specification id=16> into the CRM system </further_specification> . After customer data has been entered <activity_data id=7> it </activity_data> should then be <activity id=17> compared </activity> with <activity_data id=18> the internal customer data base </activity_data> and <activity id=19> checked </activity> <further_specification id=20> for completeness and plausibility </further_specification> . <xor_gateway id=21> In case of </xor_gateway> <condition_specification id=22> any errors </condition_specification> <activity_data id=23> these </activity_data> should be <activity id=24> corrected </activity> on the basis of a simple error list . The comparison of data is done to prevent individual customer data being stored multiple times . <xor_gateway id=25> In case </xor_gateway> <condition_specification id=26> the customer does not exist in the customer data base </condition_specification> , <activity_data id=27> a new customer object </activity_data> is being <activity id=28> created </activity> which will remain the data object of interest during the rest of the process flow . This object consists of data elements such as the customer's name and address and the assigned power gauge . The generated customer object is then used , in combination with other customer data to <activity id=29> prepare </activity> <activity_data id=30> the contract documents for the power supplier switch </activity_data> ( including data such as bank connection , information on the selected rate , requested date of switch-over ) . In the following an automated <activity id=33> check </activity> of <activity_data id=32> the contract documents </activity_data> is carried out within <actor id=34> the CIS </actor> ( customer information system ) in order to confirm their successful generation . <xor_gateway id=36> In case of </xor_gateway> <condition_specification id=37> a negative response </condition_specification> , i.e . the contract documents are not ( or incorrectly ) generated , <activity_data id=38> the causing issues </activity_data> are being <activity id=39> analyzed </activity> and <activity id=40> resolved </activity> . Subsequently <activity_data id=31> the contract documents </activity_data> are <activity id=41> generated </activity> once again . <xor_gateway id=42> In case of </xor_gateway> <condition_specification id=43> a positive response </condition_specification> <activity_data id=44> a confirmation document </activity_data> is <activity id=45> sent out </activity> to <actor id=2> the customer </actor> stating that the switch-over to the new supplier can be executed . <activity_data id=46> A request </activity_data> to <actor id=48> the grid operator </actor> is automatically <activity id=55> sent out </activity> by <actor id=35> the CIS </actor> . It puts the question whether the customer may be supplied by the selected supplier in the future . <activity_data id=47> The switch-over request </activity_data> is <activity id=56> checked </activity> by <actor id=53> the grid operator </actor> for supplier concurrence , and <actor id=52> the grid operator </actor> <activity id=57> transmits </activity> <activity_data id=58> a response comment </activity_data> . <xor_gateway id=59> In the case of </xor_gateway> <condition_specification id=60> supplier concurrence </condition_specification> <actor id=51> the grid operator </actor> would <activity id=61> inform </activity> <actor id=62> all involved suppliers </actor> and <activity id=63> demand </activity> <activity_data id=64> the resolution of the conflict </activity_data> . <actor id=54> The grid operator </actor> <activity id=65> communicates </activity> with <actor id=66> the old supplier </actor> and <activity id=70> carries out </activity> <activity_data id=71> the termination of the sales agreement </activity_data> between the customer and the old supplier ( i.e . the customer service ( of the new supplier ) does not have to interact with the old supplier regarding termination ) . <xor_gateway id=72> If </xor_gateway> <condition_specification id=73> there are not any objections by the grid operator </condition_specification> ( i.e . no supplier concurrence ) , <actor id=10> customer service </actor> <activity id=74> creates </activity> <activity_data id=75> a CIS contract </activity_data> . <actor id=3> The customer </actor> then has the chance to <activity id=78> check </activity> <activity_data id=79> the contract details </activity_data> and based on this check may decide to <xor_gateway id=80> either </xor_gateway> <activity id=81> withdraw </activity> from <activity_data id=76> the switch contract </activity_data> <xor_gateway id=82> or </xor_gateway> <activity id=83> confirm </activity> <activity_data id=77> it </activity_data> . Depending on the customer's acceptance / rejection the process flow at customer service either ends ( in case of withdrawal ) or continues ( in case of a confirmation ) . An additional constraint is that the customer can only withdraw from the offered contract within 7 days after the 7th day the contract will be regarded as accepted and the process continues . The confirmation message by the customer is therefore not absolutely necessary ( as it will count as accepted after 7 days in any way ) but it can speed up the switch process . On the switch-date , but no later than 10 days after power supply has begun , <actor id=50> the grid operator </actor> <activity id=84> transmits </activity> <activity_data id=85> the power meter data </activity_data> to <actor id=12> the customer service </actor> and <actor id=69> the old supplier </actor> <further_specification id=88> via messages containing a services consumption report </further_specification> . <and_gateway id=89> At the same time </and_gateway> , <actor id=49> the grid operator </actor> <activity id=90> computes </activity> <activity_data id=91> the final billing </activity_data> based on the meter data and <activity id=94> sends </activity> <activity_data id=92> it </activity_data> to <actor id=68> the old supplier </actor> . Likewise <actor id=67> the old supplier </actor> <activity id=95> creates </activity> and <activity id=96> sends </activity> <activity_data id=93> the final billing </activity_data> to <actor id=1> the customer </actor> . For the customer as well as the grid operator the process ends then . After <activity id=97> receiving </activity> <activity_data id=86> the meter data </activity_data> <actor id=9> customer service </actor> <activity id=98> imports </activity> <activity_data id=87> the meter data </activity_data> to systems that require the information . The process of winning a new customer ends here .\n\nNo relations found.\n"], "steps": [["relations"], ["relations"], ["relations"]], "formatter_args": [{"prompt": "pet/re/iterative/same_gateway.txt", "only_tags": ["same gateway"], "context_tags": null}, {"prompt": "pet/re/iterative/flow.txt", "only_tags": ["flow"], "context_tags": null}, {"prompt": "pet/re/iterative/remaining.txt", "only_tags": ["uses", "actor performer", "actor recipient", "further specification"], "context_tags": null}], "formatters": ["PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy"], "input_tokens": 6695, "output_tokens": 12, "total_costs": 0.0033654999999999996, "answers": ["No relations found.", "No relations found.", "No relations found."], "original_id": "doc-2.2"}]}, {"meta": {"num_shots": 0, "model": "gpt-3.5-turbo-0125", "temperature": 0.0}, "results": [{"prompts": ["System: # Task\n\nYou are a business process modelling expert, tasked with identifying if two xor_gateways refer to the same decision point, and merely represent two possible paths in the process.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **same gateway**: Focus on XOR_Gateway mentions and their corresponding condition_specification. Find the next XOR_Gateway and its condition_specification in the text. If the two condition specifications describe the same decision, i.e., the first describes what to do in one case and the second in the other case, then extract a relation of type \"same gateway\" for the XOR_Gateways preceding the respective condition_specification.\n\n# Format\n\nDetect that two XOR_Gateways are the same, by listing the type of the relation (always \"same gateway\"), the index of the first one (source mention index), and the one appearing later in the text (target mention index), separated by tabs. List one relation per line.\n\nsame gateway\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\n<xor_gateway id=1> If </xor_gateway> <condition_specification id=0> the LLM finds two gateways that are the same </condition_specification>, <actor id=2> it </actor> <activity id=4> extracts </activity> <activity_data id=3> the relation </activity_data> . <xor_gateway id=5> Otherwise </xor_gateway> , <actor id=6> it </actor> <activity id=7> continues </activity> .\n\nYou will extract these relations\n\nsame gateway\t1\t5\n\n# Restrictions\n\nRule 1. Two XOR_Gateways or two AND_Gateway are only the same gateway, if they describe two paths of the same decision. There may appear multiple XOR_Gateways in the text, that are different decisions, and therefore are not the same gateway.\n\nRule 2. One XOR_Gateway be at most part of one \"same gateway\" relation.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<xor_gateway id=0> If </xor_gateway> <actor id=1> the MPOO </actor> <activity id=3> sends </activity> <activity_data id=4> the bill for the temporary continuation of the metering point operations </activity_data> to <actor id=6> the GO </actor> , <actor id=11> the GO </actor> <activity id=12> examines </activity> <activity_data id=5> the bill </activity_data> . <xor_gateway id=13> If </xor_gateway> <actor id=14> the MSPO </actor> <activity id=15> sends </activity> <activity_data id=16> the bill for the temporary continuation of the measurement </activity_data> to <actor id=10> the GO </actor> , <actor id=9> the GO </actor> <activity id=18> examines </activity> <activity_data id=17> the bill </activity_data> . <xor_gateway id=19> If </xor_gateway> <actor id=20> the MSPO </actor> <activity id=21> sends </activity> <activity_data id=22> the bill for additional readings </activity_data> to <actor id=8> the GO </actor> , <actor id=7> the GO </actor> <activity id=24> examines </activity> <activity_data id=23> the bill </activity_data> . <xor_gateway id=25> If </xor_gateway> <actor id=2> the MPOO </actor> <activity id=26> sends </activity> <activity_data id=27> the bill for the equipment acquisition </activity_data> to <actor id=29> the MPON or the GO </actor> , <actor id=30> the MPON or the GO </actor> <activity id=33> examines </activity> <activity_data id=28> the bill </activity_data> . <actor id=31> The GO or the MPON </actor> <activity id=34> confirms </activity> <activity_data id=35> the invoice with payment advice </activity_data> to <actor id=37> the MPOO or the MSPO </actor> , <xor_gateway id=38> or </xor_gateway> <actor id=32> the GO or the MPON </actor> <activity id=39> rejects </activity> <activity_data id=36> the invoice of the MPOO or the MSPO </activity_data> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying the flow between business process relevant tasks in textual descriptions of business processes.\nThese tasks have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it. There are also some relations already extracted, which you can use for context during extracting flows.\n\n# Definition\n\nFlows are directed and therefore have a source mention and a target mention.\n\n**Flow**: Focus on the behavioural elements, which are mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". Extract the flow between behavioural elements, i.e., extract a relation of type \"flow\", if the text describes that one behavioural element is relevant during the process, before another behavioural element is.\nA flow relation between one behavioural element means, that it is relevant before another behavioural element, when the process is executed, e.g., if there is a flow between an \"XOR_Gateway\" and a \"Condition_Specification\" the XOR_Gateway is visited first (like an exclusive gateway in a BPMN process model), then the condition specification is relevant (like the condition in a BPMN process model). Afterwards there may be a flow between this \"Condition_Specification\" and an \"Activity\", because the condition is relevant first, and if it is fulfilled the employee has to perform the activity.\n\n# Format\n\nRetrieve a relation by listing the type (always \"flow\"), the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\nflow\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> and <activity id=3> sends </activity> <activity_data id=4> it </activity_data> back .\n\nYou will extract these relations\n\nflow\t0\t3\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<xor_gateway id=0> If </xor_gateway> <actor id=1> the MPOO </actor> <activity id=3> sends </activity> <activity_data id=4> the bill for the temporary continuation of the metering point operations </activity_data> to <actor id=6> the GO </actor> , <actor id=11> the GO </actor> <activity id=12> examines </activity> <activity_data id=5> the bill </activity_data> . <xor_gateway id=13> If </xor_gateway> <actor id=14> the MSPO </actor> <activity id=15> sends </activity> <activity_data id=16> the bill for the temporary continuation of the measurement </activity_data> to <actor id=10> the GO </actor> , <actor id=9> the GO </actor> <activity id=18> examines </activity> <activity_data id=17> the bill </activity_data> . <xor_gateway id=19> If </xor_gateway> <actor id=20> the MSPO </actor> <activity id=21> sends </activity> <activity_data id=22> the bill for additional readings </activity_data> to <actor id=8> the GO </actor> , <actor id=7> the GO </actor> <activity id=24> examines </activity> <activity_data id=23> the bill </activity_data> . <xor_gateway id=25> If </xor_gateway> <actor id=2> the MPOO </actor> <activity id=26> sends </activity> <activity_data id=27> the bill for the equipment acquisition </activity_data> to <actor id=29> the MPON or the GO </actor> , <actor id=30> the MPON or the GO </actor> <activity id=33> examines </activity> <activity_data id=28> the bill </activity_data> . <actor id=31> The GO or the MPON </actor> <activity id=34> confirms </activity> <activity_data id=35> the invoice with payment advice </activity_data> to <actor id=37> the MPOO or the MSPO </actor> , <xor_gateway id=38> or </xor_gateway> <actor id=32> the GO or the MPON </actor> <activity id=39> rejects </activity> <activity_data id=36> the invoice of the MPOO or the MSPO </activity_data> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying relations between mentions of business process relevant facts in textual descriptions of business processes.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n# Format\n\nRetrieve a relation by listing the relation type, the source mention index, and the target mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\nYou will extract these relations\n\nactor performer\t0\t1\nuses\t0\t2\n\n# Restrictions\n\nRule 1. Only extract relations with types, that are defined in chapter **Relation Types**.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<xor_gateway id=0> If </xor_gateway> <actor id=1> the MPOO </actor> <activity id=3> sends </activity> <activity_data id=4> the bill for the temporary continuation of the metering point operations </activity_data> to <actor id=6> the GO </actor> , <actor id=11> the GO </actor> <activity id=12> examines </activity> <activity_data id=5> the bill </activity_data> . <xor_gateway id=13> If </xor_gateway> <actor id=14> the MSPO </actor> <activity id=15> sends </activity> <activity_data id=16> the bill for the temporary continuation of the measurement </activity_data> to <actor id=10> the GO </actor> , <actor id=9> the GO </actor> <activity id=18> examines </activity> <activity_data id=17> the bill </activity_data> . <xor_gateway id=19> If </xor_gateway> <actor id=20> the MSPO </actor> <activity id=21> sends </activity> <activity_data id=22> the bill for additional readings </activity_data> to <actor id=8> the GO </actor> , <actor id=7> the GO </actor> <activity id=24> examines </activity> <activity_data id=23> the bill </activity_data> . <xor_gateway id=25> If </xor_gateway> <actor id=2> the MPOO </actor> <activity id=26> sends </activity> <activity_data id=27> the bill for the equipment acquisition </activity_data> to <actor id=29> the MPON or the GO </actor> , <actor id=30> the MPON or the GO </actor> <activity id=33> examines </activity> <activity_data id=28> the bill </activity_data> . <actor id=31> The GO or the MPON </actor> <activity id=34> confirms </activity> <activity_data id=35> the invoice with payment advice </activity_data> to <actor id=37> the MPOO or the MSPO </actor> , <xor_gateway id=38> or </xor_gateway> <actor id=32> the GO or the MPON </actor> <activity id=39> rejects </activity> <activity_data id=36> the invoice of the MPOO or the MSPO </activity_data> .\n\nNo relations found.\n"], "steps": [["relations"], ["relations"], ["relations"]], "formatter_args": [{"prompt": "pet/re/iterative/same_gateway.txt", "only_tags": ["same gateway"], "context_tags": null}, {"prompt": "pet/re/iterative/flow.txt", "only_tags": ["flow"], "context_tags": null}, {"prompt": "pet/re/iterative/remaining.txt", "only_tags": ["uses", "actor performer", "actor recipient", "further specification"], "context_tags": null}], "formatters": ["PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy"], "input_tokens": 3068, "output_tokens": 12, "total_costs": 0.001552, "answers": ["No relations found.", "No relations found.", "No relations found."], "original_id": "doc-10.14"}]}, {"meta": {"num_shots": 0, "model": "gpt-3.5-turbo-0125", "temperature": 0.0}, "results": [{"prompts": ["System: # Task\n\nYou are a business process modelling expert, tasked with identifying if two xor_gateways refer to the same decision point, and merely represent two possible paths in the process.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **same gateway**: Focus on XOR_Gateway mentions and their corresponding condition_specification. Find the next XOR_Gateway and its condition_specification in the text. If the two condition specifications describe the same decision, i.e., the first describes what to do in one case and the second in the other case, then extract a relation of type \"same gateway\" for the XOR_Gateways preceding the respective condition_specification.\n\n# Format\n\nDetect that two XOR_Gateways are the same, by listing the type of the relation (always \"same gateway\"), the index of the first one (source mention index), and the one appearing later in the text (target mention index), separated by tabs. List one relation per line.\n\nsame gateway\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\n<xor_gateway id=1> If </xor_gateway> <condition_specification id=0> the LLM finds two gateways that are the same </condition_specification>, <actor id=2> it </actor> <activity id=4> extracts </activity> <activity_data id=3> the relation </activity_data> . <xor_gateway id=5> Otherwise </xor_gateway> , <actor id=6> it </actor> <activity id=7> continues </activity> .\n\nYou will extract these relations\n\nsame gateway\t1\t5\n\n# Restrictions\n\nRule 1. Two XOR_Gateways or two AND_Gateway are only the same gateway, if they describe two paths of the same decision. There may appear multiple XOR_Gateways in the text, that are different decisions, and therefore are not the same gateway.\n\nRule 2. One XOR_Gateway be at most part of one \"same gateway\" relation.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nThe intake workflow starts with a notice by telephone at the secretarial office of the mental health care institute . <activity_data id=0> This notice </activity_data> is <activity id=1> done </activity> by <actor id=2> the family doctor </actor> of somebody who is in need of mental treatment . <actor id=3> The secretarial worker </actor> <activity id=4> inquires </activity> after <activity_data id=5> the name and residence of the patient </activity_data> . On the basis of this information , <activity_data id=6> the doctor </activity_data> is <activity id=7> put through </activity> to <actor id=8> the nursing officer responsible </actor> <further_specification id=10> for the part of the region that the patient lives in </further_specification> . <actor id=9> The nursing officer </actor> <activity id=11> makes a full inquiry </activity> <further_specification id=12> into the mental , health , and social state of the patient in question </further_specification> . <activity_data id=13> This information </activity_data> is <activity id=14> recorded </activity> <further_specification id=15> on a registration form </further_specification> . At the end of the conversation , <activity_data id=16> this form </activity_data> is <activity id=17> handed in </activity> at <actor id=53> the secretarial office </actor> of the institute . Here , <activity_data id=18> the information on the form </activity_data> is <activity id=19> stored </activity> <further_specification id=20> in the information system </further_specification> and subsequently <activity id=21> printed </activity> . <xor_gateway id=22> For </xor_gateway> <condition_specification id=23> new patients </condition_specification> , <activity_data id=24> a patient file </activity_data> is <activity id=25> created </activity> . <activity_data id=26> The registration form </activity_data> as well as <activity_data id=27> the print from the information system </activity_data> are <activity id=28> stored </activity> <further_specification id=29> in the patient file </further_specification> . Patient files are kept at the secretarial office and may not leave the building . At <actor id=58> the secretarial office </actor> , <activity_data id=30> two registration cards </activity_data> are <activity id=31> produced </activity> <further_specification id=32> for respectively the future first and second intaker of the patient </further_specification> . The registration card contains a set of basic patient data . <activity_data id=33> The new patient </activity_data> is <activity id=34> added </activity> <further_specification id=35> on the list of new notices </further_specification> . Halfway the week , at Wednesday , <activity_data id=36> a staff meeting </activity_data> <further_specification id=37> of the entire medical team </further_specification> <activity id=38> takes place </activity> . The medical team consists of social-medical workers , physicians , and a psychiatrist . At this meeting , <actor id=39> the team-leader </actor> <activity id=40> assigns </activity> <activity_data id=41> all new patients </activity_data> on the list of new notices to <actor id=42> members of the team </actor> . Each patient will be assigned to a social-medical worker , who will act as the first intaker of the patient . One of the physicians will act as the second intaker . In assigning intakers , the teamleader takes into account their expertise , the region they are responsible for , earlier contacts they might have had with the patient , and their case load . <activity_data id=43> The assignments </activity_data> are <activity id=44> recorded </activity> <further_specification id=45> on an assignment list </further_specification> which is handed to <actor id=57> the secretarial office </actor> . For each new assignment , it is also <activity id=46> determined </activity> whether <activity_data id=47> the medical file of the patient </activity_data> is required . <activity_data id=48> This information </activity_data> is <activity id=49> added </activity> <further_specification id=50> to the assignment list </further_specification> . <actor id=51> The secretarial office </actor> <activity id=60> stores </activity> the assignment of each patient of the assignment list <further_specification id=61> in the information system </further_specification> . <actor id=59> It </actor> <activity id=62> passes </activity> <activity_data id=63> the produced registration cards </activity_data> to <actor id=64> the first and second intaker </actor> of each newly assigned patient . An intaker keeps this registration with him at times when visiting the patient and in his close proximity when he is at the office . <xor_gateway id=65> For each patient for which </xor_gateway> <condition_specification id=66> the medical file is required </condition_specification> , <actor id=56> the secretarial office </actor> <activity id=67> prepares </activity> and <activity id=68> sends </activity> <activity_data id=69> a letter </activity_data> to <actor id=70> the family doctor of the patient </actor> , requesting for a copy of the medical file . As soon as <activity_data id=71> this copy </activity_data> is <activity id=72> received </activity> , <actor id=55> the secretarial office </actor> will <activity id=73> inform </activity> <actor id=74> the second intaker </actor> and <activity id=76> add </activity> <activity_data id=77> the copy </activity_data> <further_specification id=78> to the patient file </further_specification> . <actor id=79> The first intaker </actor> <activity id=81> plans </activity> <activity_data id=82> a meeting with the patient </activity_data> as soon as this is possible . During the first meeting , <activity_data id=83> the patient </activity_data> is <activity id=84> examined </activity> using a standard checklist which is filled out . <activity_data id=85> Additional observations </activity_data> are <activity id=86> registered </activity> <further_specification id=87> in a personal notebook </further_specification> . After a visit , <actor id=80> the first intaker </actor> <activity id=88> puts </activity> <activity_data id=89> a copy of these notes </activity_data> <further_specification id=90> in the file of a patient </further_specification> . <activity_data id=91> The standard checklist </activity_data> is also <activity id=92> added </activity> <further_specification id=93> to the patient's file </further_specification> . <actor id=75> The second intaker </actor> <activity id=94> plans </activity> <activity_data id=95> the first meeting </activity_data> only after the medical information of the physician <xor_gateway id=96> if </xor_gateway> <condition_specification id=97> required has been received </condition_specification> . Physicians use dictaphones to record their observations made during meetings with patients . <actor id=52> The secretarial office </actor> <activity id=98> types out </activity> <activity_data id=99> these tapes </activity_data> , after which <activity_data id=100> the information </activity_data> is <activity id=101> added </activity> <further_specification id=102> to the patient file </further_specification> . As soon as the meetings of the first and second intaker with the patient have taken place , <actor id=54> the secretarial office </actor> <activity id=103> puts </activity> the patient <further_specification id=104> on the list of patients that reach this status </further_specification> . For the staff meeting on Wednesday , <actor id=105> they </actor> <activity id=106> provide </activity> <actor id=107> the team-leader </actor> with <activity_data id=108> a list of these patients </activity_data> . For each of these patients , <actor id=109> the first and second intaker together with the team-leader and the attending psychiatrist </actor> <activity id=110> formulate </activity> <activity_data id=111> a treatment plan </activity_data> . This treatment plan formally ends the intake procedure .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying the flow between business process relevant tasks in textual descriptions of business processes.\nThese tasks have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it. There are also some relations already extracted, which you can use for context during extracting flows.\n\n# Definition\n\nFlows are directed and therefore have a source mention and a target mention.\n\n**Flow**: Focus on the behavioural elements, which are mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". Extract the flow between behavioural elements, i.e., extract a relation of type \"flow\", if the text describes that one behavioural element is relevant during the process, before another behavioural element is.\nA flow relation between one behavioural element means, that it is relevant before another behavioural element, when the process is executed, e.g., if there is a flow between an \"XOR_Gateway\" and a \"Condition_Specification\" the XOR_Gateway is visited first (like an exclusive gateway in a BPMN process model), then the condition specification is relevant (like the condition in a BPMN process model). Afterwards there may be a flow between this \"Condition_Specification\" and an \"Activity\", because the condition is relevant first, and if it is fulfilled the employee has to perform the activity.\n\n# Format\n\nRetrieve a relation by listing the type (always \"flow\"), the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\nflow\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> and <activity id=3> sends </activity> <activity_data id=4> it </activity_data> back .\n\nYou will extract these relations\n\nflow\t0\t3\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nThe intake workflow starts with a notice by telephone at the secretarial office of the mental health care institute . <activity_data id=0> This notice </activity_data> is <activity id=1> done </activity> by <actor id=2> the family doctor </actor> of somebody who is in need of mental treatment . <actor id=3> The secretarial worker </actor> <activity id=4> inquires </activity> after <activity_data id=5> the name and residence of the patient </activity_data> . On the basis of this information , <activity_data id=6> the doctor </activity_data> is <activity id=7> put through </activity> to <actor id=8> the nursing officer responsible </actor> <further_specification id=10> for the part of the region that the patient lives in </further_specification> . <actor id=9> The nursing officer </actor> <activity id=11> makes a full inquiry </activity> <further_specification id=12> into the mental , health , and social state of the patient in question </further_specification> . <activity_data id=13> This information </activity_data> is <activity id=14> recorded </activity> <further_specification id=15> on a registration form </further_specification> . At the end of the conversation , <activity_data id=16> this form </activity_data> is <activity id=17> handed in </activity> at <actor id=53> the secretarial office </actor> of the institute . Here , <activity_data id=18> the information on the form </activity_data> is <activity id=19> stored </activity> <further_specification id=20> in the information system </further_specification> and subsequently <activity id=21> printed </activity> . <xor_gateway id=22> For </xor_gateway> <condition_specification id=23> new patients </condition_specification> , <activity_data id=24> a patient file </activity_data> is <activity id=25> created </activity> . <activity_data id=26> The registration form </activity_data> as well as <activity_data id=27> the print from the information system </activity_data> are <activity id=28> stored </activity> <further_specification id=29> in the patient file </further_specification> . Patient files are kept at the secretarial office and may not leave the building . At <actor id=58> the secretarial office </actor> , <activity_data id=30> two registration cards </activity_data> are <activity id=31> produced </activity> <further_specification id=32> for respectively the future first and second intaker of the patient </further_specification> . The registration card contains a set of basic patient data . <activity_data id=33> The new patient </activity_data> is <activity id=34> added </activity> <further_specification id=35> on the list of new notices </further_specification> . Halfway the week , at Wednesday , <activity_data id=36> a staff meeting </activity_data> <further_specification id=37> of the entire medical team </further_specification> <activity id=38> takes place </activity> . The medical team consists of social-medical workers , physicians , and a psychiatrist . At this meeting , <actor id=39> the team-leader </actor> <activity id=40> assigns </activity> <activity_data id=41> all new patients </activity_data> on the list of new notices to <actor id=42> members of the team </actor> . Each patient will be assigned to a social-medical worker , who will act as the first intaker of the patient . One of the physicians will act as the second intaker . In assigning intakers , the teamleader takes into account their expertise , the region they are responsible for , earlier contacts they might have had with the patient , and their case load . <activity_data id=43> The assignments </activity_data> are <activity id=44> recorded </activity> <further_specification id=45> on an assignment list </further_specification> which is handed to <actor id=57> the secretarial office </actor> . For each new assignment , it is also <activity id=46> determined </activity> whether <activity_data id=47> the medical file of the patient </activity_data> is required . <activity_data id=48> This information </activity_data> is <activity id=49> added </activity> <further_specification id=50> to the assignment list </further_specification> . <actor id=51> The secretarial office </actor> <activity id=60> stores </activity> the assignment of each patient of the assignment list <further_specification id=61> in the information system </further_specification> . <actor id=59> It </actor> <activity id=62> passes </activity> <activity_data id=63> the produced registration cards </activity_data> to <actor id=64> the first and second intaker </actor> of each newly assigned patient . An intaker keeps this registration with him at times when visiting the patient and in his close proximity when he is at the office . <xor_gateway id=65> For each patient for which </xor_gateway> <condition_specification id=66> the medical file is required </condition_specification> , <actor id=56> the secretarial office </actor> <activity id=67> prepares </activity> and <activity id=68> sends </activity> <activity_data id=69> a letter </activity_data> to <actor id=70> the family doctor of the patient </actor> , requesting for a copy of the medical file . As soon as <activity_data id=71> this copy </activity_data> is <activity id=72> received </activity> , <actor id=55> the secretarial office </actor> will <activity id=73> inform </activity> <actor id=74> the second intaker </actor> and <activity id=76> add </activity> <activity_data id=77> the copy </activity_data> <further_specification id=78> to the patient file </further_specification> . <actor id=79> The first intaker </actor> <activity id=81> plans </activity> <activity_data id=82> a meeting with the patient </activity_data> as soon as this is possible . During the first meeting , <activity_data id=83> the patient </activity_data> is <activity id=84> examined </activity> using a standard checklist which is filled out . <activity_data id=85> Additional observations </activity_data> are <activity id=86> registered </activity> <further_specification id=87> in a personal notebook </further_specification> . After a visit , <actor id=80> the first intaker </actor> <activity id=88> puts </activity> <activity_data id=89> a copy of these notes </activity_data> <further_specification id=90> in the file of a patient </further_specification> . <activity_data id=91> The standard checklist </activity_data> is also <activity id=92> added </activity> <further_specification id=93> to the patient's file </further_specification> . <actor id=75> The second intaker </actor> <activity id=94> plans </activity> <activity_data id=95> the first meeting </activity_data> only after the medical information of the physician <xor_gateway id=96> if </xor_gateway> <condition_specification id=97> required has been received </condition_specification> . Physicians use dictaphones to record their observations made during meetings with patients . <actor id=52> The secretarial office </actor> <activity id=98> types out </activity> <activity_data id=99> these tapes </activity_data> , after which <activity_data id=100> the information </activity_data> is <activity id=101> added </activity> <further_specification id=102> to the patient file </further_specification> . As soon as the meetings of the first and second intaker with the patient have taken place , <actor id=54> the secretarial office </actor> <activity id=103> puts </activity> the patient <further_specification id=104> on the list of patients that reach this status </further_specification> . For the staff meeting on Wednesday , <actor id=105> they </actor> <activity id=106> provide </activity> <actor id=107> the team-leader </actor> with <activity_data id=108> a list of these patients </activity_data> . For each of these patients , <actor id=109> the first and second intaker together with the team-leader and the attending psychiatrist </actor> <activity id=110> formulate </activity> <activity_data id=111> a treatment plan </activity_data> . This treatment plan formally ends the intake procedure .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying relations between mentions of business process relevant facts in textual descriptions of business processes.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n# Format\n\nRetrieve a relation by listing the relation type, the source mention index, and the target mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\nYou will extract these relations\n\nactor performer\t0\t1\nuses\t0\t2\n\n# Restrictions\n\nRule 1. Only extract relations with types, that are defined in chapter **Relation Types**.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nThe intake workflow starts with a notice by telephone at the secretarial office of the mental health care institute . <activity_data id=0> This notice </activity_data> is <activity id=1> done </activity> by <actor id=2> the family doctor </actor> of somebody who is in need of mental treatment . <actor id=3> The secretarial worker </actor> <activity id=4> inquires </activity> after <activity_data id=5> the name and residence of the patient </activity_data> . On the basis of this information , <activity_data id=6> the doctor </activity_data> is <activity id=7> put through </activity> to <actor id=8> the nursing officer responsible </actor> <further_specification id=10> for the part of the region that the patient lives in </further_specification> . <actor id=9> The nursing officer </actor> <activity id=11> makes a full inquiry </activity> <further_specification id=12> into the mental , health , and social state of the patient in question </further_specification> . <activity_data id=13> This information </activity_data> is <activity id=14> recorded </activity> <further_specification id=15> on a registration form </further_specification> . At the end of the conversation , <activity_data id=16> this form </activity_data> is <activity id=17> handed in </activity> at <actor id=53> the secretarial office </actor> of the institute . Here , <activity_data id=18> the information on the form </activity_data> is <activity id=19> stored </activity> <further_specification id=20> in the information system </further_specification> and subsequently <activity id=21> printed </activity> . <xor_gateway id=22> For </xor_gateway> <condition_specification id=23> new patients </condition_specification> , <activity_data id=24> a patient file </activity_data> is <activity id=25> created </activity> . <activity_data id=26> The registration form </activity_data> as well as <activity_data id=27> the print from the information system </activity_data> are <activity id=28> stored </activity> <further_specification id=29> in the patient file </further_specification> . Patient files are kept at the secretarial office and may not leave the building . At <actor id=58> the secretarial office </actor> , <activity_data id=30> two registration cards </activity_data> are <activity id=31> produced </activity> <further_specification id=32> for respectively the future first and second intaker of the patient </further_specification> . The registration card contains a set of basic patient data . <activity_data id=33> The new patient </activity_data> is <activity id=34> added </activity> <further_specification id=35> on the list of new notices </further_specification> . Halfway the week , at Wednesday , <activity_data id=36> a staff meeting </activity_data> <further_specification id=37> of the entire medical team </further_specification> <activity id=38> takes place </activity> . The medical team consists of social-medical workers , physicians , and a psychiatrist . At this meeting , <actor id=39> the team-leader </actor> <activity id=40> assigns </activity> <activity_data id=41> all new patients </activity_data> on the list of new notices to <actor id=42> members of the team </actor> . Each patient will be assigned to a social-medical worker , who will act as the first intaker of the patient . One of the physicians will act as the second intaker . In assigning intakers , the teamleader takes into account their expertise , the region they are responsible for , earlier contacts they might have had with the patient , and their case load . <activity_data id=43> The assignments </activity_data> are <activity id=44> recorded </activity> <further_specification id=45> on an assignment list </further_specification> which is handed to <actor id=57> the secretarial office </actor> . For each new assignment , it is also <activity id=46> determined </activity> whether <activity_data id=47> the medical file of the patient </activity_data> is required . <activity_data id=48> This information </activity_data> is <activity id=49> added </activity> <further_specification id=50> to the assignment list </further_specification> . <actor id=51> The secretarial office </actor> <activity id=60> stores </activity> the assignment of each patient of the assignment list <further_specification id=61> in the information system </further_specification> . <actor id=59> It </actor> <activity id=62> passes </activity> <activity_data id=63> the produced registration cards </activity_data> to <actor id=64> the first and second intaker </actor> of each newly assigned patient . An intaker keeps this registration with him at times when visiting the patient and in his close proximity when he is at the office . <xor_gateway id=65> For each patient for which </xor_gateway> <condition_specification id=66> the medical file is required </condition_specification> , <actor id=56> the secretarial office </actor> <activity id=67> prepares </activity> and <activity id=68> sends </activity> <activity_data id=69> a letter </activity_data> to <actor id=70> the family doctor of the patient </actor> , requesting for a copy of the medical file . As soon as <activity_data id=71> this copy </activity_data> is <activity id=72> received </activity> , <actor id=55> the secretarial office </actor> will <activity id=73> inform </activity> <actor id=74> the second intaker </actor> and <activity id=76> add </activity> <activity_data id=77> the copy </activity_data> <further_specification id=78> to the patient file </further_specification> . <actor id=79> The first intaker </actor> <activity id=81> plans </activity> <activity_data id=82> a meeting with the patient </activity_data> as soon as this is possible . During the first meeting , <activity_data id=83> the patient </activity_data> is <activity id=84> examined </activity> using a standard checklist which is filled out . <activity_data id=85> Additional observations </activity_data> are <activity id=86> registered </activity> <further_specification id=87> in a personal notebook </further_specification> . After a visit , <actor id=80> the first intaker </actor> <activity id=88> puts </activity> <activity_data id=89> a copy of these notes </activity_data> <further_specification id=90> in the file of a patient </further_specification> . <activity_data id=91> The standard checklist </activity_data> is also <activity id=92> added </activity> <further_specification id=93> to the patient's file </further_specification> . <actor id=75> The second intaker </actor> <activity id=94> plans </activity> <activity_data id=95> the first meeting </activity_data> only after the medical information of the physician <xor_gateway id=96> if </xor_gateway> <condition_specification id=97> required has been received </condition_specification> . Physicians use dictaphones to record their observations made during meetings with patients . <actor id=52> The secretarial office </actor> <activity id=98> types out </activity> <activity_data id=99> these tapes </activity_data> , after which <activity_data id=100> the information </activity_data> is <activity id=101> added </activity> <further_specification id=102> to the patient file </further_specification> . As soon as the meetings of the first and second intaker with the patient have taken place , <actor id=54> the secretarial office </actor> <activity id=103> puts </activity> the patient <further_specification id=104> on the list of patients that reach this status </further_specification> . For the staff meeting on Wednesday , <actor id=105> they </actor> <activity id=106> provide </activity> <actor id=107> the team-leader </actor> with <activity_data id=108> a list of these patients </activity_data> . For each of these patients , <actor id=109> the first and second intaker together with the team-leader and the attending psychiatrist </actor> <activity id=110> formulate </activity> <activity_data id=111> a treatment plan </activity_data> . This treatment plan formally ends the intake procedure .\n\nNo relations found.\n"], "steps": [["relations"], ["relations"], ["relations"]], "formatter_args": [{"prompt": "pet/re/iterative/same_gateway.txt", "only_tags": ["same gateway"], "context_tags": null}, {"prompt": "pet/re/iterative/flow.txt", "only_tags": ["flow"], "context_tags": null}, {"prompt": "pet/re/iterative/remaining.txt", "only_tags": ["uses", "actor performer", "actor recipient", "further specification"], "context_tags": null}], "formatters": ["PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy"], "input_tokens": 7352, "output_tokens": 12, "total_costs": 0.0036940000000000002, "answers": ["No relations found.", "No relations found.", "No relations found."], "original_id": "doc-4.1"}]}, {"meta": {"num_shots": 0, "model": "gpt-3.5-turbo-0125", "temperature": 0.0}, "results": [{"prompts": ["System: # Task\n\nYou are a business process modelling expert, tasked with identifying if two xor_gateways refer to the same decision point, and merely represent two possible paths in the process.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **same gateway**: Focus on XOR_Gateway mentions and their corresponding condition_specification. Find the next XOR_Gateway and its condition_specification in the text. If the two condition specifications describe the same decision, i.e., the first describes what to do in one case and the second in the other case, then extract a relation of type \"same gateway\" for the XOR_Gateways preceding the respective condition_specification.\n\n# Format\n\nDetect that two XOR_Gateways are the same, by listing the type of the relation (always \"same gateway\"), the index of the first one (source mention index), and the one appearing later in the text (target mention index), separated by tabs. List one relation per line.\n\nsame gateway\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\n<xor_gateway id=1> If </xor_gateway> <condition_specification id=0> the LLM finds two gateways that are the same </condition_specification>, <actor id=2> it </actor> <activity id=4> extracts </activity> <activity_data id=3> the relation </activity_data> . <xor_gateway id=5> Otherwise </xor_gateway> , <actor id=6> it </actor> <activity id=7> continues </activity> .\n\nYou will extract these relations\n\nsame gateway\t1\t5\n\n# Restrictions\n\nRule 1. Two XOR_Gateways or two AND_Gateway are only the same gateway, if they describe two paths of the same decision. There may appear multiple XOR_Gateways in the text, that are different decisions, and therefore are not the same gateway.\n\nRule 2. One XOR_Gateway be at most part of one \"same gateway\" relation.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nThe loan approval process starts by <activity id=0> receiving </activity> a customer request for a loan amount . <actor id=1> The risk assessment Web service </actor> is invoked to <activity id=2> assess </activity> <activity_data id=3> the request </activity_data> . <xor_gateway id=5> If </xor_gateway> <condition_specification id=6> the loan is small and the customer is low risk </condition_specification> , <activity_data id=7> the loan </activity_data> is <activity id=9> approved </activity> . <xor_gateway id=10> If </xor_gateway> <condition_specification id=11> the customer is high risk </condition_specification> , <activity_data id=8> the loan </activity_data> is <activity id=12> denied </activity> . <xor_gateway id=13> If </xor_gateway> <condition_specification id=14> the customer needs further review or the loan amount is for $10,000 or more </condition_specification> , <activity_data id=4> the request </activity_data> is <activity id=15> sent </activity> to <actor id=16> the approver Web service </actor> . <actor id=17> The customer </actor> <activity id=18> receives </activity> <activity_data id=19> feedback </activity_data> from <actor id=20> the assessor or approver </actor> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying the flow between business process relevant tasks in textual descriptions of business processes.\nThese tasks have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it. There are also some relations already extracted, which you can use for context during extracting flows.\n\n# Definition\n\nFlows are directed and therefore have a source mention and a target mention.\n\n**Flow**: Focus on the behavioural elements, which are mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". Extract the flow between behavioural elements, i.e., extract a relation of type \"flow\", if the text describes that one behavioural element is relevant during the process, before another behavioural element is.\nA flow relation between one behavioural element means, that it is relevant before another behavioural element, when the process is executed, e.g., if there is a flow between an \"XOR_Gateway\" and a \"Condition_Specification\" the XOR_Gateway is visited first (like an exclusive gateway in a BPMN process model), then the condition specification is relevant (like the condition in a BPMN process model). Afterwards there may be a flow between this \"Condition_Specification\" and an \"Activity\", because the condition is relevant first, and if it is fulfilled the employee has to perform the activity.\n\n# Format\n\nRetrieve a relation by listing the type (always \"flow\"), the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\nflow\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> and <activity id=3> sends </activity> <activity_data id=4> it </activity_data> back .\n\nYou will extract these relations\n\nflow\t0\t3\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nThe loan approval process starts by <activity id=0> receiving </activity> a customer request for a loan amount . <actor id=1> The risk assessment Web service </actor> is invoked to <activity id=2> assess </activity> <activity_data id=3> the request </activity_data> . <xor_gateway id=5> If </xor_gateway> <condition_specification id=6> the loan is small and the customer is low risk </condition_specification> , <activity_data id=7> the loan </activity_data> is <activity id=9> approved </activity> . <xor_gateway id=10> If </xor_gateway> <condition_specification id=11> the customer is high risk </condition_specification> , <activity_data id=8> the loan </activity_data> is <activity id=12> denied </activity> . <xor_gateway id=13> If </xor_gateway> <condition_specification id=14> the customer needs further review or the loan amount is for $10,000 or more </condition_specification> , <activity_data id=4> the request </activity_data> is <activity id=15> sent </activity> to <actor id=16> the approver Web service </actor> . <actor id=17> The customer </actor> <activity id=18> receives </activity> <activity_data id=19> feedback </activity_data> from <actor id=20> the assessor or approver </actor> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying relations between mentions of business process relevant facts in textual descriptions of business processes.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n# Format\n\nRetrieve a relation by listing the relation type, the source mention index, and the target mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\nYou will extract these relations\n\nactor performer\t0\t1\nuses\t0\t2\n\n# Restrictions\n\nRule 1. Only extract relations with types, that are defined in chapter **Relation Types**.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nThe loan approval process starts by <activity id=0> receiving </activity> a customer request for a loan amount . <actor id=1> The risk assessment Web service </actor> is invoked to <activity id=2> assess </activity> <activity_data id=3> the request </activity_data> . <xor_gateway id=5> If </xor_gateway> <condition_specification id=6> the loan is small and the customer is low risk </condition_specification> , <activity_data id=7> the loan </activity_data> is <activity id=9> approved </activity> . <xor_gateway id=10> If </xor_gateway> <condition_specification id=11> the customer is high risk </condition_specification> , <activity_data id=8> the loan </activity_data> is <activity id=12> denied </activity> . <xor_gateway id=13> If </xor_gateway> <condition_specification id=14> the customer needs further review or the loan amount is for $10,000 or more </condition_specification> , <activity_data id=4> the request </activity_data> is <activity id=15> sent </activity> to <actor id=16> the approver Web service </actor> . <actor id=17> The customer </actor> <activity id=18> receives </activity> <activity_data id=19> feedback </activity_data> from <actor id=20> the assessor or approver </actor> .\n\nNo relations found.\n"], "steps": [["relations"], ["relations"], ["relations"]], "formatter_args": [{"prompt": "pet/re/iterative/same_gateway.txt", "only_tags": ["same gateway"], "context_tags": null}, {"prompt": "pet/re/iterative/flow.txt", "only_tags": ["flow"], "context_tags": null}, {"prompt": "pet/re/iterative/remaining.txt", "only_tags": ["uses", "actor performer", "actor recipient", "further specification"], "context_tags": null}], "formatters": ["PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy"], "input_tokens": 2411, "output_tokens": 37, "total_costs": 0.001261, "answers": ["No relations found.", "flow\t0\t2\nflow\t2\t9\nflow\t2\t12\nflow\t2\t15\nflow\t15\t18", "No relations found."], "original_id": "doc-5.1"}]}, {"meta": {"num_shots": 0, "model": "gpt-3.5-turbo-0125", "temperature": 0.0}, "results": [{"prompts": ["System: # Task\n\nYou are a business process modelling expert, tasked with identifying if two xor_gateways refer to the same decision point, and merely represent two possible paths in the process.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **same gateway**: Focus on XOR_Gateway mentions and their corresponding condition_specification. Find the next XOR_Gateway and its condition_specification in the text. If the two condition specifications describe the same decision, i.e., the first describes what to do in one case and the second in the other case, then extract a relation of type \"same gateway\" for the XOR_Gateways preceding the respective condition_specification.\n\n# Format\n\nDetect that two XOR_Gateways are the same, by listing the type of the relation (always \"same gateway\"), the index of the first one (source mention index), and the one appearing later in the text (target mention index), separated by tabs. List one relation per line.\n\nsame gateway\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\n<xor_gateway id=1> If </xor_gateway> <condition_specification id=0> the LLM finds two gateways that are the same </condition_specification>, <actor id=2> it </actor> <activity id=4> extracts </activity> <activity_data id=3> the relation </activity_data> . <xor_gateway id=5> Otherwise </xor_gateway> , <actor id=6> it </actor> <activity id=7> continues </activity> .\n\nYou will extract these relations\n\nsame gateway\t1\t5\n\n# Restrictions\n\nRule 1. Two XOR_Gateways or two AND_Gateway are only the same gateway, if they describe two paths of the same decision. There may appear multiple XOR_Gateways in the text, that are different decisions, and therefore are not the same gateway.\n\nRule 2. One XOR_Gateway be at most part of one \"same gateway\" relation.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The MPON </actor> <activity id=7> notifies </activity> <actor id=8> the MPOO </actor> <activity_data id=11> about equipment change intentions </activity_data> . <actor id=10> The MPOO </actor> <activity id=12> announces </activity> <activity_data id=13> self dismounting </activity_data> to <actor id=6> the MPON </actor> <xor_gateway id=14> or </xor_gateway> <actor id=9> the MPOO </actor> shall <activity id=15> notify </activity> <actor id=5> the MPON </actor> <activity_data id=16> about no self-dismounting of the MPOO </activity_data> . <actor id=17> The MPON or the MPOO </actor> <activity id=19> perform </activity> <activity_data id=20> the final reading </activity_data> . <actor id=18> The MPON or the MPOO </actor> <activity id=21> dismount </activity> <activity_data id=22> the old equipment </activity_data> . <actor id=4> The MPON </actor> <activity id=23> mounts </activity> <activity_data id=24> the new device </activity_data> . <actor id=3> The MPON </actor> <activity id=25> reads </activity> <activity_data id=26> the meter count </activity_data> from the installed meter . <actor id=2> The MPON </actor> <activity id=27> sents </activity> <activity_data id=28> the values of the final reading </activity_data> to <actor id=29> the GO </actor> . <actor id=1> The MPON </actor> <activity id=32> tells </activity> <actor id=30> the GO </actor> <activity_data id=33> about the device changes , the master data and the meter count at installation </activity_data> . <actor id=31> The GO </actor> shall <activity id=34> notify </activity> <actor id=35> the MSP </actor> <activity_data id=36> about the device changes , the master data , the meter count at dismounting , and the meter count at installation </activity_data> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying the flow between business process relevant tasks in textual descriptions of business processes.\nThese tasks have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it. There are also some relations already extracted, which you can use for context during extracting flows.\n\n# Definition\n\nFlows are directed and therefore have a source mention and a target mention.\n\n**Flow**: Focus on the behavioural elements, which are mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". Extract the flow between behavioural elements, i.e., extract a relation of type \"flow\", if the text describes that one behavioural element is relevant during the process, before another behavioural element is.\nA flow relation between one behavioural element means, that it is relevant before another behavioural element, when the process is executed, e.g., if there is a flow between an \"XOR_Gateway\" and a \"Condition_Specification\" the XOR_Gateway is visited first (like an exclusive gateway in a BPMN process model), then the condition specification is relevant (like the condition in a BPMN process model). Afterwards there may be a flow between this \"Condition_Specification\" and an \"Activity\", because the condition is relevant first, and if it is fulfilled the employee has to perform the activity.\n\n# Format\n\nRetrieve a relation by listing the type (always \"flow\"), the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\nflow\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> and <activity id=3> sends </activity> <activity_data id=4> it </activity_data> back .\n\nYou will extract these relations\n\nflow\t0\t3\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The MPON </actor> <activity id=7> notifies </activity> <actor id=8> the MPOO </actor> <activity_data id=11> about equipment change intentions </activity_data> . <actor id=10> The MPOO </actor> <activity id=12> announces </activity> <activity_data id=13> self dismounting </activity_data> to <actor id=6> the MPON </actor> <xor_gateway id=14> or </xor_gateway> <actor id=9> the MPOO </actor> shall <activity id=15> notify </activity> <actor id=5> the MPON </actor> <activity_data id=16> about no self-dismounting of the MPOO </activity_data> . <actor id=17> The MPON or the MPOO </actor> <activity id=19> perform </activity> <activity_data id=20> the final reading </activity_data> . <actor id=18> The MPON or the MPOO </actor> <activity id=21> dismount </activity> <activity_data id=22> the old equipment </activity_data> . <actor id=4> The MPON </actor> <activity id=23> mounts </activity> <activity_data id=24> the new device </activity_data> . <actor id=3> The MPON </actor> <activity id=25> reads </activity> <activity_data id=26> the meter count </activity_data> from the installed meter . <actor id=2> The MPON </actor> <activity id=27> sents </activity> <activity_data id=28> the values of the final reading </activity_data> to <actor id=29> the GO </actor> . <actor id=1> The MPON </actor> <activity id=32> tells </activity> <actor id=30> the GO </actor> <activity_data id=33> about the device changes , the master data and the meter count at installation </activity_data> . <actor id=31> The GO </actor> shall <activity id=34> notify </activity> <actor id=35> the MSP </actor> <activity_data id=36> about the device changes , the master data , the meter count at dismounting , and the meter count at installation </activity_data> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying relations between mentions of business process relevant facts in textual descriptions of business processes.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n# Format\n\nRetrieve a relation by listing the relation type, the source mention index, and the target mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\nYou will extract these relations\n\nactor performer\t0\t1\nuses\t0\t2\n\n# Restrictions\n\nRule 1. Only extract relations with types, that are defined in chapter **Relation Types**.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The MPON </actor> <activity id=7> notifies </activity> <actor id=8> the MPOO </actor> <activity_data id=11> about equipment change intentions </activity_data> . <actor id=10> The MPOO </actor> <activity id=12> announces </activity> <activity_data id=13> self dismounting </activity_data> to <actor id=6> the MPON </actor> <xor_gateway id=14> or </xor_gateway> <actor id=9> the MPOO </actor> shall <activity id=15> notify </activity> <actor id=5> the MPON </actor> <activity_data id=16> about no self-dismounting of the MPOO </activity_data> . <actor id=17> The MPON or the MPOO </actor> <activity id=19> perform </activity> <activity_data id=20> the final reading </activity_data> . <actor id=18> The MPON or the MPOO </actor> <activity id=21> dismount </activity> <activity_data id=22> the old equipment </activity_data> . <actor id=4> The MPON </actor> <activity id=23> mounts </activity> <activity_data id=24> the new device </activity_data> . <actor id=3> The MPON </actor> <activity id=25> reads </activity> <activity_data id=26> the meter count </activity_data> from the installed meter . <actor id=2> The MPON </actor> <activity id=27> sents </activity> <activity_data id=28> the values of the final reading </activity_data> to <actor id=29> the GO </actor> . <actor id=1> The MPON </actor> <activity id=32> tells </activity> <actor id=30> the GO </actor> <activity_data id=33> about the device changes , the master data and the meter count at installation </activity_data> . <actor id=31> The GO </actor> shall <activity id=34> notify </activity> <actor id=35> the MSP </actor> <activity_data id=36> about the device changes , the master data , the meter count at dismounting , and the meter count at installation </activity_data> .\n\nNo relations found.\n"], "steps": [["relations"], ["relations"], ["relations"]], "formatter_args": [{"prompt": "pet/re/iterative/same_gateway.txt", "only_tags": ["same gateway"], "context_tags": null}, {"prompt": "pet/re/iterative/flow.txt", "only_tags": ["flow"], "context_tags": null}, {"prompt": "pet/re/iterative/remaining.txt", "only_tags": ["uses", "actor performer", "actor recipient", "further specification"], "context_tags": null}], "formatters": ["PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy"], "input_tokens": 3017, "output_tokens": 12, "total_costs": 0.0015265, "answers": ["No relations found.", "No relations found.", "No relations found."], "original_id": "doc-10.4"}]}, {"meta": {"num_shots": 0, "model": "gpt-3.5-turbo-0125", "temperature": 0.0}, "results": [{"prompts": ["System: # Task\n\nYou are a business process modelling expert, tasked with identifying if two xor_gateways refer to the same decision point, and merely represent two possible paths in the process.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **same gateway**: Focus on XOR_Gateway mentions and their corresponding condition_specification. Find the next XOR_Gateway and its condition_specification in the text. If the two condition specifications describe the same decision, i.e., the first describes what to do in one case and the second in the other case, then extract a relation of type \"same gateway\" for the XOR_Gateways preceding the respective condition_specification.\n\n# Format\n\nDetect that two XOR_Gateways are the same, by listing the type of the relation (always \"same gateway\"), the index of the first one (source mention index), and the one appearing later in the text (target mention index), separated by tabs. List one relation per line.\n\nsame gateway\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\n<xor_gateway id=1> If </xor_gateway> <condition_specification id=0> the LLM finds two gateways that are the same </condition_specification>, <actor id=2> it </actor> <activity id=4> extracts </activity> <activity_data id=3> the relation </activity_data> . <xor_gateway id=5> Otherwise </xor_gateway> , <actor id=6> it </actor> <activity id=7> continues </activity> .\n\nYou will extract these relations\n\nsame gateway\t1\t5\n\n# Restrictions\n\nRule 1. Two XOR_Gateways or two AND_Gateway are only the same gateway, if they describe two paths of the same decision. There may appear multiple XOR_Gateways in the text, that are different decisions, and therefore are not the same gateway.\n\nRule 2. One XOR_Gateway be at most part of one \"same gateway\" relation.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The MPOO </actor> <activity id=4> deregisters </activity> at <actor id=7> the GO </actor> . <actor id=5> The GO </actor> <activity id=15> verifies </activity> <activity_data id=16> the deregistration </activity_data> . <actor id=14> The GO </actor> <activity id=19> rejects </activity> <activity_data id=18> the deregistration of the MPOO </activity_data> <xor_gateway id=20> or </xor_gateway> <actor id=6> the GO </actor> <further_specification id=21> preliminarily </further_specification> <activity id=22> confirms </activity> <activity_data id=17> the deregistration of the MPOO </activity_data> . <actor id=13> The GO </actor> <activity id=23> prepares </activity> <activity_data id=24> the readmission of the measuring point </activity_data> . Optionally , the GO may oblige the MPOO to continue the operations . <xor_gateway id=25> If </xor_gateway> <condition_specification id=26> the GO binds the MPOO to continue the operation </condition_specification> , <actor id=3> the MPOO </actor> <activity id=27> confirmes </activity> <activity_data id=28> the continuation </activity_data> to <actor id=2> the MPOO </actor> . <actor id=12> The GO </actor> <activity id=29> performs </activity> <activity_data id=30> the equipment acquisition and / or equipment changes </activity_data> . <actor id=11> The GO </actor> <activity id=31> assigns </activity> <activity_data id=32> the GO as MPO </activity_data> . <actor id=10> The GO </actor> <activity id=33> informs </activity> <actor id=1> the MPOO </actor> <activity_data id=34> about the end of the assignment of the MPOO and the beginning of the assignment of the GO </activity_data> . <actor id=9> The GO </actor> <activity id=35> informs </activity> <actor id=36> the MSPO </actor> <activity_data id=37> about the assignment of the GO </activity_data> . <actor id=8> The GO </actor> <activity id=39> informs </activity> <actor id=40> the SP </actor> <activity_data id=38> about the assignment of the GO </activity_data> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying the flow between business process relevant tasks in textual descriptions of business processes.\nThese tasks have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it. There are also some relations already extracted, which you can use for context during extracting flows.\n\n# Definition\n\nFlows are directed and therefore have a source mention and a target mention.\n\n**Flow**: Focus on the behavioural elements, which are mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". Extract the flow between behavioural elements, i.e., extract a relation of type \"flow\", if the text describes that one behavioural element is relevant during the process, before another behavioural element is.\nA flow relation between one behavioural element means, that it is relevant before another behavioural element, when the process is executed, e.g., if there is a flow between an \"XOR_Gateway\" and a \"Condition_Specification\" the XOR_Gateway is visited first (like an exclusive gateway in a BPMN process model), then the condition specification is relevant (like the condition in a BPMN process model). Afterwards there may be a flow between this \"Condition_Specification\" and an \"Activity\", because the condition is relevant first, and if it is fulfilled the employee has to perform the activity.\n\n# Format\n\nRetrieve a relation by listing the type (always \"flow\"), the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\nflow\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> and <activity id=3> sends </activity> <activity_data id=4> it </activity_data> back .\n\nYou will extract these relations\n\nflow\t0\t3\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The MPOO </actor> <activity id=4> deregisters </activity> at <actor id=7> the GO </actor> . <actor id=5> The GO </actor> <activity id=15> verifies </activity> <activity_data id=16> the deregistration </activity_data> . <actor id=14> The GO </actor> <activity id=19> rejects </activity> <activity_data id=18> the deregistration of the MPOO </activity_data> <xor_gateway id=20> or </xor_gateway> <actor id=6> the GO </actor> <further_specification id=21> preliminarily </further_specification> <activity id=22> confirms </activity> <activity_data id=17> the deregistration of the MPOO </activity_data> . <actor id=13> The GO </actor> <activity id=23> prepares </activity> <activity_data id=24> the readmission of the measuring point </activity_data> . Optionally , the GO may oblige the MPOO to continue the operations . <xor_gateway id=25> If </xor_gateway> <condition_specification id=26> the GO binds the MPOO to continue the operation </condition_specification> , <actor id=3> the MPOO </actor> <activity id=27> confirmes </activity> <activity_data id=28> the continuation </activity_data> to <actor id=2> the MPOO </actor> . <actor id=12> The GO </actor> <activity id=29> performs </activity> <activity_data id=30> the equipment acquisition and / or equipment changes </activity_data> . <actor id=11> The GO </actor> <activity id=31> assigns </activity> <activity_data id=32> the GO as MPO </activity_data> . <actor id=10> The GO </actor> <activity id=33> informs </activity> <actor id=1> the MPOO </actor> <activity_data id=34> about the end of the assignment of the MPOO and the beginning of the assignment of the GO </activity_data> . <actor id=9> The GO </actor> <activity id=35> informs </activity> <actor id=36> the MSPO </actor> <activity_data id=37> about the assignment of the GO </activity_data> . <actor id=8> The GO </actor> <activity id=39> informs </activity> <actor id=40> the SP </actor> <activity_data id=38> about the assignment of the GO </activity_data> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying relations between mentions of business process relevant facts in textual descriptions of business processes.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n# Format\n\nRetrieve a relation by listing the relation type, the source mention index, and the target mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\nYou will extract these relations\n\nactor performer\t0\t1\nuses\t0\t2\n\n# Restrictions\n\nRule 1. Only extract relations with types, that are defined in chapter **Relation Types**.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> The MPOO </actor> <activity id=4> deregisters </activity> at <actor id=7> the GO </actor> . <actor id=5> The GO </actor> <activity id=15> verifies </activity> <activity_data id=16> the deregistration </activity_data> . <actor id=14> The GO </actor> <activity id=19> rejects </activity> <activity_data id=18> the deregistration of the MPOO </activity_data> <xor_gateway id=20> or </xor_gateway> <actor id=6> the GO </actor> <further_specification id=21> preliminarily </further_specification> <activity id=22> confirms </activity> <activity_data id=17> the deregistration of the MPOO </activity_data> . <actor id=13> The GO </actor> <activity id=23> prepares </activity> <activity_data id=24> the readmission of the measuring point </activity_data> . Optionally , the GO may oblige the MPOO to continue the operations . <xor_gateway id=25> If </xor_gateway> <condition_specification id=26> the GO binds the MPOO to continue the operation </condition_specification> , <actor id=3> the MPOO </actor> <activity id=27> confirmes </activity> <activity_data id=28> the continuation </activity_data> to <actor id=2> the MPOO </actor> . <actor id=12> The GO </actor> <activity id=29> performs </activity> <activity_data id=30> the equipment acquisition and / or equipment changes </activity_data> . <actor id=11> The GO </actor> <activity id=31> assigns </activity> <activity_data id=32> the GO as MPO </activity_data> . <actor id=10> The GO </actor> <activity id=33> informs </activity> <actor id=1> the MPOO </actor> <activity_data id=34> about the end of the assignment of the MPOO and the beginning of the assignment of the GO </activity_data> . <actor id=9> The GO </actor> <activity id=35> informs </activity> <actor id=36> the MSPO </actor> <activity_data id=37> about the assignment of the GO </activity_data> . <actor id=8> The GO </actor> <activity id=39> informs </activity> <actor id=40> the SP </actor> <activity_data id=38> about the assignment of the GO </activity_data> .\n\nNo relations found.\n"], "steps": [["relations"], ["relations"], ["relations"]], "formatter_args": [{"prompt": "pet/re/iterative/same_gateway.txt", "only_tags": ["same gateway"], "context_tags": null}, {"prompt": "pet/re/iterative/flow.txt", "only_tags": ["flow"], "context_tags": null}, {"prompt": "pet/re/iterative/remaining.txt", "only_tags": ["uses", "actor performer", "actor recipient", "further specification"], "context_tags": null}], "formatters": ["PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy"], "input_tokens": 3191, "output_tokens": 67, "total_costs": 0.001696, "answers": ["No relations found.", "flow\t4\t15\nflow\t15\t19\nflow\t19\t22\nflow\t22\t23\nflow\t23\t27\nflow\t27\t29\nflow\t29\t31\nflow\t31\t33\nflow\t33\t35\nflow\t35\t39", "No relations found."], "original_id": "doc-10.3"}]}, {"meta": {"num_shots": 0, "model": "gpt-3.5-turbo-0125", "temperature": 0.0}, "results": [{"prompts": ["System: # Task\n\nYou are a business process modelling expert, tasked with identifying if two xor_gateways refer to the same decision point, and merely represent two possible paths in the process.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **same gateway**: Focus on XOR_Gateway mentions and their corresponding condition_specification. Find the next XOR_Gateway and its condition_specification in the text. If the two condition specifications describe the same decision, i.e., the first describes what to do in one case and the second in the other case, then extract a relation of type \"same gateway\" for the XOR_Gateways preceding the respective condition_specification.\n\n# Format\n\nDetect that two XOR_Gateways are the same, by listing the type of the relation (always \"same gateway\"), the index of the first one (source mention index), and the one appearing later in the text (target mention index), separated by tabs. List one relation per line.\n\nsame gateway\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\n<xor_gateway id=1> If </xor_gateway> <condition_specification id=0> the LLM finds two gateways that are the same </condition_specification>, <actor id=2> it </actor> <activity id=4> extracts </activity> <activity_data id=3> the relation </activity_data> . <xor_gateway id=5> Otherwise </xor_gateway> , <actor id=6> it </actor> <activity id=7> continues </activity> .\n\nYou will extract these relations\n\nsame gateway\t1\t5\n\n# Restrictions\n\nRule 1. Two XOR_Gateways or two AND_Gateway are only the same gateway, if they describe two paths of the same decision. There may appear multiple XOR_Gateways in the text, that are different decisions, and therefore are not the same gateway.\n\nRule 2. One XOR_Gateway be at most part of one \"same gateway\" relation.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> An employee </actor> <activity id=4> purchases </activity> <activity_data id=5> a product or service </activity_data> he requires . For instance , a sales person on a trip rents a car . <actor id=1> The employee </actor> <activity id=6> submits </activity> <activity_data id=7> an expense report </activity_data> with a list of items , along with the receipts for each item . <actor id=13> A supervisor </actor> <activity id=14> reviews </activity> <activity_data id=8> the expense report </activity_data> and <activity id=15> approves or rejects </activity> <activity_data id=9> the report </activity_data> . Since the company has expense rules , there are circumstances where the supervisor can accept or reject the report upon first inspection . These rules could be automated , to reduce the workload on the supervisor . <xor_gateway id=16> If </xor_gateway> <condition_specification id=17> the supervisor rejects the report </condition_specification> , <actor id=3> the employee </actor> , who submitted it , is given a chance to <activity id=18> edit </activity> <activity_data id=12> it </activity_data> , for example to correct errors or better describe an expense . <xor_gateway id=19> If </xor_gateway> <condition_specification id=20> the supervisor approves the report </condition_specification> , <activity_data id=11> it </activity_data> <activity id=21> goes </activity> to <actor id=22> the treasurer </actor> . <actor id=23> The treasurer </actor> <activity id=26> checks </activity> that all <activity_data id=27> the receipts </activity_data> have been submitted and match the items on the list . <xor_gateway id=28> If </xor_gateway> <condition_specification id=29> all is in order </condition_specification> , <actor id=24> the treasurer </actor> <activity id=30> accepts </activity> <activity_data id=31> the expenses </activity_data> for processing ( including , e.g . , payment or refund , and accounting ) . <xor_gateway id=32> If </xor_gateway> <condition_specification id=33> receipts are missing or do not match the report </condition_specification> , <actor id=25> he </actor> <activity id=34> sends </activity> <activity_data id=10> it </activity_data> back to <actor id=2> the employee </actor> . If a report returns to the employee for corrections , it must again go to a supervisor , even if the supervisor previously approved the report . If the treasurer accepts the expenses for processing , the report moves to an automatic activity that links to a payment system . The process waits for the payment confirmation . After <activity_data id=35> the payment </activity_data> is <activity id=36> confirmed </activity> , the process ends .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying the flow between business process relevant tasks in textual descriptions of business processes.\nThese tasks have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it. There are also some relations already extracted, which you can use for context during extracting flows.\n\n# Definition\n\nFlows are directed and therefore have a source mention and a target mention.\n\n**Flow**: Focus on the behavioural elements, which are mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". Extract the flow between behavioural elements, i.e., extract a relation of type \"flow\", if the text describes that one behavioural element is relevant during the process, before another behavioural element is.\nA flow relation between one behavioural element means, that it is relevant before another behavioural element, when the process is executed, e.g., if there is a flow between an \"XOR_Gateway\" and a \"Condition_Specification\" the XOR_Gateway is visited first (like an exclusive gateway in a BPMN process model), then the condition specification is relevant (like the condition in a BPMN process model). Afterwards there may be a flow between this \"Condition_Specification\" and an \"Activity\", because the condition is relevant first, and if it is fulfilled the employee has to perform the activity.\n\n# Format\n\nRetrieve a relation by listing the type (always \"flow\"), the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\nflow\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> and <activity id=3> sends </activity> <activity_data id=4> it </activity_data> back .\n\nYou will extract these relations\n\nflow\t0\t3\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> An employee </actor> <activity id=4> purchases </activity> <activity_data id=5> a product or service </activity_data> he requires . For instance , a sales person on a trip rents a car . <actor id=1> The employee </actor> <activity id=6> submits </activity> <activity_data id=7> an expense report </activity_data> with a list of items , along with the receipts for each item . <actor id=13> A supervisor </actor> <activity id=14> reviews </activity> <activity_data id=8> the expense report </activity_data> and <activity id=15> approves or rejects </activity> <activity_data id=9> the report </activity_data> . Since the company has expense rules , there are circumstances where the supervisor can accept or reject the report upon first inspection . These rules could be automated , to reduce the workload on the supervisor . <xor_gateway id=16> If </xor_gateway> <condition_specification id=17> the supervisor rejects the report </condition_specification> , <actor id=3> the employee </actor> , who submitted it , is given a chance to <activity id=18> edit </activity> <activity_data id=12> it </activity_data> , for example to correct errors or better describe an expense . <xor_gateway id=19> If </xor_gateway> <condition_specification id=20> the supervisor approves the report </condition_specification> , <activity_data id=11> it </activity_data> <activity id=21> goes </activity> to <actor id=22> the treasurer </actor> . <actor id=23> The treasurer </actor> <activity id=26> checks </activity> that all <activity_data id=27> the receipts </activity_data> have been submitted and match the items on the list . <xor_gateway id=28> If </xor_gateway> <condition_specification id=29> all is in order </condition_specification> , <actor id=24> the treasurer </actor> <activity id=30> accepts </activity> <activity_data id=31> the expenses </activity_data> for processing ( including , e.g . , payment or refund , and accounting ) . <xor_gateway id=32> If </xor_gateway> <condition_specification id=33> receipts are missing or do not match the report </condition_specification> , <actor id=25> he </actor> <activity id=34> sends </activity> <activity_data id=10> it </activity_data> back to <actor id=2> the employee </actor> . If a report returns to the employee for corrections , it must again go to a supervisor , even if the supervisor previously approved the report . If the treasurer accepts the expenses for processing , the report moves to an automatic activity that links to a payment system . The process waits for the payment confirmation . After <activity_data id=35> the payment </activity_data> is <activity id=36> confirmed </activity> , the process ends .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying relations between mentions of business process relevant facts in textual descriptions of business processes.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n# Format\n\nRetrieve a relation by listing the relation type, the source mention index, and the target mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\nYou will extract these relations\n\nactor performer\t0\t1\nuses\t0\t2\n\n# Restrictions\n\nRule 1. Only extract relations with types, that are defined in chapter **Relation Types**.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=0> An employee </actor> <activity id=4> purchases </activity> <activity_data id=5> a product or service </activity_data> he requires . For instance , a sales person on a trip rents a car . <actor id=1> The employee </actor> <activity id=6> submits </activity> <activity_data id=7> an expense report </activity_data> with a list of items , along with the receipts for each item . <actor id=13> A supervisor </actor> <activity id=14> reviews </activity> <activity_data id=8> the expense report </activity_data> and <activity id=15> approves or rejects </activity> <activity_data id=9> the report </activity_data> . Since the company has expense rules , there are circumstances where the supervisor can accept or reject the report upon first inspection . These rules could be automated , to reduce the workload on the supervisor . <xor_gateway id=16> If </xor_gateway> <condition_specification id=17> the supervisor rejects the report </condition_specification> , <actor id=3> the employee </actor> , who submitted it , is given a chance to <activity id=18> edit </activity> <activity_data id=12> it </activity_data> , for example to correct errors or better describe an expense . <xor_gateway id=19> If </xor_gateway> <condition_specification id=20> the supervisor approves the report </condition_specification> , <activity_data id=11> it </activity_data> <activity id=21> goes </activity> to <actor id=22> the treasurer </actor> . <actor id=23> The treasurer </actor> <activity id=26> checks </activity> that all <activity_data id=27> the receipts </activity_data> have been submitted and match the items on the list . <xor_gateway id=28> If </xor_gateway> <condition_specification id=29> all is in order </condition_specification> , <actor id=24> the treasurer </actor> <activity id=30> accepts </activity> <activity_data id=31> the expenses </activity_data> for processing ( including , e.g . , payment or refund , and accounting ) . <xor_gateway id=32> If </xor_gateway> <condition_specification id=33> receipts are missing or do not match the report </condition_specification> , <actor id=25> he </actor> <activity id=34> sends </activity> <activity_data id=10> it </activity_data> back to <actor id=2> the employee </actor> . If a report returns to the employee for corrections , it must again go to a supervisor , even if the supervisor previously approved the report . If the treasurer accepts the expenses for processing , the report moves to an automatic activity that links to a payment system . The process waits for the payment confirmation . After <activity_data id=35> the payment </activity_data> is <activity id=36> confirmed </activity> , the process ends .\n\nNo relations found.\n"], "steps": [["relations"], ["relations"], ["relations"]], "formatter_args": [{"prompt": "pet/re/iterative/same_gateway.txt", "only_tags": ["same gateway"], "context_tags": null}, {"prompt": "pet/re/iterative/flow.txt", "only_tags": ["flow"], "context_tags": null}, {"prompt": "pet/re/iterative/remaining.txt", "only_tags": ["uses", "actor performer", "actor recipient", "further specification"], "context_tags": null}], "formatters": ["PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy"], "input_tokens": 3413, "output_tokens": 12, "total_costs": 0.0017245000000000003, "answers": ["No relations found.", "No relations found.", "No relations found."], "original_id": "doc-5.4"}]}, {"meta": {"num_shots": 0, "model": "gpt-3.5-turbo-0125", "temperature": 0.0}, "results": [{"prompts": ["System: # Task\n\nYou are a business process modelling expert, tasked with identifying if two xor_gateways refer to the same decision point, and merely represent two possible paths in the process.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **same gateway**: Focus on XOR_Gateway mentions and their corresponding condition_specification. Find the next XOR_Gateway and its condition_specification in the text. If the two condition specifications describe the same decision, i.e., the first describes what to do in one case and the second in the other case, then extract a relation of type \"same gateway\" for the XOR_Gateways preceding the respective condition_specification.\n\n# Format\n\nDetect that two XOR_Gateways are the same, by listing the type of the relation (always \"same gateway\"), the index of the first one (source mention index), and the one appearing later in the text (target mention index), separated by tabs. List one relation per line.\n\nsame gateway\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\n<xor_gateway id=1> If </xor_gateway> <condition_specification id=0> the LLM finds two gateways that are the same </condition_specification>, <actor id=2> it </actor> <activity id=4> extracts </activity> <activity_data id=3> the relation </activity_data> . <xor_gateway id=5> Otherwise </xor_gateway> , <actor id=6> it </actor> <activity id=7> continues </activity> .\n\nYou will extract these relations\n\nsame gateway\t1\t5\n\n# Restrictions\n\nRule 1. Two XOR_Gateways or two AND_Gateway are only the same gateway, if they describe two paths of the same decision. There may appear multiple XOR_Gateways in the text, that are different decisions, and therefore are not the same gateway.\n\nRule 2. One XOR_Gateway be at most part of one \"same gateway\" relation.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nI am the HR clerk . When <activity_data id=0> a vacancy </activity_data> is <activity id=1> reported </activity> to <actor id=7> me </actor> , <actor id=2> I </actor> <activity id=8> create </activity> <activity_data id=9> a job description from the information </activity_data> . <xor_gateway id=13> Sometimes </xor_gateway> <condition_specification id=14> there is still confusion in the message </condition_specification> , then <actor id=6> I </actor> must <activity id=15> ask </activity> <actor id=16> the Department </actor> again . <actor id=5> I </actor> am <activity id=17> submitting </activity> <activity_data id=10> the job description </activity_data> for consideration and <activity id=18> waiting </activity> for <activity_data id=19> the approval </activity_data> . But , <xor_gateway id=20> it can also happen that </xor_gateway> <condition_specification id=21> the department does not approve it </condition_specification> , but rejects it , and <activity id=22> requests </activity> <activity_data id=23> a correction </activity_data> . Then <actor id=4> I </actor> <activity id=24> correct </activity> <activity_data id=11> the description </activity_data> and <activity id=25> submit </activity> <activity_data id=12> it </activity_data> again for consideration . <xor_gateway id=26> If </xor_gateway> <condition_specification id=27> the description is finally approved </condition_specification> , <actor id=3> I </actor> <activity id=28> post </activity> <activity_data id=29> the job </activity_data> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying the flow between business process relevant tasks in textual descriptions of business processes.\nThese tasks have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it. There are also some relations already extracted, which you can use for context during extracting flows.\n\n# Definition\n\nFlows are directed and therefore have a source mention and a target mention.\n\n**Flow**: Focus on the behavioural elements, which are mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". Extract the flow between behavioural elements, i.e., extract a relation of type \"flow\", if the text describes that one behavioural element is relevant during the process, before another behavioural element is.\nA flow relation between one behavioural element means, that it is relevant before another behavioural element, when the process is executed, e.g., if there is a flow between an \"XOR_Gateway\" and a \"Condition_Specification\" the XOR_Gateway is visited first (like an exclusive gateway in a BPMN process model), then the condition specification is relevant (like the condition in a BPMN process model). Afterwards there may be a flow between this \"Condition_Specification\" and an \"Activity\", because the condition is relevant first, and if it is fulfilled the employee has to perform the activity.\n\n# Format\n\nRetrieve a relation by listing the type (always \"flow\"), the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\nflow\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> and <activity id=3> sends </activity> <activity_data id=4> it </activity_data> back .\n\nYou will extract these relations\n\nflow\t0\t3\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nI am the HR clerk . When <activity_data id=0> a vacancy </activity_data> is <activity id=1> reported </activity> to <actor id=7> me </actor> , <actor id=2> I </actor> <activity id=8> create </activity> <activity_data id=9> a job description from the information </activity_data> . <xor_gateway id=13> Sometimes </xor_gateway> <condition_specification id=14> there is still confusion in the message </condition_specification> , then <actor id=6> I </actor> must <activity id=15> ask </activity> <actor id=16> the Department </actor> again . <actor id=5> I </actor> am <activity id=17> submitting </activity> <activity_data id=10> the job description </activity_data> for consideration and <activity id=18> waiting </activity> for <activity_data id=19> the approval </activity_data> . But , <xor_gateway id=20> it can also happen that </xor_gateway> <condition_specification id=21> the department does not approve it </condition_specification> , but rejects it , and <activity id=22> requests </activity> <activity_data id=23> a correction </activity_data> . Then <actor id=4> I </actor> <activity id=24> correct </activity> <activity_data id=11> the description </activity_data> and <activity id=25> submit </activity> <activity_data id=12> it </activity_data> again for consideration . <xor_gateway id=26> If </xor_gateway> <condition_specification id=27> the description is finally approved </condition_specification> , <actor id=3> I </actor> <activity id=28> post </activity> <activity_data id=29> the job </activity_data> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying relations between mentions of business process relevant facts in textual descriptions of business processes.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n# Format\n\nRetrieve a relation by listing the relation type, the source mention index, and the target mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\nYou will extract these relations\n\nactor performer\t0\t1\nuses\t0\t2\n\n# Restrictions\n\nRule 1. Only extract relations with types, that are defined in chapter **Relation Types**.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nI am the HR clerk . When <activity_data id=0> a vacancy </activity_data> is <activity id=1> reported </activity> to <actor id=7> me </actor> , <actor id=2> I </actor> <activity id=8> create </activity> <activity_data id=9> a job description from the information </activity_data> . <xor_gateway id=13> Sometimes </xor_gateway> <condition_specification id=14> there is still confusion in the message </condition_specification> , then <actor id=6> I </actor> must <activity id=15> ask </activity> <actor id=16> the Department </actor> again . <actor id=5> I </actor> am <activity id=17> submitting </activity> <activity_data id=10> the job description </activity_data> for consideration and <activity id=18> waiting </activity> for <activity_data id=19> the approval </activity_data> . But , <xor_gateway id=20> it can also happen that </xor_gateway> <condition_specification id=21> the department does not approve it </condition_specification> , but rejects it , and <activity id=22> requests </activity> <activity_data id=23> a correction </activity_data> . Then <actor id=4> I </actor> <activity id=24> correct </activity> <activity_data id=11> the description </activity_data> and <activity id=25> submit </activity> <activity_data id=12> it </activity_data> again for consideration . <xor_gateway id=26> If </xor_gateway> <condition_specification id=27> the description is finally approved </condition_specification> , <actor id=3> I </actor> <activity id=28> post </activity> <activity_data id=29> the job </activity_data> .\n\nNo relations found.\n"], "steps": [["relations"], ["relations"], ["relations"]], "formatter_args": [{"prompt": "pet/re/iterative/same_gateway.txt", "only_tags": ["same gateway"], "context_tags": null}, {"prompt": "pet/re/iterative/flow.txt", "only_tags": ["flow"], "context_tags": null}, {"prompt": "pet/re/iterative/remaining.txt", "only_tags": ["uses", "actor performer", "actor recipient", "further specification"], "context_tags": null}], "formatters": ["PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy"], "input_tokens": 2681, "output_tokens": 12, "total_costs": 0.0013585, "answers": ["No relations found.", "No relations found.", "No relations found."], "original_id": "doc-8.2"}]}, {"meta": {"num_shots": 0, "model": "gpt-3.5-turbo-0125", "temperature": 0.0}, "results": [{"prompts": ["System: # Task\n\nYou are a business process modelling expert, tasked with identifying if two xor_gateways refer to the same decision point, and merely represent two possible paths in the process.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **same gateway**: Focus on XOR_Gateway mentions and their corresponding condition_specification. Find the next XOR_Gateway and its condition_specification in the text. If the two condition specifications describe the same decision, i.e., the first describes what to do in one case and the second in the other case, then extract a relation of type \"same gateway\" for the XOR_Gateways preceding the respective condition_specification.\n\n# Format\n\nDetect that two XOR_Gateways are the same, by listing the type of the relation (always \"same gateway\"), the index of the first one (source mention index), and the one appearing later in the text (target mention index), separated by tabs. List one relation per line.\n\nsame gateway\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\n<xor_gateway id=1> If </xor_gateway> <condition_specification id=0> the LLM finds two gateways that are the same </condition_specification>, <actor id=2> it </actor> <activity id=4> extracts </activity> <activity_data id=3> the relation </activity_data> . <xor_gateway id=5> Otherwise </xor_gateway> , <actor id=6> it </actor> <activity id=7> continues </activity> .\n\nYou will extract these relations\n\nsame gateway\t1\t5\n\n# Restrictions\n\nRule 1. Two XOR_Gateways or two AND_Gateway are only the same gateway, if they describe two paths of the same decision. There may appear multiple XOR_Gateways in the text, that are different decisions, and therefore are not the same gateway.\n\nRule 2. One XOR_Gateway be at most part of one \"same gateway\" relation.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nEach morning , <activity_data id=0> the files which have yet to be processed </activity_data> need to be <activity id=3> checked </activity> , to make sure they are in order for the court hearing that day . <xor_gateway id=4> If </xor_gateway> <condition_specification id=5> some files are missing </condition_specification> , <activity_data id=6> a search </activity_data> is <activity id=7> initiated </activity> , <xor_gateway id=8> otherwise </xor_gateway> <activity_data id=1> the files </activity_data> can be physically <activity id=9> tracked </activity> <further_specification id=10> to the intended location </further_specification> . Once all the files are ready , <activity_data id=2> these </activity_data> are <activity id=11> handed </activity> to <actor id=12> the Associate </actor> , and <and_gateway id=13> meantime </and_gateway> <activity_data id=14> the Judgeis Lawlist </activity_data> is <activity id=15> distributed </activity> to <actor id=16> the relevant people </actor> . Afterwards , <activity_data id=17> the directions hearings </activity_data> are <activity id=18> conducted </activity> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying the flow between business process relevant tasks in textual descriptions of business processes.\nThese tasks have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it. There are also some relations already extracted, which you can use for context during extracting flows.\n\n# Definition\n\nFlows are directed and therefore have a source mention and a target mention.\n\n**Flow**: Focus on the behavioural elements, which are mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". Extract the flow between behavioural elements, i.e., extract a relation of type \"flow\", if the text describes that one behavioural element is relevant during the process, before another behavioural element is.\nA flow relation between one behavioural element means, that it is relevant before another behavioural element, when the process is executed, e.g., if there is a flow between an \"XOR_Gateway\" and a \"Condition_Specification\" the XOR_Gateway is visited first (like an exclusive gateway in a BPMN process model), then the condition specification is relevant (like the condition in a BPMN process model). Afterwards there may be a flow between this \"Condition_Specification\" and an \"Activity\", because the condition is relevant first, and if it is fulfilled the employee has to perform the activity.\n\n# Format\n\nRetrieve a relation by listing the type (always \"flow\"), the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\nflow\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> and <activity id=3> sends </activity> <activity_data id=4> it </activity_data> back .\n\nYou will extract these relations\n\nflow\t0\t3\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nEach morning , <activity_data id=0> the files which have yet to be processed </activity_data> need to be <activity id=3> checked </activity> , to make sure they are in order for the court hearing that day . <xor_gateway id=4> If </xor_gateway> <condition_specification id=5> some files are missing </condition_specification> , <activity_data id=6> a search </activity_data> is <activity id=7> initiated </activity> , <xor_gateway id=8> otherwise </xor_gateway> <activity_data id=1> the files </activity_data> can be physically <activity id=9> tracked </activity> <further_specification id=10> to the intended location </further_specification> . Once all the files are ready , <activity_data id=2> these </activity_data> are <activity id=11> handed </activity> to <actor id=12> the Associate </actor> , and <and_gateway id=13> meantime </and_gateway> <activity_data id=14> the Judgeis Lawlist </activity_data> is <activity id=15> distributed </activity> to <actor id=16> the relevant people </actor> . Afterwards , <activity_data id=17> the directions hearings </activity_data> are <activity id=18> conducted </activity> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying relations between mentions of business process relevant facts in textual descriptions of business processes.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n# Format\n\nRetrieve a relation by listing the relation type, the source mention index, and the target mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\nYou will extract these relations\n\nactor performer\t0\t1\nuses\t0\t2\n\n# Restrictions\n\nRule 1. Only extract relations with types, that are defined in chapter **Relation Types**.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nEach morning , <activity_data id=0> the files which have yet to be processed </activity_data> need to be <activity id=3> checked </activity> , to make sure they are in order for the court hearing that day . <xor_gateway id=4> If </xor_gateway> <condition_specification id=5> some files are missing </condition_specification> , <activity_data id=6> a search </activity_data> is <activity id=7> initiated </activity> , <xor_gateway id=8> otherwise </xor_gateway> <activity_data id=1> the files </activity_data> can be physically <activity id=9> tracked </activity> <further_specification id=10> to the intended location </further_specification> . Once all the files are ready , <activity_data id=2> these </activity_data> are <activity id=11> handed </activity> to <actor id=12> the Associate </actor> , and <and_gateway id=13> meantime </and_gateway> <activity_data id=14> the Judgeis Lawlist </activity_data> is <activity id=15> distributed </activity> to <actor id=16> the relevant people </actor> . Afterwards , <activity_data id=17> the directions hearings </activity_data> are <activity id=18> conducted </activity> .\n\nNo relations found.\n"], "steps": [["relations"], ["relations"], ["relations"]], "formatter_args": [{"prompt": "pet/re/iterative/same_gateway.txt", "only_tags": ["same gateway"], "context_tags": null}, {"prompt": "pet/re/iterative/flow.txt", "only_tags": ["flow"], "context_tags": null}, {"prompt": "pet/re/iterative/remaining.txt", "only_tags": ["uses", "actor performer", "actor recipient", "further specification"], "context_tags": null}], "formatters": ["PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy"], "input_tokens": 2330, "output_tokens": 43, "total_costs": 0.0012295000000000001, "answers": ["No relations found.", "flow\t0\t3\nflow\t5\t7\nflow\t7\t9\nflow\t9\t10\nflow\t11\t15\nflow\t15\t18", "No relations found."], "original_id": "doc-3.2"}]}, {"meta": {"num_shots": 0, "model": "gpt-3.5-turbo-0125", "temperature": 0.0}, "results": [{"prompts": ["System: # Task\n\nYou are a business process modelling expert, tasked with identifying if two xor_gateways refer to the same decision point, and merely represent two possible paths in the process.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **same gateway**: Focus on XOR_Gateway mentions and their corresponding condition_specification. Find the next XOR_Gateway and its condition_specification in the text. If the two condition specifications describe the same decision, i.e., the first describes what to do in one case and the second in the other case, then extract a relation of type \"same gateway\" for the XOR_Gateways preceding the respective condition_specification.\n\n# Format\n\nDetect that two XOR_Gateways are the same, by listing the type of the relation (always \"same gateway\"), the index of the first one (source mention index), and the one appearing later in the text (target mention index), separated by tabs. List one relation per line.\n\nsame gateway\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\n<xor_gateway id=1> If </xor_gateway> <condition_specification id=0> the LLM finds two gateways that are the same </condition_specification>, <actor id=2> it </actor> <activity id=4> extracts </activity> <activity_data id=3> the relation </activity_data> . <xor_gateway id=5> Otherwise </xor_gateway> , <actor id=6> it </actor> <activity id=7> continues </activity> .\n\nYou will extract these relations\n\nsame gateway\t1\t5\n\n# Restrictions\n\nRule 1. Two XOR_Gateways or two AND_Gateway are only the same gateway, if they describe two paths of the same decision. There may appear multiple XOR_Gateways in the text, that are different decisions, and therefore are not the same gateway.\n\nRule 2. One XOR_Gateway be at most part of one \"same gateway\" relation.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nAs a basic principle , <actor id=0> ACME AG </actor> <activity id=1> receives </activity> <activity_data id=3> invoices </activity_data> on paper or fax . <activity_data id=2> These </activity_data> are <activity id=4> received </activity> by <actor id=5> the Secretariat </actor> in the central inbox and <activity id=6> forwarded </activity> after <further_specification id=7> a short visual </further_specification> <activity id=8> inspection </activity> to <actor id=9> an accounting employee </actor> . In `` ACME Financial Accounting `` , a software specially developed for the ACME AG , <actor id=10> she </actor> <activity id=18> identifies </activity> <activity_data id=19> the charging suppliers </activity_data> and <activity id=20> creates </activity> <activity_data id=21> a new instance </activity_data> ( invoice ) . <actor id=11> She </actor> then <activity id=22> checks </activity> <activity_data id=23> the invoice items </activity_data> and <activity id=24> notes </activity> <activity_data id=25> the corresponding cost center at the ACME AG and the related cost center managers for each position </activity_data> on a separate form ( `` docket `` ) . <activity_data id=26> The docket and the copy of the invoice </activity_data> <activity id=28> go </activity> to the internal mail together and are <activity id=29> sent </activity> to <actor id=30> the first cost center manager </actor> to the list . <actor id=31> He </actor> <activity id=33> reviews </activity> <activity_data id=34> the content </activity_data> <further_specification id=35> for accuracy </further_specification> after <activity id=36> receiving </activity> <activity_data id=37> the copy of the invoice </activity_data> . <xor_gateway id=43> Should </xor_gateway> <condition_specification id=44> everything be in order </condition_specification> , <actor id=32> he </actor> <activity id=45> notes </activity> <activity_data id=46> his code </activity_data> one <further_specification id=47> on the docket </further_specification> ( `` accurate position - AP `` ) and <activity id=48> returns </activity> <activity_data id=42> the copy of the invoice </activity_data> to <actor id=49> the internal mail </actor> . From it , <activity_data id=41> the copy of the invoice </activity_data> is <activity id=50> passed on </activity> to <actor id=51> the next cost center manager </actor> , based on the docket , or <xor_gateway id=52> if </xor_gateway> <condition_specification id=53> all items are marked correct </condition_specification> , <activity id=54> sent back </activity> to <actor id=55> accounting </actor> . Therefore , the copy of invoice and the docket gradually move through the hands of all cost center managers until all positions are marked as completely accurate . However , <xor_gateway id=56> if </xor_gateway> <condition_specification id=57> inconsistencies exist </condition_specification> , e.g . because the ordered product is not of the expected quantity or quality , <actor id=58> the cost center manager </actor> <activity id=59> rejects </activity> <activity_data id=60> the AP </activity_data> with a note and explanatory statement on the docket , and <activity_data id=40> the copy of the invoice </activity_data> is <activity id=61> sent back </activity> to <actor id=62> accounting </actor> directly . Based on the statements of the cost center managers , <actor id=17> she </actor> will <activity id=63> proceede </activity> with <activity_data id=64> the clarification with the vendor </activity_data> , but , <xor_gateway id=65> if </xor_gateway> <condition_specification id=66> necessary </condition_specification> , <actor id=16> she </actor> <activity id=67> consults </activity> <actor id=68> the cost center managers </actor> by telephone or e-mail again . When all inconsistencies are resolved , <activity_data id=39> the copy of the invoice </activity_data> is <activity id=70> sent </activity> to <actor id=69> the cost center managers </actor> again , and the process continues . After all invoice items are AP , <actor id=15> the accounting employee </actor> <activity id=71> forwards </activity> <activity_data id=38> the copy of the invoice </activity_data> to <actor id=72> the commercial manager </actor> . <actor id=73> He </actor> <activity id=74> makes </activity> <activity_data id=75> the commercial audit </activity_data> and <activity id=76> issues </activity> <activity_data id=77> the approval for payment </activity_data> . <xor_gateway id=78> If </xor_gateway> <condition_specification id=79> the bill amount exceeds EUR 20 </condition_specification> , <actor id=80> the Board </actor> wants to <activity id=81> check </activity> <activity_data id=82> it </activity_data> again ( 4 - eyes-principle ) . <activity_data id=27> The copy of the invoice including the docket </activity_data> <activity id=83> moves back </activity> to <actor id=14> the accounting employee </actor> <further_specification id=84> in the appropriate signature file </further_specification> . <xor_gateway id=85> Should </xor_gateway> <condition_specification id=86> there be a complaint during the commercial audit </condition_specification> , <activity_data id=87> it </activity_data> will be <activity id=88> resolved </activity> by <actor id=13> the accounting employee </actor> with the supplier . After the commercial audit is successfully completed , <actor id=12> the accounting employee </actor> <activity id=89> gives </activity> <activity_data id=90> payment instructions </activity_data> and <activity id=91> closes </activity> <activity_data id=92> the instance in `` ACME financial accounting `` </activity_data> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying the flow between business process relevant tasks in textual descriptions of business processes.\nThese tasks have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it. There are also some relations already extracted, which you can use for context during extracting flows.\n\n# Definition\n\nFlows are directed and therefore have a source mention and a target mention.\n\n**Flow**: Focus on the behavioural elements, which are mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". Extract the flow between behavioural elements, i.e., extract a relation of type \"flow\", if the text describes that one behavioural element is relevant during the process, before another behavioural element is.\nA flow relation between one behavioural element means, that it is relevant before another behavioural element, when the process is executed, e.g., if there is a flow between an \"XOR_Gateway\" and a \"Condition_Specification\" the XOR_Gateway is visited first (like an exclusive gateway in a BPMN process model), then the condition specification is relevant (like the condition in a BPMN process model). Afterwards there may be a flow between this \"Condition_Specification\" and an \"Activity\", because the condition is relevant first, and if it is fulfilled the employee has to perform the activity.\n\n# Format\n\nRetrieve a relation by listing the type (always \"flow\"), the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\nflow\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> and <activity id=3> sends </activity> <activity_data id=4> it </activity_data> back .\n\nYou will extract these relations\n\nflow\t0\t3\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nAs a basic principle , <actor id=0> ACME AG </actor> <activity id=1> receives </activity> <activity_data id=3> invoices </activity_data> on paper or fax . <activity_data id=2> These </activity_data> are <activity id=4> received </activity> by <actor id=5> the Secretariat </actor> in the central inbox and <activity id=6> forwarded </activity> after <further_specification id=7> a short visual </further_specification> <activity id=8> inspection </activity> to <actor id=9> an accounting employee </actor> . In `` ACME Financial Accounting `` , a software specially developed for the ACME AG , <actor id=10> she </actor> <activity id=18> identifies </activity> <activity_data id=19> the charging suppliers </activity_data> and <activity id=20> creates </activity> <activity_data id=21> a new instance </activity_data> ( invoice ) . <actor id=11> She </actor> then <activity id=22> checks </activity> <activity_data id=23> the invoice items </activity_data> and <activity id=24> notes </activity> <activity_data id=25> the corresponding cost center at the ACME AG and the related cost center managers for each position </activity_data> on a separate form ( `` docket `` ) . <activity_data id=26> The docket and the copy of the invoice </activity_data> <activity id=28> go </activity> to the internal mail together and are <activity id=29> sent </activity> to <actor id=30> the first cost center manager </actor> to the list . <actor id=31> He </actor> <activity id=33> reviews </activity> <activity_data id=34> the content </activity_data> <further_specification id=35> for accuracy </further_specification> after <activity id=36> receiving </activity> <activity_data id=37> the copy of the invoice </activity_data> . <xor_gateway id=43> Should </xor_gateway> <condition_specification id=44> everything be in order </condition_specification> , <actor id=32> he </actor> <activity id=45> notes </activity> <activity_data id=46> his code </activity_data> one <further_specification id=47> on the docket </further_specification> ( `` accurate position - AP `` ) and <activity id=48> returns </activity> <activity_data id=42> the copy of the invoice </activity_data> to <actor id=49> the internal mail </actor> . From it , <activity_data id=41> the copy of the invoice </activity_data> is <activity id=50> passed on </activity> to <actor id=51> the next cost center manager </actor> , based on the docket , or <xor_gateway id=52> if </xor_gateway> <condition_specification id=53> all items are marked correct </condition_specification> , <activity id=54> sent back </activity> to <actor id=55> accounting </actor> . Therefore , the copy of invoice and the docket gradually move through the hands of all cost center managers until all positions are marked as completely accurate . However , <xor_gateway id=56> if </xor_gateway> <condition_specification id=57> inconsistencies exist </condition_specification> , e.g . because the ordered product is not of the expected quantity or quality , <actor id=58> the cost center manager </actor> <activity id=59> rejects </activity> <activity_data id=60> the AP </activity_data> with a note and explanatory statement on the docket , and <activity_data id=40> the copy of the invoice </activity_data> is <activity id=61> sent back </activity> to <actor id=62> accounting </actor> directly . Based on the statements of the cost center managers , <actor id=17> she </actor> will <activity id=63> proceede </activity> with <activity_data id=64> the clarification with the vendor </activity_data> , but , <xor_gateway id=65> if </xor_gateway> <condition_specification id=66> necessary </condition_specification> , <actor id=16> she </actor> <activity id=67> consults </activity> <actor id=68> the cost center managers </actor> by telephone or e-mail again . When all inconsistencies are resolved , <activity_data id=39> the copy of the invoice </activity_data> is <activity id=70> sent </activity> to <actor id=69> the cost center managers </actor> again , and the process continues . After all invoice items are AP , <actor id=15> the accounting employee </actor> <activity id=71> forwards </activity> <activity_data id=38> the copy of the invoice </activity_data> to <actor id=72> the commercial manager </actor> . <actor id=73> He </actor> <activity id=74> makes </activity> <activity_data id=75> the commercial audit </activity_data> and <activity id=76> issues </activity> <activity_data id=77> the approval for payment </activity_data> . <xor_gateway id=78> If </xor_gateway> <condition_specification id=79> the bill amount exceeds EUR 20 </condition_specification> , <actor id=80> the Board </actor> wants to <activity id=81> check </activity> <activity_data id=82> it </activity_data> again ( 4 - eyes-principle ) . <activity_data id=27> The copy of the invoice including the docket </activity_data> <activity id=83> moves back </activity> to <actor id=14> the accounting employee </actor> <further_specification id=84> in the appropriate signature file </further_specification> . <xor_gateway id=85> Should </xor_gateway> <condition_specification id=86> there be a complaint during the commercial audit </condition_specification> , <activity_data id=87> it </activity_data> will be <activity id=88> resolved </activity> by <actor id=13> the accounting employee </actor> with the supplier . After the commercial audit is successfully completed , <actor id=12> the accounting employee </actor> <activity id=89> gives </activity> <activity_data id=90> payment instructions </activity_data> and <activity id=91> closes </activity> <activity_data id=92> the instance in `` ACME financial accounting `` </activity_data> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying relations between mentions of business process relevant facts in textual descriptions of business processes.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n# Format\n\nRetrieve a relation by listing the relation type, the source mention index, and the target mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\nYou will extract these relations\n\nactor performer\t0\t1\nuses\t0\t2\n\n# Restrictions\n\nRule 1. Only extract relations with types, that are defined in chapter **Relation Types**.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\nAs a basic principle , <actor id=0> ACME AG </actor> <activity id=1> receives </activity> <activity_data id=3> invoices </activity_data> on paper or fax . <activity_data id=2> These </activity_data> are <activity id=4> received </activity> by <actor id=5> the Secretariat </actor> in the central inbox and <activity id=6> forwarded </activity> after <further_specification id=7> a short visual </further_specification> <activity id=8> inspection </activity> to <actor id=9> an accounting employee </actor> . In `` ACME Financial Accounting `` , a software specially developed for the ACME AG , <actor id=10> she </actor> <activity id=18> identifies </activity> <activity_data id=19> the charging suppliers </activity_data> and <activity id=20> creates </activity> <activity_data id=21> a new instance </activity_data> ( invoice ) . <actor id=11> She </actor> then <activity id=22> checks </activity> <activity_data id=23> the invoice items </activity_data> and <activity id=24> notes </activity> <activity_data id=25> the corresponding cost center at the ACME AG and the related cost center managers for each position </activity_data> on a separate form ( `` docket `` ) . <activity_data id=26> The docket and the copy of the invoice </activity_data> <activity id=28> go </activity> to the internal mail together and are <activity id=29> sent </activity> to <actor id=30> the first cost center manager </actor> to the list . <actor id=31> He </actor> <activity id=33> reviews </activity> <activity_data id=34> the content </activity_data> <further_specification id=35> for accuracy </further_specification> after <activity id=36> receiving </activity> <activity_data id=37> the copy of the invoice </activity_data> . <xor_gateway id=43> Should </xor_gateway> <condition_specification id=44> everything be in order </condition_specification> , <actor id=32> he </actor> <activity id=45> notes </activity> <activity_data id=46> his code </activity_data> one <further_specification id=47> on the docket </further_specification> ( `` accurate position - AP `` ) and <activity id=48> returns </activity> <activity_data id=42> the copy of the invoice </activity_data> to <actor id=49> the internal mail </actor> . From it , <activity_data id=41> the copy of the invoice </activity_data> is <activity id=50> passed on </activity> to <actor id=51> the next cost center manager </actor> , based on the docket , or <xor_gateway id=52> if </xor_gateway> <condition_specification id=53> all items are marked correct </condition_specification> , <activity id=54> sent back </activity> to <actor id=55> accounting </actor> . Therefore , the copy of invoice and the docket gradually move through the hands of all cost center managers until all positions are marked as completely accurate . However , <xor_gateway id=56> if </xor_gateway> <condition_specification id=57> inconsistencies exist </condition_specification> , e.g . because the ordered product is not of the expected quantity or quality , <actor id=58> the cost center manager </actor> <activity id=59> rejects </activity> <activity_data id=60> the AP </activity_data> with a note and explanatory statement on the docket , and <activity_data id=40> the copy of the invoice </activity_data> is <activity id=61> sent back </activity> to <actor id=62> accounting </actor> directly . Based on the statements of the cost center managers , <actor id=17> she </actor> will <activity id=63> proceede </activity> with <activity_data id=64> the clarification with the vendor </activity_data> , but , <xor_gateway id=65> if </xor_gateway> <condition_specification id=66> necessary </condition_specification> , <actor id=16> she </actor> <activity id=67> consults </activity> <actor id=68> the cost center managers </actor> by telephone or e-mail again . When all inconsistencies are resolved , <activity_data id=39> the copy of the invoice </activity_data> is <activity id=70> sent </activity> to <actor id=69> the cost center managers </actor> again , and the process continues . After all invoice items are AP , <actor id=15> the accounting employee </actor> <activity id=71> forwards </activity> <activity_data id=38> the copy of the invoice </activity_data> to <actor id=72> the commercial manager </actor> . <actor id=73> He </actor> <activity id=74> makes </activity> <activity_data id=75> the commercial audit </activity_data> and <activity id=76> issues </activity> <activity_data id=77> the approval for payment </activity_data> . <xor_gateway id=78> If </xor_gateway> <condition_specification id=79> the bill amount exceeds EUR 20 </condition_specification> , <actor id=80> the Board </actor> wants to <activity id=81> check </activity> <activity_data id=82> it </activity_data> again ( 4 - eyes-principle ) . <activity_data id=27> The copy of the invoice including the docket </activity_data> <activity id=83> moves back </activity> to <actor id=14> the accounting employee </actor> <further_specification id=84> in the appropriate signature file </further_specification> . <xor_gateway id=85> Should </xor_gateway> <condition_specification id=86> there be a complaint during the commercial audit </condition_specification> , <activity_data id=87> it </activity_data> will be <activity id=88> resolved </activity> by <actor id=13> the accounting employee </actor> with the supplier . After the commercial audit is successfully completed , <actor id=12> the accounting employee </actor> <activity id=89> gives </activity> <activity_data id=90> payment instructions </activity_data> and <activity id=91> closes </activity> <activity_data id=92> the instance in `` ACME financial accounting `` </activity_data> .\n\nNo relations found.\n"], "steps": [["relations"], ["relations"], ["relations"]], "formatter_args": [{"prompt": "pet/re/iterative/same_gateway.txt", "only_tags": ["same gateway"], "context_tags": null}, {"prompt": "pet/re/iterative/flow.txt", "only_tags": ["flow"], "context_tags": null}, {"prompt": "pet/re/iterative/remaining.txt", "only_tags": ["uses", "actor performer", "actor recipient", "further specification"], "context_tags": null}], "formatters": ["PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy"], "input_tokens": 5786, "output_tokens": 151, "total_costs": 0.0031195, "answers": ["No relations found.", "flow\t1\t4\nflow\t4\t6\nflow\t6\t8\nflow\t18\t20\nflow\t20\t22\nflow\t22\t24\nflow\t24\t28\nflow\t28\t29\nflow\t33\t36\nflow\t36\t45\nflow\t45\t48\nflow\t48\t50\nflow\t50\t54\nflow\t54\t55\nflow\t59\t61\nflow\t61\t63\nflow\t63\t67\nflow\t67\t70\nflow\t70\t71\nflow\t71\t74\nflow\t74\t76\nflow\t76\t83\nflow\t83\t89\nflow\t89\t91", "No relations found."], "original_id": "doc-6.1"}]}, {"meta": {"num_shots": 0, "model": "gpt-3.5-turbo-0125", "temperature": 0.0}, "results": [{"prompts": ["System: # Task\n\nYou are a business process modelling expert, tasked with identifying if two xor_gateways refer to the same decision point, and merely represent two possible paths in the process.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **same gateway**: Focus on XOR_Gateway mentions and their corresponding condition_specification. Find the next XOR_Gateway and its condition_specification in the text. If the two condition specifications describe the same decision, i.e., the first describes what to do in one case and the second in the other case, then extract a relation of type \"same gateway\" for the XOR_Gateways preceding the respective condition_specification.\n\n# Format\n\nDetect that two XOR_Gateways are the same, by listing the type of the relation (always \"same gateway\"), the index of the first one (source mention index), and the one appearing later in the text (target mention index), separated by tabs. List one relation per line.\n\nsame gateway\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\n<xor_gateway id=1> If </xor_gateway> <condition_specification id=0> the LLM finds two gateways that are the same </condition_specification>, <actor id=2> it </actor> <activity id=4> extracts </activity> <activity_data id=3> the relation </activity_data> . <xor_gateway id=5> Otherwise </xor_gateway> , <actor id=6> it </actor> <activity id=7> continues </activity> .\n\nYou will extract these relations\n\nsame gateway\t1\t5\n\n# Restrictions\n\nRule 1. Two XOR_Gateways or two AND_Gateway are only the same gateway, if they describe two paths of the same decision. There may appear multiple XOR_Gateways in the text, that are different decisions, and therefore are not the same gateway.\n\nRule 2. One XOR_Gateway be at most part of one \"same gateway\" relation.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=1> The MSPN </actor> <activity id=2> registers </activity> <activity_data id=3> the measurement </activity_data> at <actor id=4> the GO </actor> . <actor id=10> The GO </actor> <activity id=12> examines </activity> <activity_data id=13> the application of the MSPN </activity_data> . <actor id=9> The GO </actor> <activity id=16> rejects </activity> <activity_data id=15> the application of the MSPN </activity_data> <xor_gateway id=17> or </xor_gateway> <actor id=11> the GO </actor> <activity id=18> confirmes </activity> <activity_data id=14> the application of the MSPN </activity_data> . <actor id=8> The GO </actor> <activity id=19> assigns </activity> <activity_data id=0> the MSPN </activity_data> . <actor id=7> The GO </actor> <activity id=20> informs </activity> <actor id=21> the MSPO </actor> <activity_data id=22> about the assignment of MSPN </activity_data> . <actor id=6> The GO </actor> <activity id=25> informs </activity> <actor id=26> the MPO </actor> <activity_data id=23> about the assignment of the MSPN </activity_data> . <actor id=5> The GO </actor> <activity id=27> informs </activity> <actor id=28> the SP </actor> <activity_data id=24> about the assignment of MSPN </activity_data> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying the flow between business process relevant tasks in textual descriptions of business processes.\nThese tasks have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it. There are also some relations already extracted, which you can use for context during extracting flows.\n\n# Definition\n\nFlows are directed and therefore have a source mention and a target mention.\n\n**Flow**: Focus on the behavioural elements, which are mentions of types \"Activity\", \"XOR_Gateway\", \"AND_Gateway\", and \"Condition_Specification\". Extract the flow between behavioural elements, i.e., extract a relation of type \"flow\", if the text describes that one behavioural element is relevant during the process, before another behavioural element is.\nA flow relation between one behavioural element means, that it is relevant before another behavioural element, when the process is executed, e.g., if there is a flow between an \"XOR_Gateway\" and a \"Condition_Specification\" the XOR_Gateway is visited first (like an exclusive gateway in a BPMN process model), then the condition specification is relevant (like the condition in a BPMN process model). Afterwards there may be a flow between this \"Condition_Specification\" and an \"Activity\", because the condition is relevant first, and if it is fulfilled the employee has to perform the activity.\n\n# Format\n\nRetrieve a relation by listing the type (always \"flow\"), the head mention index, and the tail mention index, separated by tabs. List one relation per line.\n\nflow\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> and <activity id=3> sends </activity> <activity_data id=4> it </activity_data> back .\n\nYou will extract these relations\n\nflow\t0\t3\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=1> The MSPN </actor> <activity id=2> registers </activity> <activity_data id=3> the measurement </activity_data> at <actor id=4> the GO </actor> . <actor id=10> The GO </actor> <activity id=12> examines </activity> <activity_data id=13> the application of the MSPN </activity_data> . <actor id=9> The GO </actor> <activity id=16> rejects </activity> <activity_data id=15> the application of the MSPN </activity_data> <xor_gateway id=17> or </xor_gateway> <actor id=11> the GO </actor> <activity id=18> confirmes </activity> <activity_data id=14> the application of the MSPN </activity_data> . <actor id=8> The GO </actor> <activity id=19> assigns </activity> <activity_data id=0> the MSPN </activity_data> . <actor id=7> The GO </actor> <activity id=20> informs </activity> <actor id=21> the MSPO </actor> <activity_data id=22> about the assignment of MSPN </activity_data> . <actor id=6> The GO </actor> <activity id=25> informs </activity> <actor id=26> the MPO </actor> <activity_data id=23> about the assignment of the MSPN </activity_data> . <actor id=5> The GO </actor> <activity id=27> informs </activity> <actor id=28> the SP </actor> <activity_data id=24> about the assignment of MSPN </activity_data> .\n\nNo relations found.\n", "System: # Task\n\nYou are a business process modelling expert, tasked with identifying relations between mentions of business process relevant facts in textual descriptions of business processes.\nThese mentions have a type and are marked in the given text by xml-style tags, which includes an id, you can use to refer to it.\n\n# Relation Types\n\nRelations are directed and therefore have a source mention and a target mention. Additionally, they have one of the types described below.\n\n- **uses**: Focus on mentions of type \"activity\". Find the \"activity_data\" mention, that is being used or created during the execution of this activity. If you find one, extract a relation of type \"uses\". The source mention is the activity, the target mention is the \"activity_data\" mention.\n\n- **actor performer**: Focus on mentions of type \"activity\" and look for the \"actor\", that actively performs the activity (not is passively affected by it!). If you find one, extract a relation of type \"actor performer\". The source mention is the \"activity\", and the target mention is the \"actor\".\n\n- **actor recipient**: Focus on mentions of type \"activity\" and look for the \"actor\", that receives the result of some activity execution, i.e., they are passively affected by the activity. If you find one, extract a relation of type \"actor recipient\". The source mention is the \"Activity\", the target mention is the \"Actor\".\n\n- **further specification**: Focus on mentions of type \"activity\". Try and find mentions of type \"further_specification\", that describe how this activity has to be executed, or describe the activity further. If you find one, extract a relation of type \"further_specification\", where the source mention is the activity and the target mention is the mention of type \"further_specification\".\n\n# Format\n\nRetrieve a relation by listing the relation type, the source mention index, and the target mention index, separated by tabs. List one relation per line.\n\n<relation-type>\t<source-mention-index>\t<target-mention-index>\n\n## Format Examples\n\nGiven the following input:\n\nthe <actor id=1> LLM </actor> <activity id=0> extracts </activity> <activity_data id=2> the text </activity> .\n\nYou will extract these relations\n\nactor performer\t0\t1\nuses\t0\t2\n\n# Restrictions\n\nRule 1. Only extract relations with types, that are defined in chapter **Relation Types**.\n\nHuman: Please retrieve all relations from the following text.\n\n# Text\n\n<actor id=1> The MSPN </actor> <activity id=2> registers </activity> <activity_data id=3> the measurement </activity_data> at <actor id=4> the GO </actor> . <actor id=10> The GO </actor> <activity id=12> examines </activity> <activity_data id=13> the application of the MSPN </activity_data> . <actor id=9> The GO </actor> <activity id=16> rejects </activity> <activity_data id=15> the application of the MSPN </activity_data> <xor_gateway id=17> or </xor_gateway> <actor id=11> the GO </actor> <activity id=18> confirmes </activity> <activity_data id=14> the application of the MSPN </activity_data> . <actor id=8> The GO </actor> <activity id=19> assigns </activity> <activity_data id=0> the MSPN </activity_data> . <actor id=7> The GO </actor> <activity id=20> informs </activity> <actor id=21> the MSPO </actor> <activity_data id=22> about the assignment of MSPN </activity_data> . <actor id=6> The GO </actor> <activity id=25> informs </activity> <actor id=26> the MPO </actor> <activity_data id=23> about the assignment of the MSPN </activity_data> . <actor id=5> The GO </actor> <activity id=27> informs </activity> <actor id=28> the SP </actor> <activity_data id=24> about the assignment of MSPN </activity_data> .\n\nNo relations found.\n"], "steps": [["relations"], ["relations"], ["relations"]], "formatter_args": [{"prompt": "pet/re/iterative/same_gateway.txt", "only_tags": ["same gateway"], "context_tags": null}, {"prompt": "pet/re/iterative/flow.txt", "only_tags": ["flow"], "context_tags": null}, {"prompt": "pet/re/iterative/remaining.txt", "only_tags": ["uses", "actor performer", "actor recipient", "further specification"], "context_tags": null}], "formatters": ["PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy", "PetIterativeRelationListingFormattingStrategy"], "input_tokens": 2564, "output_tokens": 12, "total_costs": 0.0013, "answers": ["No relations found.", "No relations found.", "No relations found."], "original_id": "doc-10.7"}]}]